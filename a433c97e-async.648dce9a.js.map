{"version":3,"sources":["src/ChartCodeRender/demos/common.tsx?dumi-raw","src/ChartCodeRender/demos/extra.tsx?dumi-raw","src/ChartCodeRender/demos/errorRender.tsx?dumi-raw","src/ChartCodeRender/demos/default.tsx?dumi-raw","node_modules/.pnpm/@ant-design+x@1.6.0_@types+node@24.3.0_antd@5.27.1_react-dom@18.3.1_react@18.3.1__react@18.3._7brnonqsl72gvei75cnklga4ve/node_modules/@ant-design/x/es/index.js","src/ChartCodeRender/index.md?type=demo","src/ChartCodeRender/index.en.md?type=text","src/ChartCodeRender/index.en.md?type=demo","src/ChartCodeRender/demos/stream.tsx?dumi-raw","node_modules/.pnpm/@antv+l7@2.23.0/node_modules/@antv/l7/es/index.js","src/index.ts"],"sourcesContent":["\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/common.tsx?watch=parent';\n  export default \"import { ChartType, Column, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"column\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"第一产业\\\", \\\"value\\\": 7200.0 },\\n    { \\\"category\\\": \\\"第二产业\\\", \\\"value\\\": 36600.0 },\\n    { \\\"category\\\": \\\"第三产业\\\" ,\\\"value\\\": 41000.0 },\\n    { \\\"category\\\": \\\"第四产业\\\" ,\\\"value\\\": 21000.0 },\\n    { \\\"category\\\": \\\"其他产业\\\" ,\\\"value\\\": 81000.0 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\n// 自定义代码块渲染组件，NOTE: withChartCode 不要直接放入函数内部，避免重复渲染抖动问题！！！\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Column]: Column },\\n  debug: true,\\n});\\n\\nexport default () => {\\n  return (\\n    <GPTVisLite\\n      components={{\\n        code: CodeComponent,\\n      }}\\n    >\\n      {markdownContent}\\n    </GPTVisLite>\\n  );\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/extra.tsx?watch=parent';\n  export default \"import type { CodeBlockComponent } from '@antv/gpt-vis';\\nimport { GPTVisLite, withDefaultChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\n/**\\n * 自定义代码块渲染器\\n */\\nconst MyUIRenderer: CodeBlockComponent = ({ children }) => {\\n  return <div style={{ backgroundColor: '#f0f0f0', padding: '10px' }}>{children}</div>;\\n};\\n\\nconst markdownContent = `\\n\\\\`\\\\`\\\\`my-ui\\nmy data ...\\n\\\\`\\\\`\\\\`\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n   \\\"type\\\": \\\"pin-map\\\",\\n   \\\"data\\\": [\\n    { \\\"label\\\": \\\"杨梅岭\\\", \\\"longitude\\\": 120.118362, \\\"latitude\\\": 30.217175 },\\n    { \\\"label\\\": \\\"理安寺\\\", \\\"longitude\\\": 120.112958, \\\"latitude\\\": 30.207319 },\\n    { \\\"label\\\": \\\"九溪烟树\\\", \\\"longitude\\\": 120.11335, \\\"latitude\\\": 30.202395 },\\n    { \\\"label\\\": \\\"飞来峰\\\", \\\"longitude\\\": 120.100549, \\\"latitude\\\": 30.236875 },\\n    { \\\"label\\\": \\\"灵隐寺\\\", \\\"longitude\\\": 120.101406, \\\"latitude\\\": 30.240826 },\\n    { \\\"label\\\": \\\"天竺三寺\\\", \\\"longitude\\\": 120.105337, \\\"latitude\\\": 30.236818 },\\n    { \\\"label\\\": \\\"杭州植物园\\\", \\\"longitude\\\": 120.116979, \\\"latitude\\\": 30.252876 },\\n    { \\\"label\\\": \\\"杭州花圃\\\", \\\"longitude\\\": 120.127654, \\\"latitude\\\": 30.245663 },\\n    { \\\"label\\\": \\\"苏堤\\\", \\\"longitude\\\": 120.135764, \\\"latitude\\\": 30.251448 },\\n    { \\\"label\\\": \\\"虎跑公园\\\", \\\"longitude\\\": 120.130095, \\\"latitude\\\": 30.207505 },\\n    { \\\"label\\\": \\\"玉皇飞云\\\", \\\"longitude\\\": 120.145323, \\\"latitude\\\": 30.214993 },\\n    { \\\"label\\\": \\\"长桥公园\\\", \\\"longitude\\\": 120.155057, \\\"latitude\\\": 30.232985 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\n// 自定义代码块渲染组件，NOTE: withDefaultChartCode 不要直接放入函数内部，避免重复渲染抖动问题！！！\\nconst CodeComponent = withDefaultChartCode({\\n  languageRenderers: {\\n    'my-ui': MyUIRenderer,\\n  },\\n});\\n\\nexport default () => (\\n  <div>\\n    <GPTVisLite\\n      components={{\\n        code: CodeComponent,\\n      }}\\n    >\\n      {markdownContent}\\n    </GPTVisLite>\\n  </div>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/errorRender.tsx?watch=parent';\n  export default \"import { ChartType, Column, FlowDiagram, GPTVisLite, MindMap, withChartCode } from '@antv/gpt-vis';\\nimport type { FC } from 'react';\\nimport React from 'react';\\nimport type { ErrorRender } from '../type';\\n\\n// 默认错误渲染示例\\nconst defaultErrorMarkdown = `\\n#### 默认数据解析错误渲染\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"column\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"第一产业\\\", \\\"value\\\": 7200.0 }\\n  // JSON 解析错误示例\\n\\\\`\\\\`\\\\`\\n`;\\n\\n// 示例一 - JSON解析错误\\nconst example1Markdown = `\\n#### 自定义 JSON解析错误 渲染示例一\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"column\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"第一产业\\\", \\\"value\\\": 7200.0 }\\n  // JSON 解析错误示例\\n\\\\`\\\\`\\\\`\\n`;\\n\\n// 示例二 - 不支持的图表类型\\nconst example2Markdown = `\\n#### 自定义 JSON解析错误 渲染示例二\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"unsupported-chart\\\",\\n  \\\"data\\\": [{ \\\"category\\\": \\\"测试\\\", \\\"value\\\": 100 }]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\n// 示例 - 图表渲染错误\\nconst example5Markdown = `\\n#### 图表渲染错误抛错\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"mind-map\\\",\\n  \\\"data\\\": {\\n    \\\"name\\\": \\\"Transformer 模型\\\",\\n    \\\"children\\\": [\\n      {\\n        \\\"name\\\": \\\"概述\\\",\\n        \\\"children\\\": [\\n          {\\n            \\\"name\\\": \\\"定义与背景\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"2017年 Vaswani 等人提出\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"自然语言处理任务\\\"\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"主要特点\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"无需循环结构\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"依赖自注意力机制\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"可并行处理\\\"\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"应用领域\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"机器翻译\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"文本摘要\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"问答系统\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"语音处理\\\"\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      {\\n        \\\"name\\\": \\\"核心组件\\\",\\n        \\\"children\\\": [\\n          {\\n            \\\"name\\\": \\\"自注意力机制\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"机制原理\\\",\\n                \\\"children\\\": [\\n                  {\\n                    \\\"name\\\": \\\"每个词关注其他词\\\"\\n                  },\\n                  {\\n                    \\\"name\\\": \\\"计算注意力权重\\\"\\n                  }\\n                ]\\n              },\\n              {\\n                \\\"name\\\": \\\"优点\\\",\\n                \\\"children\\\": [\\n                  {\\n                    \\\"name\\\": \\\"捕捉长距离依赖\\\"\\n                  },\\n                  {\\n                    \\\"name\\\": \\\"可并行计算\\\"\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"多头自注意力\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"多个注意力头并行计算\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"拼接与线性变换\\\"\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"位置编码\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"作用\\\",\\n                \\\"children\\\": [\\n                  {\\n                    \\\"name\\\": \\\"提供序列顺序信息\\\"\\n                  }\\n                ]\\n              },\\n              {\\n                \\\"name\\\": \\\"实现方式\\\",\\n                \\\"children\\\": [\\n                  {\\n                    \\\"name\\\": \\\"正弦/余弦函数\\\"\\n                  },\\n                  {\\n                    \\\"name\\\": \\\"可学习的嵌入\\\"\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"前馈网络\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"两层全连接网络\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"每个位置独立处理\\\"\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"残差连接与层归一化\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"缓解梯度消失\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"加速训练\\\"\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      {\\n        \\\"name\\\": \\\"架构\\\",\\n        \\\"children\\\": [\\n          {\\n            \\\"name\\\": \\\"编码器\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"多层结构\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"每层组成\\\",\\n                \\\"children\\\": [\\n                  {\\n                    \\\"name\\\": \\\"自注意力\\\"\\n                  },\\n                  {\\n                    \\\"name\\\": \\\"前馈网络\\\"\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"解码器\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"多层结构\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"每层组成\\\",\\n                \\\"children\\\": [\\n                  {\\n                    \\\"name\\\": \\\"自注意力\\\"\\n                  },\\n                  {\\n                    \\\"name\\\": \\\"编码器-解码器注意力\\\"\\n                  },\\n                  {\\n                    \\\"name\\\": \\\"前馈网络\\\"\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"输入输出嵌入\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"词向量转换\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"与位置编码结合\\\"\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      {\\n        \\\"name\\\": \\\"计算复杂度与优化\\\",\\n        \\\"children\\\": [\\n          {\\n            \\\"name\\\": \\\"自注意力复杂度\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"O(N²)\\\"\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"改进方案\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"Set Transformer - 诱导点降低复杂度\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"Reformer - 局部注意力和哈希\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"Linformer - 降低注意力矩阵维度\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"Longformer - 长序列局部/全局注意力\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"Charformer - 字符级高效表示\\\"\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      {\\n        \\\"name\\\": \\\"应用与扩展\\\",\\n        \\\"children\\\": [\\n          {\\n            \\\"name\\\": \\\"自然语言处理\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"BERT、GPT 等\\\"\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"计算机视觉\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"Vision Transformer (ViT)\\\"\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"语音处理\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"Transformer 语音识别\\\"\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"强化学习\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"状态关系建模\\\"\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      {\\n        \\\"name\\\": \\\"总结\\\",\\n        \\\"children\\\": [\\n          {\\n            \\\"name\\\": \\\"优势\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"高效并行\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"长距离依赖捕捉\\\"\\n              }\\n            ]\\n          },\\n          {\\n            \\\"name\\\": \\\"挑战\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"name\\\": \\\"大型模型计算开销\\\"\\n              },\\n              {\\n                \\\"name\\\": \\\"需要大量训练数据\\\"\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}\\n`;\\n\\nconst example3Markdown = `\\n#### 默认图表渲染错误\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"flow-diagram\\\",\\n  \\\"data\\\": {\\n    \\\"nodes\\\": [\\n      { \\\"name\\\": \\\"残余机器数核查\\\" },\\n      { \\\"name\\\": \\\"流量类型检测\\\" },\\n      { \\\"name\\\": \\\"定时任务分析\\\" },\\n      { \\\"name\\\": \\\"域名流量检测\\\" },\\n      { \\\"name\\\": \\\"RPC流量溯源\\\" },\\n      { \\\"name\\\": \\\"消息队列检查\\\" }\\n    ],\\n    \\\"edges\\\": [\\n      { \\\"source\\\": \\\"残余机器数核查\\\", \\\"target\\\": \\\"流量类型检测\\\", \\\"name\\\": \\\"发现5台残余机器\\\" },\\n      { \\\"source\\\": \\\"流量类型检测\\\", \\\"target\\\": \\\"RPC流量溯源\\\", \\\"name\\\": \\\"识别9154次/天服务调用\\\" },\\n      { \\\"source\\\": \\\"流量类型检测\\\", \\\"target\\\": \\\"定时任务分析\\\", \\\"name\\\": \\\"定时任务零风险\\\" },\\n      { \\\"source\\\": \\\"流量类型检测\\\", \\\"target\\\": \\\"域名流量检测\\\", \\\"name\\\": \\\"无PV流量\\\" },\\n      { \\\"source\\\": \\\"RPC流量溯源\\\", \\\"target\\\": \\\"mobilemock应用追踪\\\", \\\"name\\\": \\\"上游未完成迁移\\\" }\\n    ]\\n  }\\n}\\n`;\\n\\nconst example4Markdown = `\\n#### 自定义图表渲染错误\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"flow-diagram\\\",\\n  \\\"data\\\": {\\n    \\\"nodes\\\": [\\n      { \\\"name\\\": \\\"残余机器数核查\\\" },\\n      { \\\"name\\\": \\\"流量类型检测\\\" },\\n      { \\\"name\\\": \\\"定时任务分析\\\" },\\n      { \\\"name\\\": \\\"域名流量检测\\\" },\\n      { \\\"name\\\": \\\"RPC流量溯源\\\" },\\n      { \\\"name\\\": \\\"消息队列检查\\\" }\\n    ],\\n    \\\"edges\\\": [\\n      { \\\"source\\\": \\\"残余机器数核查\\\", \\\"target\\\": \\\"流量类型检测\\\", \\\"name\\\": \\\"发现5台残余机器\\\" },\\n      { \\\"source\\\": \\\"流量类型检测\\\", \\\"target\\\": \\\"RPC流量溯源\\\", \\\"name\\\": \\\"识别9154次/天服务调用\\\" },\\n      { \\\"source\\\": \\\"流量类型检测\\\", \\\"target\\\": \\\"定时任务分析\\\", \\\"name\\\": \\\"定时任务零风险\\\" },\\n      { \\\"source\\\": \\\"流量类型检测\\\", \\\"target\\\": \\\"域名流量检测\\\", \\\"name\\\": \\\"无PV流量\\\" },\\n      { \\\"source\\\": \\\"RPC流量溯源\\\", \\\"target\\\": \\\"mobilemock应用追踪\\\", \\\"name\\\": \\\"上游未完成迁移\\\" }\\n    ]\\n  }\\n}\\n`;\\n\\n// 自定义错误渲染组件 - 示例一（卡片式设计）\\nconst CustomErrorRender1: FC<{\\n  errorInfo: ErrorRender;\\n}> = ({ errorInfo }) => {\\n  const { error, content } = errorInfo;\\n\\n  return (\\n    <div\\n      style={{\\n        border: '1px solid #e8e8e8',\\n        borderRadius: '12px',\\n        padding: '24px',\\n        margin: '8px 0',\\n        backgroundColor: '#fafafa',\\n        boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\\n      }}\\n    >\\n      <div\\n        style={{\\n          display: 'flex',\\n          alignItems: 'center',\\n          marginBottom: '16px',\\n          paddingBottom: '12px',\\n          borderBottom: '1px solid #e8e8e8',\\n        }}\\n      >\\n        <div\\n          style={{\\n            width: '32px',\\n            height: '32px',\\n            borderRadius: '50%',\\n            backgroundColor: '#ff7875',\\n            display: 'flex',\\n            alignItems: 'center',\\n            justifyContent: 'center',\\n            marginRight: '12px',\\n            color: '#fff',\\n            fontWeight: 'bold',\\n          }}\\n        >\\n          !\\n        </div>\\n        <div>\\n          <h4 style={{ margin: '0', fontSize: '16px', color: '#262626' }}>解析错误</h4>\\n          <p style={{ margin: '4px 0 0 0', fontSize: '12px', color: '#8c8c8c' }}>\\n            自定义错误渲染 - 卡片式设计\\n          </p>\\n        </div>\\n      </div>\\n\\n      <div style={{ marginBottom: '16px' }}>\\n        <div style={{ fontSize: '14px', color: '#595959', marginBottom: '8px' }}>\\n          <strong>错误信息</strong>\\n        </div>\\n        <div\\n          style={{\\n            backgroundColor: '#fff2f0',\\n            border: '1px solid #ffccc7',\\n            borderRadius: '6px',\\n            padding: '12px',\\n            fontSize: '13px',\\n            color: '#a8071a',\\n            fontFamily: 'monospace',\\n          }}\\n        >\\n          {error?.message || '未知错误'}\\n        </div>\\n      </div>\\n\\n      <details>\\n        <summary\\n          style={{\\n            cursor: 'pointer',\\n            fontSize: '14px',\\n            color: '#1890ff',\\n            userSelect: 'none',\\n            outline: 'none',\\n          }}\\n        >\\n          查看原始代码\\n        </summary>\\n        <div\\n          style={{\\n            backgroundColor: '#f5f5f5',\\n            border: '1px solid #d9d9d9',\\n            borderRadius: '6px',\\n            padding: '16px',\\n            marginTop: '8px',\\n            fontSize: '12px',\\n            fontFamily: 'Consolas, Monaco, monospace',\\n            lineHeight: '1.5',\\n            color: '#262626',\\n          }}\\n        >\\n          <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>{content}</pre>\\n        </div>\\n      </details>\\n    </div>\\n  );\\n};\\n\\n// 自定义错误渲染组件 - 示例二（终端/控制台风格）\\nconst CustomErrorRender2: FC<{\\n  errorInfo: ErrorRender;\\n}> = ({ errorInfo }) => {\\n  const { content, error } = errorInfo;\\n  const currentTime = new Date().toLocaleTimeString();\\n\\n  return (\\n    <div\\n      style={{\\n        backgroundColor: '#1e1e1e',\\n        color: '#00ff00',\\n        fontFamily: 'Consolas, Monaco, \\\"Courier New\\\", monospace',\\n        fontSize: '13px',\\n        padding: '20px',\\n        borderRadius: '0',\\n        border: '2px solid #333',\\n        margin: '8px 0',\\n        lineHeight: '1.4',\\n      }}\\n    >\\n      <div\\n        style={{\\n          borderBottom: '1px solid #333',\\n          paddingBottom: '8px',\\n          marginBottom: '12px',\\n          color: '#888',\\n        }}\\n      >\\n        GPT-Vis Terminal v1.0 - {currentTime}\\n      </div>\\n\\n      <div style={{ marginBottom: '8px' }}>\\n        <span style={{ color: '#ff6b6b' }}>ERROR</span>\\n        <span style={{ color: '#4ecdc4' }}> [CHART_TYPE_NOT_SUPPORTED]</span>\\n      </div>\\n\\n      <div style={{ marginBottom: '8px' }}>\\n        <span style={{ color: '#888' }}>$</span>\\n        <span style={{ color: '#ffd93d' }}> chart.render()</span>\\n      </div>\\n\\n      <div style={{ marginBottom: '12px', paddingLeft: '20px' }}>\\n        <div style={{ color: '#ff6b6b' }}>✗ {error ? error.message || error.toString() : ''}</div>\\n        <div style={{ color: '#888', fontSize: '12px' }}>\\n          └── Available types: column, pie, line, bar, area, scatter...\\n        </div>\\n      </div>\\n\\n      <div style={{ marginBottom: '12px' }}>\\n        <div style={{ color: '#4ecdc4' }}>📊 PAYLOAD:</div>\\n        <div\\n          style={{\\n            backgroundColor: '#2d2d2d',\\n            padding: '8px',\\n            marginTop: '4px',\\n            borderLeft: '3px solid #4ecdc4',\\n            color: '#e6e6e6',\\n          }}\\n        >\\n          <pre style={{ margin: 0, fontSize: '11px' }}>{content}</pre>\\n        </div>\\n      </div>\\n\\n      <div style={{ color: '#888', fontSize: '11px' }}>\\n        <span style={{ color: '#ffd93d' }}>TIP:</span> Use errorRender for custom error handling\\n      </div>\\n    </div>\\n  );\\n};\\n\\n// 默认数据错误渲染\\nconst DefaultErrorCode = withChartCode({\\n  components: { [ChartType.Column]: Column },\\n});\\n\\n// 自定义数据错误渲染 - 示例一\\nconst CustomErrorCode1 = withChartCode({\\n  components: { [ChartType.Column]: Column },\\n  errorRender: (errorInfo: ErrorRender) => <CustomErrorRender1 errorInfo={errorInfo} />,\\n});\\n\\n// 自定义数据错误渲染 - 示例二\\nconst CustomErrorCode2 = withChartCode({\\n  components: { [ChartType.Column]: Column },\\n  errorRender: (errorInfo: ErrorRender) => <CustomErrorRender2 errorInfo={errorInfo} />,\\n});\\n\\n// 默认图表渲染错误\\nconst DefaultChartError = withChartCode({\\n  components: { [ChartType.FlowDiagram]: FlowDiagram, [ChartType.MindMap]: MindMap },\\n});\\n\\nconst CustomChartError = withChartCode({\\n  components: { [ChartType.FlowDiagram]: FlowDiagram },\\n  componentErrorRender: ({ error }) => {\\n    return (\\n      <div\\n        style={{\\n          height: '100px',\\n          color: 'red',\\n          display: 'flex',\\n          alignItems: 'center',\\n          justifyContent: 'center',\\n        }}\\n      >\\n        {error ? error.message || error.toString() : ''}\\n      </div>\\n    );\\n  },\\n});\\n\\nexport default () => {\\n  return (\\n    <div>\\n      <div>\\n        <GPTVisLite components={{ code: DefaultErrorCode }}>{defaultErrorMarkdown}</GPTVisLite>\\n      </div>\\n\\n      <div style={{ marginBottom: '24px' }}>\\n        <GPTVisLite components={{ code: CustomErrorCode1 }}>{example1Markdown}</GPTVisLite>\\n      </div>\\n\\n      <div>\\n        <GPTVisLite components={{ code: CustomErrorCode2 }}>{example2Markdown}</GPTVisLite>\\n      </div>\\n\\n      <div>\\n        <GPTVisLite components={{ code: DefaultChartError }}>{example3Markdown}</GPTVisLite>\\n      </div>\\n\\n      <div>\\n        <GPTVisLite components={{ code: DefaultChartError }}>{example5Markdown}</GPTVisLite>\\n      </div>\\n\\n      <div>\\n        <GPTVisLite components={{ code: CustomChartError }}>{example4Markdown}</GPTVisLite>\\n      </div>\\n    </div>\\n  );\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/default.tsx?watch=parent';\n  export default \"import { GPTVisLite, withDefaultChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst commonString = `\\n当然可以！在 JavaScript 中，你可以使用加法运算符 \\\\`+\\\\` 来实现两个数字的相加。以下是一个简单的函数，它接受两个参数 \\\\`a\\\\` 和 \\\\`b\\\\`,并返回它们的和：\\n\\n\\\\`\\\\`\\\\`javascript\\\\nfunction add(a, b) {\\\\n  return a + b;\\\\n}\\\\n\\\\n// 示例用法\\\\nconst result = add(3, 4);\\\\nconsole.log(result); // 输出：7\\\\n\\\\`\\\\`\\\\`\\\\n\\\\n在这个示例中，我们定义了一个名为 \\\\`add\\\\` 的函数，它接受两个参数 \\\\`a\\\\` 和 \\\\`b\\\\`。函数的主体只有一行代码，使用加法运算符 \\\\`+\\\\` 将 \\\\`a\\\\` 和 \\\\`b\\\\` 相加，并返回结果。\\\\n\\\\n然后，我们调用\\n`;\\n\\nconst markdownContent = `\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"pie\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"分类一\\\", \\\"value\\\": 27 },\\n    { \\\"category\\\": \\\"分类二\\\", \\\"value\\\": 25 },\\n    { \\\"category\\\": \\\"分类三\\\", \\\"value\\\": 18 },\\n    { \\\"category\\\": \\\"分类四\\\", \\\"value\\\": 15 },\\n    { \\\"category\\\": \\\"分类五\\\", \\\"value\\\": 10 },\\n    { \\\"category\\\": \\\"其他\\\", \\\"value\\\": 5 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\n// 自定义代码块渲染组件，NOTE: withDefaultChartCode 不要直接放入函数内部，避免重复渲染抖动问题！！！\\nconst CodeComponent = withDefaultChartCode({\\n  debug: true,\\n});\\n\\nexport default () => (\\n  <div>\\n    <GPTVisLite>{commonString}</GPTVisLite>\\n    <GPTVisLite\\n      components={{\\n        code: CodeComponent,\\n      }}\\n    >\\n      {markdownContent}\\n    </GPTVisLite>\\n  </div>\\n);\\n\";;\n  ","export { default as version } from \"./version\";\nexport { default as Actions } from \"./actions\";\nexport { default as Attachments } from \"./attachments\";\nexport { default as Sender } from \"./sender\";\nexport { default as Bubble } from \"./bubble\";\nexport { default as Conversations } from \"./conversations\";\nexport { default as Prompts } from \"./prompts\";\nexport { default as ThoughtChain } from \"./thought-chain\";\nexport { default as Suggestion } from \"./suggestion\";\nexport { default as Welcome } from \"./welcome\";\nexport { default as XProvider } from \"./x-provider\";\nexport { default as useXChat } from \"./use-x-chat\";\nexport { default as useXAgent } from \"./use-x-agent\";\nexport { default as XStream } from \"./x-stream\";\nexport { default as XRequest } from \"./x-request\";","import React from 'react';\nimport '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/index.md?watch=parent';\nimport * as chartcoderender_demo_common_deps_1 from '@antv/gpt-vis';\nimport * as chartcoderender_demo_common_deps_2 from 'react';\nimport * as chartcoderender_demo_stream_deps_1 from '@ant-design/x';\nexport const demos = {\n  'chartcoderender-demo-common': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"ChartCodeRender__demos\" */ '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/common.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"chartcoderender-demo-common\",\n  \"refAtomIds\": [\n    \"ChartCodeRender\"\n  ],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/common.tsx?dumi-raw').default\n    },\n    \"@antv/gpt-vis\": {\n      \"type\": \"NPM\",\n      \"value\": \"0.5.5\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"18.3.1\"\n    }\n  },\n  \"entry\": \"index.tsx\"\n},\n    context: {\n  \"@antv/gpt-vis\": chartcoderender_demo_common_deps_1,\n  \"react\": chartcoderender_demo_common_deps_2\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/GPT-Vis/GPT-Vis/node_modules/.pnpm/dumi@2.4.21_@babel+core@7.28.3_@swc+helpers@0.5.15_@types+node@24.3.0_@types+react@18.3.24_@t_cjnu45vrwa2v5tzrgvxtp44tfu/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n  'chartcoderender-demo-default': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"ChartCodeRender__demos\" */ '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/default.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"chartcoderender-demo-default\",\n  \"refAtomIds\": [\n    \"ChartCodeRender\"\n  ],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/default.tsx?dumi-raw').default\n    },\n    \"@antv/gpt-vis\": {\n      \"type\": \"NPM\",\n      \"value\": \"0.5.5\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"18.3.1\"\n    }\n  },\n  \"entry\": \"index.tsx\"\n},\n    context: {\n  \"@antv/gpt-vis\": chartcoderender_demo_common_deps_1,\n  \"react\": chartcoderender_demo_common_deps_2\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/GPT-Vis/GPT-Vis/node_modules/.pnpm/dumi@2.4.21_@babel+core@7.28.3_@swc+helpers@0.5.15_@types+node@24.3.0_@types+react@18.3.24_@t_cjnu45vrwa2v5tzrgvxtp44tfu/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n  'chartcoderender-demo-stream': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"ChartCodeRender__demos\" */ '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/stream.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"chartcoderender-demo-stream\",\n  \"refAtomIds\": [\n    \"ChartCodeRender\"\n  ],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/stream.tsx?dumi-raw').default\n    },\n    \"@ant-design/x\": {\n      \"type\": \"NPM\",\n      \"value\": \"1.6.0\"\n    },\n    \"@antv/gpt-vis\": {\n      \"type\": \"NPM\",\n      \"value\": \"0.5.5\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"18.3.1\"\n    }\n  },\n  \"entry\": \"index.tsx\"\n},\n    context: {\n  \"@ant-design/x\": chartcoderender_demo_stream_deps_1,\n  \"@antv/gpt-vis\": chartcoderender_demo_common_deps_1,\n  \"react\": chartcoderender_demo_common_deps_2\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/GPT-Vis/GPT-Vis/node_modules/.pnpm/dumi@2.4.21_@babel+core@7.28.3_@swc+helpers@0.5.15_@types+node@24.3.0_@types+react@18.3.24_@t_cjnu45vrwa2v5tzrgvxtp44tfu/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n  'chartcoderender-demo-errorrender': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"ChartCodeRender__demos\" */ '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/errorRender.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"chartcoderender-demo-errorrender\",\n  \"refAtomIds\": [\n    \"ChartCodeRender\"\n  ],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/errorRender.tsx?dumi-raw').default\n    },\n    \"@antv/gpt-vis\": {\n      \"type\": \"NPM\",\n      \"value\": \"0.5.5\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"18.3.1\"\n    }\n  },\n  \"entry\": \"index.tsx\"\n},\n    context: {\n  \"@antv/gpt-vis\": chartcoderender_demo_common_deps_1,\n  \"react\": chartcoderender_demo_common_deps_2\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/GPT-Vis/GPT-Vis/node_modules/.pnpm/dumi@2.4.21_@babel+core@7.28.3_@swc+helpers@0.5.15_@types+node@24.3.0_@types+react@18.3.24_@t_cjnu45vrwa2v5tzrgvxtp44tfu/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n  'chartcoderender-demo-extra': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"ChartCodeRender__demos\" */ '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/extra.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"chartcoderender-demo-extra\",\n  \"refAtomIds\": [\n    \"ChartCodeRender\"\n  ],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/extra.tsx?dumi-raw').default\n    },\n    \"@antv/gpt-vis\": {\n      \"type\": \"NPM\",\n      \"value\": \"0.5.5\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"18.3.1\"\n    }\n  },\n  \"entry\": \"index.tsx\"\n},\n    context: {\n  \"@antv/gpt-vis\": chartcoderender_demo_common_deps_1,\n  \"react\": chartcoderender_demo_common_deps_2\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/GPT-Vis/GPT-Vis/node_modules/.pnpm/dumi@2.4.21_@babel+core@7.28.3_@swc+helpers@0.5.15_@types+node@24.3.0_@types+react@18.3.24_@t_cjnu45vrwa2v5tzrgvxtp44tfu/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n};","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/index.en.md?watch=parent';\n  export const texts = [{\"value\":\"Custom extended Markdown code block rendering, allowing custom visualization of code blocks.\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"This is a warning message\\n\",\"paraId\":1},{\"value\":\"withChartCode\",\"paraId\":1},{\"value\":\" and \",\"paraId\":1},{\"value\":\"withDefaultChartCode\",\"paraId\":1},{\"value\":\" methods should not be placed directly inside functions to avoid jitter issues caused by repeated rendering!! If you need to place them inside functions, use \",\"paraId\":1},{\"value\":\"useMemo\",\"paraId\":1},{\"value\":\" for caching.\",\"paraId\":1},{\"value\":\"withDefaultChartCode\",\"paraId\":2,\"tocIndex\":2},{\"value\":\" includes \",\"paraId\":2,\"tocIndex\":2},{\"value\":\"default charts\",\"paraId\":2,\"tocIndex\":2},{\"value\":\", making integration simple\",\"paraId\":2,\"tocIndex\":2},{\"value\":\"Through \",\"paraId\":3,\"tocIndex\":4},{\"value\":\"errorRender\",\"paraId\":3,\"tocIndex\":4},{\"value\":\" and \",\"paraId\":3,\"tocIndex\":4},{\"value\":\"componentErrorRender\",\"paraId\":3,\"tocIndex\":4},{\"value\":\" properties, you can customize error rendering, allowing users to get complete error information for personalized error handling.\",\"paraId\":3,\"tocIndex\":4},{\"value\":\"Property\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"Type\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"Required\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"Default\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"Description\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"components\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"ChartComponents\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"No\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"Additional chart components to load\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"languageRenderers\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"LanguageRenderers\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"No\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"Custom renderers for other language code blocks\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"defaultRenderer\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"CodeRenderer\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"No\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"Default code renderer\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"errorRender\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"ErrorRender\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"No\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"Custom error rendering function\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"debug\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"boolean\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"No\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"false\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"Enable debug logging\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"loadingTimeout\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"number\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"No\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"Set loading animation timeout, default 5s\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"style\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"React.CSSProperties\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"No\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"Chart styles, configure container styles\",\"paraId\":4,\"tocIndex\":7}];\n  ","import React from 'react';\nimport '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/index.en.md?watch=parent';\nimport * as chartcoderender_demo_common_deps_1 from '@antv/gpt-vis';\nimport * as chartcoderender_demo_common_deps_2 from 'react';\nimport * as chartcoderender_demo_stream_deps_1 from '@ant-design/x';\nexport const demos = {\n  'chartcoderender-demo-common': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"ChartCodeRender__demos\" */ '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/common.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"chartcoderender-demo-common\",\n  \"refAtomIds\": [\n    \"ChartCodeRender\"\n  ],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/common.tsx?dumi-raw').default\n    },\n    \"@antv/gpt-vis\": {\n      \"type\": \"NPM\",\n      \"value\": \"0.5.5\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"18.3.1\"\n    }\n  },\n  \"entry\": \"index.tsx\"\n},\n    context: {\n  \"@antv/gpt-vis\": chartcoderender_demo_common_deps_1,\n  \"react\": chartcoderender_demo_common_deps_2\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/GPT-Vis/GPT-Vis/node_modules/.pnpm/dumi@2.4.21_@babel+core@7.28.3_@swc+helpers@0.5.15_@types+node@24.3.0_@types+react@18.3.24_@t_cjnu45vrwa2v5tzrgvxtp44tfu/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n  'chartcoderender-demo-default': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"ChartCodeRender__demos\" */ '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/default.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"chartcoderender-demo-default\",\n  \"refAtomIds\": [\n    \"ChartCodeRender\"\n  ],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/default.tsx?dumi-raw').default\n    },\n    \"@antv/gpt-vis\": {\n      \"type\": \"NPM\",\n      \"value\": \"0.5.5\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"18.3.1\"\n    }\n  },\n  \"entry\": \"index.tsx\"\n},\n    context: {\n  \"@antv/gpt-vis\": chartcoderender_demo_common_deps_1,\n  \"react\": chartcoderender_demo_common_deps_2\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/GPT-Vis/GPT-Vis/node_modules/.pnpm/dumi@2.4.21_@babel+core@7.28.3_@swc+helpers@0.5.15_@types+node@24.3.0_@types+react@18.3.24_@t_cjnu45vrwa2v5tzrgvxtp44tfu/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n  'chartcoderender-demo-stream': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"ChartCodeRender__demos\" */ '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/stream.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"chartcoderender-demo-stream\",\n  \"refAtomIds\": [\n    \"ChartCodeRender\"\n  ],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/stream.tsx?dumi-raw').default\n    },\n    \"@ant-design/x\": {\n      \"type\": \"NPM\",\n      \"value\": \"1.6.0\"\n    },\n    \"@antv/gpt-vis\": {\n      \"type\": \"NPM\",\n      \"value\": \"0.5.5\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"18.3.1\"\n    }\n  },\n  \"entry\": \"index.tsx\"\n},\n    context: {\n  \"@ant-design/x\": chartcoderender_demo_stream_deps_1,\n  \"@antv/gpt-vis\": chartcoderender_demo_common_deps_1,\n  \"react\": chartcoderender_demo_common_deps_2\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/GPT-Vis/GPT-Vis/node_modules/.pnpm/dumi@2.4.21_@babel+core@7.28.3_@swc+helpers@0.5.15_@types+node@24.3.0_@types+react@18.3.24_@t_cjnu45vrwa2v5tzrgvxtp44tfu/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n  'chartcoderender-demo-errorrender': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"ChartCodeRender__demos\" */ '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/errorRender.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"chartcoderender-demo-errorrender\",\n  \"refAtomIds\": [\n    \"ChartCodeRender\"\n  ],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/errorRender.tsx?dumi-raw').default\n    },\n    \"@antv/gpt-vis\": {\n      \"type\": \"NPM\",\n      \"value\": \"0.5.5\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"18.3.1\"\n    }\n  },\n  \"entry\": \"index.tsx\"\n},\n    context: {\n  \"@antv/gpt-vis\": chartcoderender_demo_common_deps_1,\n  \"react\": chartcoderender_demo_common_deps_2\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/GPT-Vis/GPT-Vis/node_modules/.pnpm/dumi@2.4.21_@babel+core@7.28.3_@swc+helpers@0.5.15_@types+node@24.3.0_@types+react@18.3.24_@t_cjnu45vrwa2v5tzrgvxtp44tfu/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n  'chartcoderender-demo-extra': {\n    component: React.memo(React.lazy(() => import( /* webpackChunkName: \"ChartCodeRender__demos\" */ '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/extra.tsx?techStack=react'))),\n    asset: {\n  \"type\": \"BLOCK\",\n  \"id\": \"chartcoderender-demo-extra\",\n  \"refAtomIds\": [\n    \"ChartCodeRender\"\n  ],\n  \"dependencies\": {\n    \"index.tsx\": {\n      \"type\": \"FILE\",\n      \"value\": require('/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/extra.tsx?dumi-raw').default\n    },\n    \"@antv/gpt-vis\": {\n      \"type\": \"NPM\",\n      \"value\": \"0.5.5\"\n    },\n    \"react\": {\n      \"type\": \"NPM\",\n      \"value\": \"18.3.1\"\n    }\n  },\n  \"entry\": \"index.tsx\"\n},\n    context: {\n  \"@antv/gpt-vis\": chartcoderender_demo_common_deps_1,\n  \"react\": chartcoderender_demo_common_deps_2\n},\n    renderOpts: {\n          \n          compile: async (...args) => {\n            return (await import('/home/runner/work/GPT-Vis/GPT-Vis/node_modules/.pnpm/dumi@2.4.21_@babel+core@7.28.3_@swc+helpers@0.5.15_@types+node@24.3.0_@types+react@18.3.24_@t_cjnu45vrwa2v5tzrgvxtp44tfu/node_modules/dumi/dist/client/misc/reactDemoCompiler.js')).default(...args);\n          },\n        },\n  },\n};","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/demos/stream.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, Column, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React, { useEffect, useRef, useState } from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个柱状图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"column\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"第一产业\\\", \\\"value\\\": 7200.0 },\\n    { \\\"category\\\": \\\"第二产业\\\", \\\"value\\\": 36600.0 },\\n    { \\\"category\\\": \\\"第三产业\\\" ,\\\"value\\\": 41000.0 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\n// 自定义代码块渲染组件，NOTE: withChartCode 不要直接放入函数内部，避免重复渲染抖动问题！！！\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Column]: Column },\\n  loadingTimeout: 3000,\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nconst useStreamText = () => {\\n  const [text, setText] = useState('');\\n  const nowTextRef = useRef('');\\n  const timerRef = useRef<any>(null);\\n\\n  /** 模拟流式输出markdownContent */\\n  const streamOutput = () => {\\n    timerRef.current = setInterval(() => {\\n      const step = parseInt((Math.random() * 10).toString(), 20);\\n      const nowText =\\n        nowTextRef.current +\\n        markdownContent.substring(nowTextRef.current.length, nowTextRef.current.length + step);\\n      nowTextRef.current = nowText;\\n      setText(nowText);\\n      if (text.length === markdownContent.length - 1) {\\n        clearTimeout(timerRef.current);\\n      }\\n    }, 200);\\n  };\\n\\n  const restart = () => {\\n    if (timerRef.current) clearTimeout(timerRef.current);\\n    timerRef.current = null;\\n    nowTextRef.current = '';\\n    setText('');\\n    streamOutput();\\n  };\\n\\n  return [text, restart] as const;\\n};\\n\\nexport default () => {\\n  const [text, restart] = useStreamText();\\n\\n  useEffect(() => {\\n    restart();\\n  }, []);\\n\\n  return (\\n    <div style={bgStyle}>\\n      <button onClick={restart} type=\\\"button\\\">\\n        重新演示\\n      </button>\\n\\n      <Bubble\\n        placement=\\\"end\\\"\\n        content=\\\"帮我可视化一下我的数据\\\"\\n        avatar={{\\n          src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n        }}\\n        styles={{ content: { background: '#ebebeb' } }}\\n      />\\n      <Bubble\\n        content={text}\\n        messageRender={RenderMarkdown}\\n        avatar={{\\n          src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n        }}\\n        variant=\\\"shadow\\\"\\n        styles={{ content: { background: '#fff' } }}\\n      />\\n      <Bubble\\n        content={'生成超时的演示\\\\n' + text.substring(0, text.length - 10)}\\n        messageRender={RenderMarkdown}\\n        avatar={{\\n          src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n        }}\\n        variant=\\\"shadow\\\"\\n        styles={{ content: { background: '#fff' } }}\\n      />\\n    </div>\\n  );\\n};\\n\";;\n  ","// src/index.ts\nimport Source from \"@antv/l7-source\";\nexport * from \"@antv/l7-component\";\nexport * from \"@antv/l7-core\";\nexport * from \"@antv/l7-layers\";\nexport * from \"@antv/l7-maps\";\nexport * from \"@antv/l7-scene\";\nexport * from \"@antv/l7-utils\";\nexport * from \"./version\";\nexport {\n  Source\n};\n","/********** export chart **********/\nexport * from './export';\n\n/********** export types **********/\nexport * from './types';\n\n/********** export GPTVis **********/\nexport { withChartCode, withDefaultChartCode } from './ChartCodeRender';\nexport type { CodeBlockComponent, ErrorRender, WithChartCodeOptions } from './ChartCodeRender/type';\nexport { default as ConfigProvider, type ConfigProviderProps } from './ConfigProvider';\nexport { default as GPTVis, type GPTVisProps } from './GPTVis';\nexport { default as GPTVisLite, useEventPublish, type GPTVisLiteProps } from './GPTVis/Lite';\n\nexport { default as version } from './version';\n"],"names":[],"mappings":"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"}