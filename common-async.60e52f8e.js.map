{"version":3,"sources":["docs/guide/demos/WeatherCard/index.tsx?dumi-raw","src/DualAxes/demos/common.tsx?dumi-raw","src/ConfigProvider/demos/map-config.tsx?dumi-raw","src/utils/map/style.ts","src/ConfigProvider/demos/components-config.tsx?dumi-raw","src/GPTVis/Lite.tsx","src/Map/Component/index.tsx","src/Area/demos/common.tsx?dumi-raw","src/GPTVis/demos/tag.tsx?dumi-raw","src/Column/demos/markdown.tsx?dumi-raw","docs/guide/customize-style.md?type=text","src/types/chart.ts","src/GPTVis/demos/default.tsx?dumi-raw","src/Text/index.ts","src/Bar/demos/common.tsx?dumi-raw","virtual:external_mapbox-gl","src/HeatMap/index.tsx","src/export-map.browser.ts","src/Text/mini-charts/hooks/index.ts","src/utils/config.ts","src/DualAxes/index.tsx","src/DualAxes/util.ts","src/GPTVis/demos/event.tsx?dumi-raw","src/Map/Component/MapView.tsx","src/ChartCodeRender/styles.ts","src/PathMap/demos/default.tsx?dumi-raw","src/ConfigProvider/context.ts","src/Text/VisText.tsx","src/Bar/index.tsx","src/Line/demos/category.tsx?dumi-raw","src/Map/Component/Polyline.tsx","src/GPTVis/demos/relation.tsx?dumi-raw","src/Column/demos/group.tsx?dumi-raw","src/GPTVis/demos/code.tsx?dumi-raw","docs/guide/customize-style.en.md?type=text","src/OrganizationChart/index.tsx","src/GPTVis/hooks/useEvent.ts","src/GPTVis/index.tsx","src/Text/mini-charts/hooks/getElementFontSize.ts","src/Text/mini-charts/line/index.ts","src/PinMap/index.tsx","src/FlowDiagram/index.tsx","src/ChartCodeRender/Loading.tsx","src/Histogram/demos/markdown.tsx?dumi-raw","src/Radar/index.tsx","src/Text/config.tsx","docs/index.md?type=text","src/Map/index.tsx","src/PinMap/demos/markdown.tsx?dumi-raw","src/Column/demos/stack.tsx?dumi-raw","docs/guide/antd-design-x.md?type=text","src/GPTVis/demos/errorRender.tsx?dumi-raw","src/constants/index.ts","src/Line/demos/markdown.tsx?dumi-raw","src/DualAxes/demos/multiple.tsx?dumi-raw","src/Bar/demos/group.tsx?dumi-raw","src/Radar/demos/markdown.tsx?dumi-raw","src/export.ts","src/FishboneDiagram/demos/markdown.tsx?dumi-raw","src/Text/mini-charts/index.ts","src/Text/utils/index.ts","src/NetworkGraph/demos/markdown.tsx?dumi-raw","src/IndentedTree/index.md?type=text","src/utils/map/context.ts","src/ChartCodeRender/utils.ts","src/DualAxes/demos/markdown.tsx?dumi-raw","src/Radar/demos/common.tsx?dumi-raw","src/Pie/demos/markdown.tsx?dumi-raw","virtual:external_maplibre-gl","src/Column/demos/common.tsx?dumi-raw","src/Text/demos/markdown.tsx?dumi-raw","src/ChartCodeRender/icon.tsx","docs/guide/quick-start.en.md?type=text","docs/guide/demos/WeatherCard/index.tsx","src/Pie/demos/common.tsx?dumi-raw","src/FishboneDiagram/index.tsx","src/GPTVis/demos/context-provider.tsx?dumi-raw","src/Histogram/demos/common.tsx?dumi-raw","src/utils/map/view.ts","src/Radar/demos/category.tsx?dumi-raw","src/Pie/index.tsx","src/version.ts","docs/guide/antd-design-x.en.md?type=text","docs/index.en.md?type=text","src/Text/utils/getThemeColor.ts","src/MindMap/demos/markdown.tsx?dumi-raw","src/Text/theme.ts","src/PathMap/demos/markdown.tsx?dumi-raw","src/FishboneDiagram/demos/common.tsx?dumi-raw","src/Column/index.tsx","src/ChartCodeRender/index.md?type=text","src/Text/mini-charts/line/useLineCompute.ts","src/ConfigProvider/hooks/index.ts","src/IndentedTree/index.tsx","src/MindMap/demos/common.tsx?dumi-raw","src/utils/graph.ts","src/Text/mini-charts/hooks/useSvgWrapper.tsx","src/ConfigProvider/hooks/useConfig.ts","src/ChartCodeRender/index.tsx","src/Treemap/demos/markdown.tsx?dumi-raw","src/ConfigProvider/index.tsx","src/utils/map/index.ts","src/Bar/demos/markdown.tsx?dumi-raw","src/utils/map/polyline.ts","src/Text/mini-charts/line/SingleLineChart.tsx","src/Text/demos/common.tsx?dumi-raw","docs/guide/custom-ui.en.md?type=text","src/Bar/demos/stack.tsx?dumi-raw","src/WordCloud/index.tsx","src/Area/index.tsx","src/Area/demos/markdown.tsx?dumi-raw","src/Text/custom-icons/index.tsx","docs/guide/quick-start.md?type=text","src/ChartCodeRender/VisChart.tsx","src/ConfigProvider/demos/graph-components-config.tsx?dumi-raw","docs/guide/custom-ui.md?type=text","src/Text/demos/custom-markdown.tsx?dumi-raw","src/Text/mini-charts/proportion/getArcPath.ts","src/OrganizationChart/demos/markdown.tsx?dumi-raw","src/FlowDiagram/demos/markdown.tsx?dumi-raw","docs/guide/demos/WeatherCard/style.ts","src/FlowDiagram/demos/common.tsx?dumi-raw","src/types/index.ts","src/utils/map/markers.ts","src/Scatter/demos/markdown.tsx?dumi-raw","src/MindMap/index.tsx","src/Scatter/index.tsx","src/Treemap/demos/common.tsx?dumi-raw","src/NetworkGraph/index.tsx","src/Treemap/index.tsx","src/PinMap/demos/marker.tsx?dumi-raw","src/Text/mini-charts/proportion/index.tsx","src/PathMap/index.tsx","src/Scatter/demos/common.tsx?dumi-raw","src/PinMap/demos/default.tsx?dumi-raw","docs/guide/demos/custom-ui.tsx?dumi-raw","src/utils/plot.ts","src/Line/demos/common.tsx?dumi-raw","src/Line/index.tsx","src/NetworkGraph/demos/common.tsx?dumi-raw","src/Map/Component/Marker.tsx","src/FlowDiagram/helper.ts","src/Text/mini-charts/line/scaleLinear.ts","src/OrganizationChart/demos/common.tsx?dumi-raw","docs/guide/demos/WeatherCard/style.ts?dumi-raw","src/ConfigProvider/demos/plot-theme.tsx?dumi-raw","src/PathMap/demos/line.tsx?dumi-raw","src/GPTVis/hooks/useContext.ts","src/Text/utils/useAntdDarkAlgorithm.ts","src/Area/demos/stack.tsx?dumi-raw","src/utils/map/util.ts","src/Histogram/index.tsx"],"sourcesContent":["\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/guide/demos/WeatherCard/index.tsx?watch=parent';\n  export default \"import type { CodeBlockComponent } from '@antv/gpt-vis';\\nimport React from 'react';\\nimport StyledComponent from './style';\\n\\nconst WeatherCard: CodeBlockComponent = (props) => {\\n  const content = String(props.children).trim();\\n  const { locationName, temperature, humidity, wind, cloudiness, uv } = JSON.parse(content);\\n\\n  return (\\n    <StyledComponent>\\n      <div className=\\\"locationSection\\\">\\n        <div className=\\\"temperatureWrapper\\\">\\n          <div className=\\\"temperatureDetails\\\">\\n            <img\\n              src=\\\"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*1w1nS6N5McoAAAAAAAAAAAAADmJ7AQ/original\\\"\\n              className=\\\"imageIcon\\\"\\n            />\\n            <span className=\\\"currentTemperature\\\">{temperature}°</span>\\n          </div>\\n          <span className=\\\"locationName\\\">{locationName}</span>\\n        </div>\\n        <div className=\\\"weatherDetails\\\">\\n          <div className=\\\"humiditySection\\\">\\n            <span className=\\\"attributeLabel\\\">Humidity</span>\\n            <span className=\\\"uvIndexValue\\\">{humidity}%</span>\\n          </div>\\n          <div className=\\\"windSection\\\">\\n            <span className=\\\"windSpeedLabel\\\">Wind</span>\\n            <span className=\\\"windSpeedValue\\\">{wind}kph</span>\\n          </div>\\n          <div className=\\\"cloudinessSection\\\">\\n            <span className=\\\"cloudinessLabel\\\">Cloudiness</span>\\n            <span className=\\\"cloudinessValue\\\">{cloudiness}%</span>\\n          </div>\\n          <div className=\\\"uvIndexSection\\\">\\n            <span className=\\\"uvIndexLabel\\\">UV Index</span>\\n            <span className=\\\"uvIndexValue\\\">{uv}</span>\\n          </div>\\n        </div>\\n      </div>\\n    </StyledComponent>\\n  );\\n};\\n\\nexport default WeatherCard;\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/DualAxes/demos/common.tsx?watch=parent';\n  export default \"import type { DualAxesProps } from '@antv/gpt-vis';\\nimport { DualAxes } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst config: DualAxesProps = {\\n  categories: [\\n    '2020-08-20',\\n    '2020-08-21',\\n    '2020-08-22',\\n    '2020-08-23',\\n    '2020-08-24',\\n    '2020-08-25',\\n    '2020-08-26',\\n    '2020-08-27',\\n    '2020-08-28',\\n    '2020-08-29',\\n    '2020-08-30',\\n    '2020-08-31',\\n    '2020-09-01',\\n    '2020-09-02',\\n    '2020-09-03',\\n    '2020-09-04',\\n    '2020-09-05',\\n    '2020-09-06',\\n    '2020-09-07',\\n    '2020-09-08',\\n    '2020-09-09',\\n    '2020-09-10',\\n    '2020-09-11',\\n    '2020-09-12',\\n    '2020-09-13',\\n    '2020-09-14',\\n    '2020-09-15',\\n    '2020-09-16',\\n    '2020-09-17',\\n    '2020-09-18',\\n  ],\\n  series: [\\n    {\\n      type: 'column',\\n      data: [\\n        10868, 8786, 10824, 7860, 13253, 17015, 19298, 13937, 11541, 15244, 14247, 9402, 10440,\\n        9345, 18459, 9763, 11074, 11770, 12206, 11434, 16218, 11914, 16781, 10555, 10899, 10713, 0,\\n        0, 20357, 10424,\\n      ],\\n      axisYTitle: '消耗时间',\\n    },\\n    {\\n      type: 'line',\\n      data: [\\n        649.483, 1053.7, 679.817, 638.117, 843.3, 1092.983, 1036.317, 1031.9, 803.467, 830.733,\\n        709.867, 665.233, 696.367, 692.867, 936.017, 782.867, 653.8, 856.683, 777.15, 773.283,\\n        833.3, 793.517, 894.45, 725.55, 709.967, 787.6, 644.183, 1066.65, 932.45, 753.583,\\n      ],\\n      axisYTitle: '完成时间',\\n    },\\n  ],\\n};\\n\\nexport default () => {\\n  return <DualAxes {...config} />;\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/ConfigProvider/demos/map-config.tsx?watch=parent';\n  export default \"import { ConfigProvider, GPTVis } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst content = `\\n  ~~~vis-chart\\n  {\\n    \\\"type\\\": \\\"pin-map\\\",\\n    \\\"data\\\": [\\n      {\\n        \\\"longitude\\\": 120.210792,\\n        \\\"latitude\\\": 30.246026,\\n        \\\"label\\\": \\\"杭州\\\"\\n      },\\n      {\\n        \\\"longitude\\\": 121.473667,\\n        \\\"latitude\\\": 31.230525,\\n        \\\"label\\\": \\\"上海\\\"\\n      },\\n      {\\n        \\\"longitude\\\": 120.585294,\\n        \\\"latitude\\\": 31.299758,\\n        \\\"label\\\": \\\"苏州\\\"\\n      },\\n      {\\n        \\\"longitude\\\": 118.796624,\\n        \\\"latitude\\\": 32.059344,\\n        \\\"label\\\": \\\"南京\\\"\\n      }\\n    ]\\n  }\\n~~~`;\\n\\nexport default () => (\\n  <ConfigProvider\\n    map={{ style: 'dark', token: '你的地图token' }}\\n    components={{\\n      PinMap: {\\n        markerStyle: {\\n          iconPath:\\n            'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*oxcETa4MKgwAAAAAAAAAAAAADmJ7AQ/original',\\n        },\\n      },\\n    }}\\n  >\\n    <GPTVis>{content}</GPTVis>\\n  </ConfigProvider>\\n);\\n\";;\n  ","import { isObject } from 'lodash';\nimport type { MapProps } from '../../Map';\nimport type { LarkMapProps } from '../../types';\nimport type { Marker, MarkerData, Polyline } from '../../types/map';\n\nconst DefaultMapConfig = {\n  mapOptions: {\n    center: [120.210792, 30.246026] as [number, number],\n    zoom: 16,\n    maxZoom: 18,\n    pitch: 0,\n    rotation: 0,\n    zoomEnable: true,\n    pitchEnable: true,\n  },\n};\n\nconst formatMapStyle = (props: MapProps) => {\n  const config: LarkMapProps = {\n    mapOptions: {\n      ...DefaultMapConfig.mapOptions,\n      center:\n        props.longitude && props.latitude\n          ? ([props.longitude, props.latitude] as [number, number])\n          : DefaultMapConfig.mapOptions.center,\n      zoom: props.scale || DefaultMapConfig.mapOptions.zoom,\n      pitch: props.skew || DefaultMapConfig.mapOptions.pitch,\n      rotation: props.rotate || DefaultMapConfig.mapOptions.rotation,\n      zoomEnable: props.enableZoom || DefaultMapConfig.mapOptions.zoomEnable,\n      pitchEnable: props.enableRotate || DefaultMapConfig.mapOptions.pitchEnable,\n      // 地图底图样式\n      style: props?.mapType,\n      // 高德地图密钥\n      token: props?.token,\n    },\n    logoVisible: false,\n  };\n  return config;\n};\n\nconst DefaultMarkerStyle = {\n  width: 12,\n  anchorX: 0,\n  anchorY: 1,\n  label: {\n    content: '',\n    color: '#000000',\n    fontSize: 10,\n    borderRadius: 5,\n    bgColor: '#ffffff',\n    padding: 5,\n  },\n  iconPath:\n    'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*3XdDTbsQ84QAAAAAAAAAAAAADmJ7AQ/original',\n};\n\nconst formatMakerStyle = (data: MarkerData[], markerStyle?: Partial<Marker>) => {\n  const labelStyle = Object.assign({}, DefaultMarkerStyle.label, markerStyle?.label);\n  // label 优先级 data > markerStyle > DefaultMarkerStyle\n  return data.map((marker: MarkerData, index: number) => {\n    const { label, id, ...rest } = marker;\n    return {\n      ...DefaultMarkerStyle,\n      ...markerStyle,\n      ...rest,\n      label: {\n        ...labelStyle,\n        ...(isObject(label) ? label : { content: label }),\n      },\n      id: id || index.toString(),\n    };\n  });\n};\n\nconst DefaultPolylineStyle = {\n  width: 2,\n  color: '#16f',\n  dottedLine: false,\n  zIndex: 1,\n};\n\nconst formatPolylineStyle = (data: Polyline[], polylineStyle?: Partial<Marker>) => {\n  return data.map((item: any) => {\n    return {\n      ...DefaultPolylineStyle,\n      ...polylineStyle,\n      ...item,\n    };\n  });\n};\n\nexport {\n  DefaultMarkerStyle,\n  DefaultPolylineStyle,\n  formatMakerStyle,\n  formatMapStyle,\n  formatPolylineStyle,\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/ConfigProvider/demos/components-config.tsx?watch=parent';\n  export default \"import { ConfigProvider, GPTVis } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst content = `\\n ~~~vis-chart\\n{\\n  \\\"type\\\": \\\"pie\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"分类一\\\", \\\"value\\\": 27 },\\n    { \\\"category\\\": \\\"分类二\\\", \\\"value\\\": 25 },\\n    { \\\"category\\\": \\\"分类三\\\", \\\"value\\\": 18 },\\n    { \\\"category\\\": \\\"分类四\\\", \\\"value\\\": 15 },\\n    { \\\"category\\\": \\\"分类五\\\", \\\"value\\\": 10 },\\n    { \\\"category\\\": \\\"其他\\\", \\\"value\\\": 5 }\\n  ]\\n}\\n~~~`;\\n\\nconst pieConfig = {\\n  legend: false,\\n  innerRadius: 0.6,\\n  style: {\\n    stroke: '#fff',\\n    inset: 1,\\n    radius: 10,\\n  },\\n};\\n\\nexport default () => (\\n  <ConfigProvider\\n    components={{\\n      Pie: pieConfig,\\n    }}\\n  >\\n    <GPTVis>{content}</GPTVis>\\n  </ConfigProvider>\\n);\\n\";;\n  ","import EventEmitter from '@antv/event-emitter';\nimport React, { memo, useEffect, useMemo } from 'react';\nimport type { Options } from 'react-markdown';\nimport Markdown from 'react-markdown';\nimport rehypeRaw from 'rehype-raw';\nimport remarkGfm from 'remark-gfm';\nimport { GPTVisContext } from './hooks/useContext';\nimport { useEventPublish } from './hooks/useEvent';\n\nexport interface GPTVisLiteProps extends Options {\n  /**\n   * 自定义 markdown components\n   */\n  components?:\n    | Options['components']\n    | {\n        [key: string]: (props: any) => React.ReactNode;\n      };\n  /**\n   * 🧪 订阅组件事件，实验性属性\n   * 用于子组件与容器组件通信\n   */\n  eventSubs?: Record<string, (data?: any) => void>;\n}\n\nconst GPTVisLite: React.FC<GPTVisLiteProps> = ({\n  children,\n  components,\n  rehypePlugins,\n  remarkPlugins,\n  eventSubs,\n  ...rest\n}) => {\n  const eventBus = useMemo(() => new EventEmitter(), []);\n  const contextValue = useMemo(() => ({ eventBus }), [eventBus]);\n\n  useEffect(() => {\n    if (eventSubs) {\n      const events = Object.keys(eventSubs);\n      for (const eventName of events) {\n        eventBus.on(eventName, eventSubs[eventName]);\n      }\n      return () => {\n        for (const eventName of events) {\n          eventBus.off(eventName, eventSubs[eventName]);\n        }\n      };\n    }\n  }, [eventBus, eventSubs]);\n\n  return (\n    <GPTVisContext.Provider value={contextValue}>\n      <Markdown\n        components={components}\n        rehypePlugins={[rehypeRaw, ...(rehypePlugins ? rehypePlugins : [])]}\n        remarkPlugins={[remarkGfm, ...(remarkPlugins ? remarkPlugins : [])]}\n        {...rest}\n      >\n        {children}\n      </Markdown>\n    </GPTVisContext.Provider>\n  );\n};\n\nexport { useEventPublish };\n\nexport default memo(GPTVisLite);\n","import MapView from './MapView';\nimport Marker from './Marker';\nimport Polyline from './Polyline';\n\nexport { MapView, Marker, Polyline };\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Area/demos/common.tsx?watch=parent';\n  export default \"import { Area } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = [\\n  { time: '1991', value: 3 },\\n  { time: '1992', value: 4 },\\n  { time: '1993', value: 3.5 },\\n  { time: '1994', value: 5 },\\n  { time: '1995', value: 4.9 },\\n  { time: '1996', value: 6 },\\n  { time: '1997', value: 7 },\\n  { time: '1998', value: 9 },\\n  { time: '1999', value: 13 },\\n];\\n\\nexport default () => {\\n  return (\\n    <Area data={data} axisXTitle=\\\"year\\\" axisYTitle=\\\"growth\\\" containerStyle={{ height: 300 }} />\\n  );\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/GPTVis/demos/tag.tsx?watch=parent';\n  export default \"import { GPTVisLite, withDefaultChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst components = {\\n  // Rewrite `a` style\\n  a(props: any) {\\n    const { href, children } = props;\\n    return (\\n      <a\\n        href={href}\\n        target=\\\"_blank\\\"\\n        rel=\\\"noreferrer\\\"\\n        style={{ textDecoration: '#2b8afe wavy underline' }}\\n      >\\n        {children}\\n      </a>\\n    );\\n  },\\n  // Rewrite `em`s (`*like so*`) to `i` with a color.\\n  em(props: any) {\\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\\n    const { node, ...rest } = props;\\n    return (\\n      <b\\n        style={{\\n          background: '#f0f489',\\n          fontWeight: 'bold',\\n        }}\\n        {...rest}\\n      />\\n    );\\n  },\\n  code: withDefaultChartCode(),\\n};\\n\\nconst content = `\\n# Haidilao's Food Delivery Revenue (2013-2022)\\n\\nHere’s a visualization of [Haidilao](/)'s food delivery revenue from 2013 to 2022. You can see a steady increase over the years, with notable *growth* particularly in recent years.\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"line\\\",\\n  \\\"data\\\": [{\\\"time\\\":2013,\\\"value\\\":59.3},{\\\"time\\\":2014,\\\"value\\\":64.4},{\\\"time\\\":2015,\\\"value\\\":68.9},{\\\"time\\\":2016,\\\"value\\\":74.4},{\\\"time\\\":2017,\\\"value\\\":82.7},{\\\"time\\\":2018,\\\"value\\\":91.9},{\\\"time\\\":2019,\\\"value\\\":99.1},{\\\"time\\\":2020,\\\"value\\\":101.6},{\\\"time\\\":2021,\\\"value\\\":114.4},{\\\"time\\\":2022,\\\"value\\\":121}]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\nexport default () => <GPTVisLite components={components}>{content}</GPTVisLite>;\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Column/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, Column, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个柱状图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"column\\\",\\n  \\\"data\\\": [{\\\"category\\\":2013,\\\"value\\\":59.3},{\\\"category\\\":2014,\\\"value\\\":64.4},{\\\"category\\\":2015,\\\"value\\\":68.9},{\\\"category\\\":2016,\\\"value\\\":74.4},{\\\"category\\\":2017,\\\"value\\\":82.7},{\\\"category\\\":2018,\\\"value\\\":91.9},{\\\"category\\\":2019,\\\"value\\\":99.1},{\\\"category\\\":2020,\\\"value\\\":101.6},{\\\"category\\\":2021,\\\"value\\\":114.4},{\\\"category\\\":2022,\\\"value\\\":121}],\\n  \\\"axisXTitle\\\": \\\"year\\\",\\n  \\\"axisYTitle\\\": \\\"GDP\\\"\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Column]: Column },\\n  style: { width: 350 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"帮我可视化一下最近几年 GDP 情况\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/guide/customize-style.md?watch=parent';\n  export const texts = [{\"value\":\"通过在 \",\"paraId\":0,\"tocIndex\":0},{\"value\":\"ConfigProvider\",\"paraId\":1,\"tocIndex\":0},{\"value\":\" 中传入样式属性，来配置图表组件的全局样式。\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"给各个组件定制样式\",\"paraId\":2,\"tocIndex\":1},{\"value\":\"import { ConfigProvider } from '@antv/gpt-vis';\\n\\n// 设置甜甜圈样式\\nconst pieConfig = {\\n  legend: false,\\n  innerRadius: 0.6,\\n  style: {\\n    stroke: '#fff',\\n    inset: 1,\\n    radius: 10,\\n  },\\n};\\n\\n// 面积图设置渐变色\\nconst areaConfig = {\\n  style: {\\n    fill: 'linear-gradient(-90deg, white 0%, darkgreen 100%)',\\n  },\\n  line: {\\n    style: {\\n      stroke: 'darkgreen',\\n      strokeWidth: 2,\\n    },\\n    tooltip: false,\\n  },\\n};\\n\\n// 地图设置图标\\nconst pinMapConfig = {\\n  markerStyle: {\\n    iconPath:\\n      'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*JZf9T6psSzkAAAAAAAAAAAAADmJ7AQ/original',\\n  },\\n};\\n\\nexport default () => {\\n  return (\\n    <ConfigProvider\\n      components={{\\n        Pie: pieConfig,\\n        Area: areaConfig,\\n        PinMap: pinMapConfig,\\n      }}\\n    >\\n      // ...\\n    </ConfigProvider>\\n  );\\n};\\n\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"import { ConfigProvider } from '@antv/gpt-vis';\\n\\nexport default () => {\\n  return (\\n    <ConfigProvider\\n      plot={{ theme: { type: 'academy' } }}\\n      map={{ style: 'dark', token: '你的地图token' }}\\n    >\\n      // ...\\n    </ConfigProvider>\\n  );\\n};\\n\",\"paraId\":4,\"tocIndex\":2},{\"value\":\"更多用法详见 \",\"paraId\":5},{\"value\":\"ConfigProvider\",\"paraId\":6}];\n  ","import type { LarkMapProps } from '@antv/larkmap';\nimport type { CSSProperties, ReactNode } from 'react';\nimport type { Map } from './map';\n\nexport type { LarkMapProps };\n\nexport enum ChartType {\n  Pie = 'pie',\n  Column = 'column',\n  Line = 'line',\n  Area = 'area',\n  Scatter = 'scatter',\n  Histogram = 'histogram',\n  Treemap = 'treemap',\n  Bar = 'bar',\n  WordCloud = 'word-cloud',\n  DualAxes = 'dual-axes',\n  Radar = 'radar',\n  PinMap = 'pin-map',\n  PathMap = 'path-map',\n  HeatMap = 'heat-map',\n  MindMap = 'mind-map',\n  FishboneDiagram = 'fishbone-diagram',\n  FlowDiagram = 'flow-diagram',\n  IndentedTree = 'indented-tree',\n  NetworkGraph = 'network-graph',\n  OrganizationChart = 'organization-chart',\n  VisText = 'vis-text',\n}\n\nexport type Charts = keyof typeof ChartType;\n\nexport interface BaseChartProps {\n  containerStyle?: CSSProperties;\n  className?: string;\n  children?: ReactNode;\n}\n\nexport interface BasePlotProps<T> extends BaseChartProps {\n  data: T[];\n  axisXTitle?: string;\n  axisYTitle?: string;\n}\n\nexport interface BaseMapProps<T> extends BaseChartProps, Map {\n  style?: CSSProperties;\n  data: T[];\n  // 高德地图密钥\n  token?: string;\n}\n\nexport interface BaseGraphProps<T> extends BaseChartProps {\n  data: T;\n}\n\ninterface GraphNode {\n  name: string;\n}\n\ninterface GraphEdge {\n  source: string;\n  target: string;\n  name?: string;\n}\n\nexport interface GraphData {\n  nodes: GraphNode[];\n  edges: GraphEdge[];\n}\n\nexport interface TreeGraphData {\n  name: string;\n  children?: TreeGraphData[];\n  [key: string]: any;\n}\n\nexport interface GraphProps extends BaseGraphProps<GraphData> {}\n\nexport interface TreeGraphProps extends BaseGraphProps<TreeGraphData> {}\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/GPTVis/demos/default.tsx?watch=parent';\n  export default \"import { GPTVis } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst content = `# GPT-VIS \\\\n\\\\nComponents for GPTs, generative AI, and LLM projects. Not only UI Components.\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"pie\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"分类一\\\", \\\"value\\\": 27 },\\n    { \\\"category\\\": \\\"分类二\\\", \\\"value\\\": 25 },\\n    { \\\"category\\\": \\\"分类三\\\", \\\"value\\\": 18 },\\n    { \\\"category\\\": \\\"其他\\\", \\\"value\\\": 5 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nexport default () => {\\n  return <GPTVis>{content}</GPTVis>;\\n};\\n\";;\n  ","export { DEFAULT_VIS_TEXT_CONFIG } from './config';\nexport type { VisTextProps } from './types';\nexport { default as VisText } from './VisText';\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Bar/demos/common.tsx?watch=parent';\n  export default \"import { Bar } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = [\\n  {\\n    城市: '七台河',\\n    销售额: 52827.32,\\n  },\\n  {\\n    城市: '万县',\\n    销售额: 16921.576,\\n  },\\n  {\\n    城市: '三亚',\\n    销售额: 22698.396,\\n  },\\n  {\\n    城市: '三岔子',\\n    销售额: 3262.98,\\n  },\\n  {\\n    城市: '上海',\\n    销售额: 182450.567,\\n  },\\n  {\\n    城市: '上虞',\\n    销售额: 10672.872,\\n  },\\n  {\\n    城市: '东丰',\\n    销售额: 1785.84,\\n  },\\n  {\\n    城市: '东台',\\n    销售额: 2789.892,\\n  },\\n  {\\n    城市: '东宁',\\n    销售额: 2706.2,\\n  },\\n  {\\n    城市: '东村',\\n    销售额: 13692.14,\\n  },\\n  {\\n    城市: '东海',\\n    销售额: 4508.28,\\n  },\\n  {\\n    城市: '东胜',\\n    销售额: 12766.068,\\n  },\\n  {\\n    城市: '东莞',\\n    销售额: 10165.89,\\n  },\\n  {\\n    城市: '东营',\\n    销售额: 17153.92,\\n  },\\n  {\\n    城市: '中枢',\\n    销售额: 1050.42,\\n  },\\n  {\\n    城市: '丰县',\\n    销售额: 10309.516,\\n  },\\n  {\\n    城市: '丰镇',\\n    销售额: 3507.336,\\n  },\\n  {\\n    城市: '临水',\\n    销售额: 21443.1,\\n  },\\n  {\\n    城市: '临江',\\n    销售额: 36496.74,\\n  },\\n  {\\n    城市: '临汾',\\n    销售额: 26205.48,\\n  },\\n  {\\n    城市: '临沂',\\n    销售额: 97200.74,\\n  },\\n  {\\n    城市: '临海',\\n    销售额: 7071.456,\\n  },\\n  {\\n    城市: '临清',\\n    销售额: 38676.12,\\n  },\\n  {\\n    城市: '丹东',\\n    销售额: 45447.612,\\n  },\\n  {\\n    城市: '丹江口',\\n    销售额: 4879.616,\\n  },\\n  {\\n    城市: '丽水',\\n    销售额: 3983.616,\\n  },\\n  {\\n    城市: '义乌',\\n    销售额: 34511.624,\\n  },\\n  {\\n    城市: '义马',\\n    销售额: 1144.024,\\n  },\\n  {\\n    城市: '乌海',\\n    销售额: 16096.64,\\n  },\\n  {\\n    城市: '乌达',\\n    销售额: 3474.66,\\n  },\\n  {\\n    城市: '乐城',\\n    销售额: 3241,\\n  },\\n  {\\n    城市: '乐山',\\n    销售额: 12561.892,\\n  },\\n  {\\n    城市: '九台',\\n    销售额: 32535.944,\\n  },\\n  {\\n    城市: '九江',\\n    销售额: 29890.7,\\n  },\\n  {\\n    城市: '二道江',\\n    销售额: 4461.24,\\n  },\\n  {\\n    城市: '云浮',\\n    销售额: 6351.212,\\n  },\\n  {\\n    城市: '云阳',\\n    销售额: 24699.64,\\n  },\\n  {\\n    城市: '五常',\\n    销售额: 3771.46,\\n  },\\n  {\\n    城市: '亳州',\\n    销售额: 16961.14,\\n  },\\n  {\\n    城市: '仙居',\\n    销售额: 6868.512,\\n  },\\n  {\\n    城市: '仙桃',\\n    销售额: 16600.164,\\n  },\\n  {\\n    城市: '仪征',\\n    销售额: 8566.628,\\n  },\\n  {\\n    城市: '任丘',\\n    销售额: 12106.78,\\n  },\\n  {\\n    城市: '余下',\\n    销售额: 103.04,\\n  },\\n  {\\n    城市: '余姚',\\n    销售额: 12621.84,\\n  },\\n  {\\n    城市: '佛山',\\n    销售额: 7500.388,\\n  },\\n  {\\n    城市: '佳木斯',\\n    销售额: 63263.34,\\n  },\\n  {\\n    城市: '依兰',\\n    销售额: 26874.82,\\n  },\\n  {\\n    城市: '保定',\\n    销售额: 124133.1,\\n  },\\n  {\\n    城市: '信宜',\\n    销售额: 4771.06,\\n  },\\n  {\\n    城市: '信阳',\\n    销售额: 38849.412,\\n  },\\n  {\\n    城市: '兖州',\\n    销售额: 28648.2,\\n  },\\n  {\\n    城市: '公主岭',\\n    销售额: 21210.756,\\n  },\\n  {\\n    城市: '六合',\\n    销售额: 5775.98,\\n  },\\n  {\\n    城市: '兰州',\\n    销售额: 42543.144,\\n  },\\n];\\n\\nexport default () => {\\n  return <Bar data={data} xField=\\\"城市\\\" yField=\\\"销售额\\\" axisXTitle=\\\"城市\\\" axisYTitle=\\\"销售额\\\" />;\\n};\\n\";;\n  ","module.exports = (typeof globalThis !== 'undefined' ? globalThis : self)['mapboxgl'];","import type { HeatmapLayerProps } from '@antv/larkmap';\nimport { HeatmapLayer } from '@antv/larkmap';\nimport React, { useMemo, type FC } from 'react';\nimport { useMapConfig } from '../ConfigProvider/hooks';\nimport type { MapProps } from '../Map';\nimport Map from '../Map';\n\nconst heapLayerOptions: Omit<HeatmapLayerProps, 'source'> = {\n  autoFit: true,\n  shape: 'heatmap' as const,\n  size: {\n    field: 'value',\n    value: [0, 1],\n  },\n  style: {\n    intensity: 3,\n    radius: 20,\n    opacity: 1,\n    rampColors: {\n      colors: ['#FF4818', '#F7B74A', '#FFF598', '#F27DEB', '#8C1EB2', '#421EB2'],\n      positions: [0, 0.2, 0.4, 0.6, 0.8, 1.0],\n    },\n  },\n};\n\ntype GeoData = {\n  longitude: number;\n  latitude: number;\n  value: number;\n};\n\nexport type HeatMapProps = MapProps & {\n  data?: GeoData[];\n};\n\nconst HeatMap: FC<HeatMapProps> = (props) => {\n  const { children, data, ...mapConfigRest } = useMapConfig('HeatMap', props);\n\n  const source = useMemo(\n    () => ({\n      data: data || [],\n      parser: { type: 'json', x: 'longitude', y: 'latitude' },\n    }),\n    [data],\n  );\n\n  return (\n    <>\n      <Map {...mapConfigRest}>\n        <HeatmapLayer {...heapLayerOptions} source={source} />\n        {children}\n      </Map>\n    </>\n  );\n};\n\nexport default HeatMap;\n","// organize-imports-ignore\nexport { default as Map, type MapProps } from './Map';\nexport { default as PinMap, type PinMapProps } from './PinMap';\nexport { default as HeatMap, type HeatMapProps } from './HeatMap';\nexport { default as PathMap, type PathMapProps } from './PathMap';\n","export { useSvgWrapper } from './useSvgWrapper';\n","import { isPlainObject, mergeWith } from 'lodash';\nimport { DEFAULT_GLOBAL_CONFIG } from '../constants';\nimport type { GlobalConfig } from '../types';\n\nexport const mergeGlobalConfig = (config: GlobalConfig) => {\n  const globalConfig = mergeWith({}, DEFAULT_GLOBAL_CONFIG, config, (objValue) => {\n    if (Array.isArray(objValue)) {\n      return objValue;\n    }\n  });\n\n  return globalConfig;\n};\n\nfunction mergeGraphFunctions(\n  key: string,\n  currValue: (value: any) => any,\n  prevValue: (value: any) => any,\n) {\n  if (['plugins', 'behaviors', 'transforms'].includes(key)) {\n    return (prev: any[]) => currValue(prev);\n  } else {\n    return function (datum: any) {\n      // @ts-ignore this refers to the graph instance\n      const value = currValue.call(this, datum);\n      if (isPlainObject(value)) return mergeGraphOptions(prevValue, value);\n      return value;\n    };\n  }\n}\n\nexport function mergeGraphOptions(...options: Record<string, any>[]) {\n  if (options.length === 0) return {};\n\n  const merged = { ...options[0] };\n\n  for (let i = 1; i < options.length; i++) {\n    const currentOptions = options[i];\n\n    for (const key in currentOptions) {\n      if (currentOptions.hasOwnProperty(key)) {\n        const currValue = currentOptions[key];\n        const prevValue = merged[key];\n\n        if (['component', 'data'].includes(key)) {\n          merged[key] = currValue;\n        } else if (typeof currValue === 'function') {\n          merged[key] = mergeGraphFunctions(key, currValue, prevValue);\n        } else if (isPlainObject(currValue) && isPlainObject(prevValue)) {\n          merged[key] = mergeGraphOptions(prevValue, currValue);\n        } else {\n          merged[key] = currValue;\n        }\n      }\n    }\n  }\n\n  return merged;\n}\n","import type { DualAxesConfig } from '@ant-design/plots';\nimport { DualAxes as ADCDualAxes } from '@ant-design/plots';\nimport React, { useMemo } from 'react';\nimport { usePlotConfig } from '../ConfigProvider/hooks';\nimport { transform } from './util';\n\nexport type DualAxesProps = Partial<DualAxesConfig> & {\n  categories: string[];\n  axisXTitle?: string;\n  series: DualAxesSeriesItem[];\n  legendTypeList: string[];\n};\n\nexport type DualAxesSeriesItem = {\n  type: string;\n  data: number[];\n  axisYTitle?: string;\n};\n\nconst defaultConfig = (props: DualAxesProps): DualAxesConfig => {\n  const { xField = 'category', axisXTitle, legendTypeList } = props;\n  return {\n    xField,\n    axis: {\n      x: {\n        title: axisXTitle,\n      },\n    },\n    legend: {\n      color: {\n        itemMarker: (v: string, i: number) => {\n          return legendTypeList[i];\n        },\n      },\n    },\n    scale: {\n      color: {\n        palette: 'category10',\n      },\n    },\n  };\n};\n\nconst DualAxes = (props: DualAxesProps) => {\n  const { categories, series, ...others } = props;\n  const transformData = useMemo(() => transform(series, categories), [props]);\n  const config = usePlotConfig<DualAxesConfig>('DualAxes', defaultConfig, {\n    ...others,\n    ...transformData,\n  });\n\n  return <ADCDualAxes {...config} />;\n};\n\nexport default DualAxes;\n","import type { DualAxesSeriesItem } from '.';\nimport { ChartType } from '../types';\n\nexport function transform(series: DualAxesSeriesItem[], categories: string[]) {\n  const newChildren = series.map((item: any, index: number) => {\n    const { type, axisYTitle, ...others } = item;\n\n    const defaultYField = axisYTitle || `value_${index + 1}`;\n    const baseConfig = {\n      ...others,\n      yField: defaultYField,\n      axis: { y: { title: axisYTitle } },\n      // data放在最外层\n      data: undefined,\n    };\n\n    if (type === ChartType.Column) {\n      return { ...baseConfig, type: 'interval' };\n    }\n\n    if (type === ChartType.Line) {\n      return {\n        ...baseConfig,\n        type,\n        shapeField: 'smooth',\n        axis: { y: { position: 'right', title: axisYTitle } },\n        style: { lineWidth: 2 },\n      };\n    }\n\n    return baseConfig;\n  });\n\n  const newData = categories.map((item: string, index: number) => {\n    const temp = {\n      category: item,\n    } as {\n      category: string;\n      [key: string]: any;\n    };\n    series.forEach((s: DualAxesSeriesItem, i: number) => {\n      const defaultYField = s.axisYTitle || `value_${i + 1}`;\n      temp[defaultYField] = s.data[index];\n    });\n    return temp;\n  });\n\n  const legendTypeList = series.map((item: any) => {\n    return item.type === ChartType.Line ? 'smooth' : 'rect';\n  });\n\n  return {\n    children: newChildren,\n    data: newData,\n    legendTypeList,\n  };\n}\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/GPTVis/demos/event.tsx?watch=parent';\n  export default \"import type { CodeBlockComponent } from '@antv/gpt-vis';\\nimport { GPTVisLite, useEventPublish, withChartCode } from '@antv/gpt-vis';\\nimport React, { useState } from 'react';\\n\\n/**\\n * 自定义代码块渲染器\\n */\\nconst MyUIRenderer: CodeBlockComponent = ({ children }) => {\\n  const eventPublish = useEventPublish();\\n  return (\\n    <div style={{ backgroundColor: '#f0f0f0', padding: '10px' }}>\\n      <p>{children}</p>\\n      <button\\n        onClick={() => {\\n          eventPublish('xxxclick', {});\\n        }}\\n        type=\\\"button\\\"\\n      >\\n        click\\n      </button>\\n    </div>\\n  );\\n};\\nconst customRenderers = { 'my-ui': MyUIRenderer };\\nconst components = {\\n  code: withChartCode({\\n    languageRenderers: customRenderers,\\n    components: {},\\n  }),\\n};\\n\\nconst content = `\\n\\\\`\\\\`\\\\`my-ui\\nmy ui data ...\\n\\\\`\\\\`\\\\`\\n`;\\nexport default () => {\\n  const [count, setCount] = useState(0);\\n  const onClick = (data: any) => {\\n    console.log('data: ', data);\\n    setCount((pre) => pre + 1);\\n    // do something\\n  };\\n\\n  return (\\n    <>\\n      <p>count: {count}</p>\\n      <GPTVisLite eventSubs={{ xxxclick: onClick }} components={components}>\\n        {content}\\n      </GPTVisLite>\\n    </>\\n  );\\n};\\n\";;\n  ","import { useScene } from '@antv/larkmap';\nimport { useEffect } from 'react';\nimport type { Map } from '../../types/map';\nimport { fitBounds, setMapStatus, setMapView } from '../../utils/map';\n\n// 更新地图视野\nexport default (props: Map) => {\n  const scene = useScene();\n  useEffect(() => {\n    setMapView(props, scene);\n  }, []);\n  useEffect(() => {\n    setMapStatus(props, scene);\n  }, [props.enableRotate, props.enableScroll, props.enableZoom]);\n  useEffect(() => {\n    fitBounds(props, scene);\n  }, [props.includePoints, props.markers, props.polyline, props.includePadding]);\n\n  return null;\n};\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const StyledGPTVis = styled.div`\n  min-width: 300px;\n  max-width: 100%;\n  height: 300px;\n  overflow: hidden;\n  position: relative;\n  padding: 16px;\n`;\n\nexport const TextButton = styled.button`\n  border: none;\n  box-shadow: none;\n  background: transparent;\n  color: #494949;\n  height: 26px;\n  padding: 0 8px;\n  font-size: 12px;\n  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n  transform: scale(1);\n  border-radius: 8px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  cursor: pointer;\n  outline: none;\n  font-family: inherit;\n\n  &:hover,\n  &:focus {\n    color: #666;\n    background: #e8e8e8;\n    transform: scale(1.02);\n  }\n\n  &:active {\n    background: #e8e8e8;\n    transform: scale(0.98);\n  }\n\n  .anticon {\n    font-size: 12px;\n  }\n\n  /* 禁用状态 */\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n\n    &:hover,\n    &:focus,\n    &:active {\n      background: transparent;\n      transform: scale(1);\n    }\n  }\n`;\n\nexport const ChartWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n\n  h5 {\n    font-size: 12px;\n    font-weight: 400;\n    color: #666;\n    height: 150px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  & > * {\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nexport const TabContainer = styled.div`\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const TabHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #f5f5f5;\n  padding: 6px 14px 6px 6px;\n  gap: 2px;\n  position: relative;\n  z-index: 10;\n`;\n\nexport const TabLeftGroup = styled.div`\n  display: flex;\n  gap: 2px;\n`;\n\nexport const TabRightGroup = styled.div`\n  display: flex;\n  gap: 4px;\n  align-items: center;\n`;\n\nexport const TabContent = styled.div`\n  background: #fff;\n  overflow: hidden;\n  position: relative;\n  background: #fafafa;\n`;\n\nexport const ErrorMessage = styled.div`\n  padding: 16px;\n  height: 150px;\n  font-size: 12px;\n  color: #666;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const GlobalStyles = createGlobalStyle`\n  pre:has(.gpt-vis) {\n    overflow: hidden;\n  }\n`;\n\nexport const StyledTabButton = styled.button<{ active?: boolean }>`\n  border: none;\n  box-shadow: none;\n  background: ${(props) => (props.active ? '#fff' : 'transparent')};\n  color: #494949;\n  border-radius: 8px;\n  height: 26px;\n  width: 52px;\n  font-size: 12px;\n  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n  transform: scale(1);\n  cursor: pointer;\n  outline: none;\n  font-family: inherit;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  /* 选中状态的阴影效果 */\n  ${(props) =>\n    props.active &&\n    `\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);\n  `}\n\n  &:hover,\n  &:focus {\n    background: ${(props) => (props.active ? '#fff' : '#f0f0f0')};\n    color: #494949;\n    box-shadow: ${(props) =>\n      props.active ? '0 2px 6px rgba(0, 0, 0, 0.12)' : '0 1px 3px rgba(0, 0, 0, 0.06)'};\n    transform: scale(1.02);\n  }\n\n  &:active {\n    background: ${(props) => (props.active ? '#fff' : '#e8e8e8')};\n    transform: scale(0.96);\n    box-shadow: ${(props) =>\n      props.active ? '0 1px 2px rgba(0, 0, 0, 0.1)' : '0 1px 2px rgba(0, 0, 0, 0.04)'};\n    transition: all 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);\n  }\n`;\n\nexport const Divider = styled.div`\n  width: 1px;\n  height: 16px;\n  background-color: #d9d9d9;\n  margin: 0 8px;\n  flex-shrink: 0;\n`;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/PathMap/demos/default.tsx?watch=parent';\n  export default \"import { PathMap } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = [\\n  {\\n    points: [\\n      { longitude: 120.130638, latitude: 30.219835, label: '石屋洞' },\\n      { longitude: 120.128125, latitude: 30.219386, label: '满觉陇' },\\n      { longitude: 120.118362, latitude: 30.217175, label: '杨梅岭' },\\n      { longitude: 120.112958, latitude: 30.207319, label: '理安寺' },\\n      { longitude: 120.11335, latitude: 30.202395, label: '九溪烟树' },\\n    ],\\n  },\\n  {\\n    points: [\\n      { longitude: 120.100549, latitude: 30.236875, label: '飞来峰' },\\n      { longitude: 120.101406, latitude: 30.240826, label: '灵隐寺' },\\n      { longitude: 120.105337, latitude: 30.236818, label: '天竺三寺' },\\n    ],\\n  },\\n  {\\n    points: [\\n      { longitude: 120.116979, latitude: 30.252876, label: '杭州植物园' },\\n      { longitude: 120.127654, latitude: 30.245663, label: '杭州花圃' },\\n      { longitude: 120.135764, latitude: 30.251448, label: '苏堤' },\\n    ],\\n  },\\n  {\\n    points: [\\n      { longitude: 120.130095, latitude: 30.207505, label: '虎跑公园' },\\n      { longitude: 120.145323, latitude: 30.214993, label: '玉皇飞云' },\\n      { longitude: 120.155057, latitude: 30.232985, label: '长桥公园' },\\n    ],\\n  },\\n];\\nconst routeData = data.map((item) => {\\n  return {\\n    path: item,\\n    markers: item.points,\\n  };\\n});\\n\\nexport default () => {\\n  return <PathMap data={routeData} mapType=\\\"amap://styles/2acc71263b1344d93a902db8df1c8b68\\\" />;\\n};\\n\";;\n  ","import React from 'react';\nimport { DEFAULT_GLOBAL_CONFIG } from '../constants';\nimport type { GlobalConfig } from '../types';\n\nexport const ConfigContext = React.createContext<GlobalConfig>(DEFAULT_GLOBAL_CONFIG);\n","import { Tooltip, Typography } from 'antd';\nimport { pick, toString } from 'lodash';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useComponentGlobalConfig } from '../ConfigProvider/hooks';\nimport { type TextConfig, STATICS_KEY } from './config';\nimport type { VisTextProps } from './types';\nimport { getThemeColor, useAntdDarkAlgorithm } from './utils';\n\nconst { Text } = Typography;\n\nconst StyledText = styled(Text)`\n  margin-left: 1px;\n  margin-right: 1px;\n`;\n\nfunction renderPrefixSuffix(\n  symbol: string,\n  staticsConfig: TextConfig[typeof STATICS_KEY],\n  props: VisTextProps,\n) {\n  if (!symbol) return null;\n  const Component = staticsConfig?.[symbol];\n  if (Component) return <Component {...props} />;\n  return symbol;\n}\n\nconst VisText = (props: VisTextProps) => {\n  const { children, className, style, type, origin } = props;\n\n  const isDark = useAntdDarkAlgorithm();\n  const textConfig = useComponentGlobalConfig('VisText');\n\n  const encoding = type ? textConfig?.[type] : {};\n  const staticsConfig = textConfig?.[STATICS_KEY];\n\n  return (\n    // TODO  @羽熙 暂时简单处理 tooltip 直接显示 origin，后续可以根据 origin 类型分类处理\n    <Tooltip title={toString(origin)}>\n      <StyledText\n        className={className}\n        style={{\n          // antd Text 组件写死了 14px，在段落定义了 font-size 的情况下，显示很突兀，这里不设置，跟随上级容器字体大小改变。\n          // TODO @羽熙 之后看能否通过 antd ConfigProvider 统一配置\n          fontSize: 'unset',\n          color: getThemeColor({ type, color: encoding?.color, theme: isDark ? 'dark' : 'light' }),\n          ...style,\n          ...pick(encoding, ['backgroundColor', 'fontWeight']),\n        }}\n      >\n        {renderPrefixSuffix(encoding?.prefix, staticsConfig, props)}\n        {children}\n        {renderPrefixSuffix(encoding?.suffix, staticsConfig, props)}\n      </StyledText>\n    </Tooltip>\n  );\n};\n\nexport default VisText;\n","import type { BarConfig } from '@ant-design/plots';\nimport { Bar as ADCBar } from '@ant-design/plots';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { usePlotConfig } from '../ConfigProvider/hooks';\nimport type { BasePlotProps } from '../types';\n\ntype BarDataItem = {\n  category: string;\n  value: number;\n  [key: string]: string | number;\n};\n\nexport type BarProps = BasePlotProps<BarDataItem> & Partial<BarConfig>;\n\nconst defaultConfig = (props: BarConfig): BarConfig => {\n  const { data, xField = 'category', yField = 'value' } = props;\n  const hasGroupField = get(data, '[0].group') !== undefined;\n  const axisYTitle = get(props, 'axis.y.title');\n\n  return {\n    xField,\n    yField,\n    colorField: hasGroupField ? 'group' : undefined,\n    tooltip: (d) => {\n      const tooltipName = axisYTitle || d[xField as string];\n      return {\n        name: tooltipName,\n        value: d[yField as string],\n      };\n    },\n    style: {\n      // 圆角样式\n      radiusTopLeft: 5,\n      radiusTopRight: 5,\n    },\n  };\n};\n\nconst Bar = (props: BarProps) => {\n  const config = usePlotConfig<BarConfig>('Bar', defaultConfig, props);\n\n  return <ADCBar {...config} />;\n};\n\nexport default Bar;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Line/demos/category.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, GPTVisLite, Line, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n以下是为你绘制的一个折线图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"line\\\",\\n  \\\"data\\\": [\\n    {\\n      \\\"time\\\": \\\"1974\\\",\\n      \\\"value\\\": 107,\\n      \\\"group\\\": \\\"Gas flaring\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1974\\\",\\n      \\\"value\\\": 208,\\n      \\\"group\\\": \\\"Renewables\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1974\\\",\\n      \\\"value\\\": 356,\\n      \\\"group\\\": \\\"Fossil fuels\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1975\\\",\\n      \\\"value\\\": 173,\\n      \\\"group\\\": \\\"Gas flaring\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1975\\\",\\n      \\\"value\\\": 415,\\n      \\\"group\\\": \\\"Renewables\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1975\\\",\\n      \\\"value\\\": 364,\\n      \\\"group\\\": \\\"Fossil fuels\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1976\\\",\\n      \\\"value\\\": 117,\\n      \\\"group\\\": \\\"Gas flaring\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1976\\\",\\n      \\\"value\\\": 220,\\n      \\\"group\\\": \\\"Renewables\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1976\\\",\\n      \\\"value\\\": 373,\\n      \\\"group\\\": \\\"Fossil fuels\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1977\\\",\\n      \\\"value\\\": 122,\\n      \\\"group\\\": \\\"Gas flaring\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1977\\\",\\n      \\\"value\\\": 225,\\n      \\\"group\\\": \\\"Renewables\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1977\\\",\\n      \\\"value\\\": 382,\\n      \\\"group\\\": \\\"Fossil fuels\\\"\\n    }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Line]: Line },\\n  style: { width: 350 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"折线图可视化一下我的数据\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb', maxWidth: '60%', overflow: 'scroll' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","import type { ILayer } from '@antv/l7';\nimport { useScene } from '@antv/larkmap';\nimport { useEffect, useState } from 'react';\nimport type { Map } from '../../types/map';\nimport { setPolyline } from '../../utils/map';\n// 渲染线图层\nexport default (props: Map) => {\n  const scene = useScene();\n  const [layers, setLayers] = useState<ILayer[]>([]);\n  const removeLayers = () => {\n    layers.forEach((item) => {\n      scene.removeLayer(item);\n    });\n  };\n  useEffect(() => {\n    if (!props.polyline) return;\n    const lineLayers = setPolyline(props.polyline || []);\n    removeLayers();\n    lineLayers.forEach((item) => {\n      scene.addLayer(item);\n    });\n    setLayers(lineLayers);\n\n    return () => {\n      removeLayers();\n    };\n  }, [props.polyline]);\n\n  return null;\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/GPTVis/demos/relation.tsx?watch=parent';\n  export default \"import { GPTVis } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst content = `# GPT-VIS \\\\n\\\\nComponents for GPTs, generative AI, and LLM projects. Not only UI Components.\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"mind-map\\\",\\n  \\\"data\\\": {\\n    \\\"name\\\": \\\"台风形成的因素\\\",\\n    \\\"children\\\": [\\n      {\\n        \\\"name\\\": \\\"气象条件\\\",\\n        \\\"children\\\": [\\n          { \\\"name\\\": \\\"温暖的海水\\\" },\\n          { \\\"name\\\": \\\"气压分布\\\" },\\n          { \\\"name\\\": \\\"湿度水平\\\" },\\n          { \\\"name\\\": \\\"风的切变\\\" }\\n        ]\\n      },\\n      {\\n        \\\"name\\\": \\\"地理环境\\\",\\n        \\\"children\\\": [\\n          { \\\"name\\\": \\\"大陆架的形状与深度\\\" },\\n          { \\\"name\\\": \\\"海洋暖流的分布\\\" },\\n          { \\\"name\\\": \\\"热带地区的气候特征\\\" },\\n          { \\\"name\\\": \\\"岛屿的影响\\\" }\\n        ]\\n      }\\n    ]\\n  }\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nexport default () => {\\n  return <GPTVis>{content}</GPTVis>;\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Column/demos/group.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, Column, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n以下是为你绘制的一个柱状图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"column\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"北京\\\", \\\"value\\\": 825.6, \\\"group\\\": \\\"油车\\\" },\\n    { \\\"category\\\": \\\"北京\\\", \\\"value\\\": 60.2, \\\"group\\\": \\\"新能源汽车\\\" },\\n    { \\\"category\\\": \\\"上海\\\", \\\"value\\\": 450, \\\"group\\\": \\\"油车\\\" },\\n    { \\\"category\\\": \\\"上海\\\", \\\"value\\\": 95, \\\"group\\\": \\\"新能源汽车\\\" },\\n    { \\\"category\\\": \\\"深圳\\\", \\\"value\\\": 506, \\\"group\\\": \\\"油车\\\" },\\n    { \\\"category\\\": \\\"深圳\\\", \\\"value\\\": 76.7, \\\"group\\\": \\\"新能源汽车\\\" },\\n    { \\\"category\\\": \\\"广州\\\", \\\"value\\\": 976.6, \\\"group\\\": \\\"油车\\\" },\\n    { \\\"category\\\": \\\"广州\\\", \\\"value\\\": 97.2, \\\"group\\\": \\\"新能源汽车\\\" },\\n    { \\\"category\\\": \\\"杭州\\\", \\\"value\\\": 651.2, \\\"group\\\": \\\"油车\\\" },\\n    { \\\"category\\\": \\\"杭州\\\", \\\"value\\\": 62, \\\"group\\\": \\\"新能源汽车\\\" }\\n  ],\\n  \\\"group\\\": true,\\n  \\\"axisXTitle\\\": \\\"城市\\\",\\n  \\\"axisYTitle\\\": \\\"售量\\\"\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Column]: Column },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"主要城市油车与新能源汽车的售卖量对比\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/GPTVis/demos/code.tsx?watch=parent';\n  export default \"import type { CodeBlockComponent } from '@antv/gpt-vis';\\nimport { ChartType, GPTVisLite, Pie, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\n/**\\n * 自定义代码块渲染器\\n */\\nconst MyUIRenderer: CodeBlockComponent = ({ children }) => {\\n  return <div style={{ backgroundColor: '#f0f0f0', padding: '10px' }}>{children}</div>;\\n};\\nconst customRenderers = { 'my-ui': MyUIRenderer };\\nconst components = {\\n  code: withChartCode({\\n    languageRenderers: customRenderers, // register custom block renderer\\n    components: { [ChartType.Pie]: Pie }, // register a pie chart\\n  }),\\n};\\n\\nconst content = `\\n\\\\`\\\\`\\\\`my-ui\\nmy data ...\\n\\\\`\\\\`\\\\`\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"pie\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"分类一\\\", \\\"value\\\": 27 },\\n    { \\\"category\\\": \\\"分类二\\\", \\\"value\\\": 25 },\\n    { \\\"category\\\": \\\"分类三\\\", \\\"value\\\": 18 },\\n    { \\\"category\\\": \\\"分类四\\\", \\\"value\\\": 15 },\\n    { \\\"category\\\": \\\"分类五\\\", \\\"value\\\": 10 },\\n    { \\\"category\\\": \\\"其他\\\", \\\"value\\\": 5 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\nexport default () => <GPTVisLite components={components}>{content}</GPTVisLite>;\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/guide/customize-style.en.md?watch=parent';\n  export const texts = [{\"value\":\"Configure global styles for chart components by passing style properties to the \",\"paraId\":0,\"tocIndex\":0},{\"value\":\"ConfigProvider\",\"paraId\":1,\"tocIndex\":0},{\"value\":\".\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"Customize styles for each component\",\"paraId\":2,\"tocIndex\":1},{\"value\":\"import { ConfigProvider } from '@antv/gpt-vis';\\n\\n// Set donut chart style\\nconst pieConfig = {\\n  legend: false,\\n  innerRadius: 0.6,\\n  style: {\\n    stroke: '#fff',\\n    inset: 1,\\n    radius: 10,\\n  },\\n};\\n\\n// Set gradient color for area chart\\nconst areaConfig = {\\n  style: {\\n    fill: 'linear-gradient(-90deg, white 0%, darkgreen 100%)',\\n  },\\n  line: {\\n    style: {\\n      stroke: 'darkgreen',\\n      strokeWidth: 2,\\n    },\\n    tooltip: false,\\n  },\\n};\\n\\n// Set icon for map\\nconst pinMapConfig = {\\n  markerStyle: {\\n    iconPath:\\n      'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*JZf9T6psSzkAAAAAAAAAAAAADmJ7AQ/original',\\n  },\\n};\\n\\nexport default () => {\\n  return (\\n    <ConfigProvider\\n      components={{\\n        Pie: pieConfig,\\n        Area: areaConfig,\\n        PinMap: pinMapConfig,\\n      }}\\n    >\\n      // ...\\n    </ConfigProvider>\\n  );\\n};\\n\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"import { ConfigProvider } from '@antv/gpt-vis';\\n\\nexport default () => {\\n  return (\\n    <ConfigProvider\\n      plot={{ theme: { type: 'academy' } }}\\n      map={{ style: 'dark', token: 'your map token' }}\\n    >\\n      // ...\\n    </ConfigProvider>\\n  );\\n};\\n\",\"paraId\":4,\"tocIndex\":2},{\"value\":\"More usage details can be found in \",\"paraId\":5},{\"value\":\"ConfigProvider\",\"paraId\":6}];\n  ","import type { G6, OrganizationChartOptions } from '@ant-design/graphs';\nimport { OrganizationChart as ADCOrganizationChart, RCNode } from '@ant-design/graphs';\nimport React, { useMemo } from 'react';\nimport { useGraphConfig } from '../ConfigProvider/hooks';\nimport type { TreeGraphProps } from '../types';\nimport { visTreeData2GraphData } from '../utils/graph';\n\nconst { OrganizationChartNode } = RCNode;\n\nexport interface OrganizationChartProps extends TreeGraphProps {}\n\nconst defaultConfig: OrganizationChartOptions = {\n  padding: [40, 0, 0, 120],\n  autoFit: 'view',\n  autoResize: true,\n  zoomRange: [0.1, 5],\n  zoom: 1,\n  node: {\n    style: {\n      component: (d: G6.NodeData) => {\n        const isActive = d.states?.includes('active');\n        return (\n          <OrganizationChartNode\n            name={d.name as string}\n            position={d.description as string}\n            status={'online'}\n            isActive={isActive}\n          />\n        );\n      },\n      size: [280, 80],\n    },\n  },\n  edge: {\n    state: {\n      active: {\n        stroke: '#1890ff',\n        halo: false,\n      },\n    },\n  },\n  behaviors: ['drag-canvas', 'hover-activate-neighbors'],\n  transforms: (prev) => [\n    ...prev.filter((t) => (t as G6.BaseTransformOptions).type !== 'collapse-expand-react-node'),\n    {\n      ...(prev.find(\n        (t) => (t as G6.BaseTransformOptions).type === 'collapse-expand-react-node',\n      ) as G6.BaseTransformOptions),\n      enable: true,\n      iconOffsetY: 24,\n    },\n  ],\n  animation: false,\n};\n\nconst OrganizationChart: React.FC<OrganizationChartProps> = (props) => {\n  const { data: propsData, ...restProps } = props;\n\n  const data = useMemo(() => visTreeData2GraphData(propsData), [propsData]);\n\n  const config = useGraphConfig<OrganizationChartOptions>(\n    'OrganizationChart',\n    defaultConfig,\n    restProps,\n  );\n\n  return <ADCOrganizationChart data={data} {...config} />;\n};\n\nexport default OrganizationChart;\n","import { useGPTVisContext } from './useContext';\n\nexport const useEventPublish = () => {\n  const { eventBus } = useGPTVisContext();\n\n  return eventBus.emit.bind(eventBus);\n};\n","import React, { memo } from 'react';\nimport { withDefaultChartCode } from '../ChartCodeRender';\nimport { default as GPTVisLite, type GPTVisLiteProps } from './Lite';\n\nexport interface GPTVisProps extends GPTVisLiteProps {}\n\nconst CodeBlock = withDefaultChartCode();\n\nconst GPTVis: React.FC<GPTVisProps> = ({ children, components, ...rest }) => {\n  return (\n    <GPTVisLite components={{ code: CodeBlock, ...components }} {...rest}>\n      {children}\n    </GPTVisLite>\n  );\n};\n\nexport default memo(GPTVis);\n","import { TEXT_THEME } from '../../theme';\n\nfunction getStyle(ele: Element, style: string): string | undefined {\n  return window.getComputedStyle\n    ? // @ts-ignore style as any\n      window.getComputedStyle(ele, null)[style]\n    : // @ts-ignore currentStyle for IE\n      ele?.currentStyle?.[style];\n}\n\nfunction isAbsoluteUnitPx(str: string | undefined): boolean | undefined {\n  return str?.endsWith('px');\n}\n\nfunction getPxNumber(str: string): number | undefined {\n  const removeUnit = str.replace(/px$/, '');\n  const resultNumber = Number(removeUnit);\n  if (!Number.isNaN(resultNumber)) return resultNumber;\n  return undefined;\n}\n\nexport function getElementFontSize(ele: Element, defaultSize = TEXT_THEME.fontSizeBase): number {\n  const FONT_SIZE = 'font-size';\n  const eleFontSizeStr = getStyle(ele, FONT_SIZE);\n  if (eleFontSizeStr && isAbsoluteUnitPx(eleFontSizeStr)) {\n    const px = getPxNumber(eleFontSizeStr);\n    if (px) return px;\n  }\n  const bodyFontSizeStr = getStyle(window.document.body, FONT_SIZE);\n  if (bodyFontSizeStr && isAbsoluteUnitPx(bodyFontSizeStr)) {\n    const px = getPxNumber(bodyFontSizeStr);\n    if (px) return px;\n  }\n  return defaultSize;\n}\n","export { SingleLineChart } from './SingleLineChart';\n","import React, { useMemo, type FC } from 'react';\nimport { useMapConfig } from '../ConfigProvider/hooks';\nimport type { MapProps } from '../Map';\nimport Map from '../Map';\nimport type { PinMap as PinMapType } from '../types/map';\nimport { formatMakerStyle } from '../utils/map';\n\nexport type PinMapProps = PinMapType & MapProps;\n\nconst PinMap: FC<PinMapProps> = (props) => {\n  const { data, markerStyle, ...rest } = useMapConfig('PinMap', props);\n\n  const markerdata = useMemo(() => formatMakerStyle(data || [], markerStyle), [data, markerStyle]);\n\n  return <Map markers={markerdata} includePoints={markerdata} {...rest} />;\n};\n\nexport default PinMap;\n","import type { FlowGraphOptions, G6 } from '@ant-design/graphs';\nimport { FlowGraph as ADCFlowGraph, RCNode } from '@ant-design/graphs';\nimport React, { useMemo } from 'react';\nimport { useGraphConfig } from '../ConfigProvider/hooks';\nimport type { GraphProps } from '../types';\nimport { mergeGraphOptions } from '../utils/config';\nimport { visGraphData2GraphData } from '../utils/graph';\nimport { getGraphOptionsByData } from './helper';\n\nconst { TextNode } = RCNode;\n\nexport interface FlowDiagramProps extends GraphProps {}\n\nconst defaultConfig: FlowGraphOptions = {\n  autoResize: true,\n  autoFit: 'view',\n  zoomRange: [0.1, 5],\n  zoom: 1,\n  node: {\n    style: {\n      component: (d: G6.NodeData) => {\n        const isActive = d.states?.includes('active');\n        return (\n          <TextNode\n            text={d.id}\n            isActive={isActive}\n            type=\"filled\"\n            style={{\n              fontSize: 12,\n            }}\n            borderWidth={2}\n          />\n        );\n      },\n      size: [140, 32],\n    },\n  },\n  edge: {\n    style: {\n      endArrow: true,\n      labelBackground: true,\n      labelMaxLines: 2,\n      labelMaxWidth: '40%',\n      labelWordWrap: true,\n    },\n    state: {\n      active: {\n        halo: false,\n        labelWordWrap: false,\n        stroke: '#001f98',\n      },\n    },\n  },\n  behaviors: [\n    'drag-canvas',\n    {\n      type: 'hover-activate-neighbors',\n      onHover: (e: G6.IPointerEvent) => {\n        e.view.setCursor('pointer');\n      },\n      onHoverEnd: (e: G6.IPointerEvent) => {\n        e.view.setCursor('default');\n      },\n    },\n  ],\n};\n\nconst FlowDiagram: React.FC<FlowDiagramProps> = (props) => {\n  const { data: propsData, ...restProps } = props;\n\n  const data = useMemo(() => visGraphData2GraphData(propsData), [propsData]);\n\n  const config = useGraphConfig<FlowGraphOptions>(\n    'FlowDiagram',\n    mergeGraphOptions(defaultConfig, getGraphOptionsByData(data)),\n    restProps,\n  );\n\n  return <ADCFlowGraph data={data} {...config} />;\n};\n\nexport default FlowDiagram;\n","import { LoadingOutlined } from '@ant-design/icons';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLoading = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  height: 300px;\n  background-image: linear-gradient(135deg, #e3f3ff 0%, #f1eeff 100%);\n  color: rgba(0, 0, 0, 88%);\n\n  &-icon {\n    margin-bottom: 6px;\n  }\n`;\n\nconst Loading = () => {\n  return (\n    <StyledLoading className=\"gpt-vis-loading\">\n      <div className=\"gpt-vis-loading-icon\">\n        <LoadingOutlined style={{ fontSize: '24px', color: 'rgb(56, 177, 246)' }} />\n      </div>\n      <p>数据生成中</p>\n    </StyledLoading>\n  );\n};\n\nexport default Loading;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Histogram/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, GPTVisLite, Histogram, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个直方图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n    \\\"type\\\": \\\"histogram\\\",\\n    \\\"data\\\": [45, 55, 67, 50, 42, 61, 33, 76, 59, 51, 70, 63, 50, 48, 37, 72, 55, 52, 50, 46, 65, 68, 60, 45, 54, 75, 49, 56, 47, 51, 62, 53, 71, 50, 40, 57, 36, 69, 42, 63, 44, 64, 77, 59, 50, 53, 61, 48, 58, 66, 51, 39, 60, 56, 57, 67, 64, 53, 73, 50, 45, 61, 58, 54, 68, 41, 62, 50, 46, 70, 42, 69, 55, 60, 51, 66, 48, 59, 52, 63, 57, 61, 74, 65, 55, 47, 53, 68, 62, 49, 58, 66, 50, 44, 72, 41],\\n    \\\"binNumber\\\": 10\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Histogram]: Histogram },\\n  style: { width: 350 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"直方图可视化一下我的数据\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","import type { RadarConfig } from '@ant-design/plots';\nimport { Radar as ADCRadar } from '@ant-design/plots';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { usePlotConfig } from '../ConfigProvider/hooks';\nimport type { BasePlotProps } from '../types';\n\nexport type RadarDataItem = {\n  name: string;\n  value: number;\n  [key: string]: string | number;\n};\n\nexport type RadarProps = BasePlotProps<RadarDataItem> & Partial<RadarConfig>;\n\nconst defaultConfig = (props: RadarConfig): RadarConfig => {\n  const { data, xField = 'name', yField = 'value' } = props;\n  const hasGroupField = get(data, '[0].group') !== undefined;\n\n  return {\n    xField,\n    yField,\n    colorField: hasGroupField ? 'group' : undefined,\n    area: {\n      style: {\n        fillOpacity: 0.5,\n      },\n    },\n    scale: {\n      x: {\n        padding: 0.6,\n        align: 0,\n      },\n      y: {\n        nice: true,\n      },\n    },\n    axis: {\n      x: {\n        title: false,\n        grid: true,\n      },\n      y: {\n        zIndex: 1,\n        title: false,\n        gridConnect: 'line',\n        gridLineWidth: 1,\n      },\n    },\n    tooltip: (d) => {\n      return {\n        name: d[xField as string],\n        value: d[yField as string],\n      };\n    },\n  };\n};\n\nconst Radar = (props: RadarProps) => {\n  const config = usePlotConfig<RadarConfig>('Radar', defaultConfig, props);\n\n  return <ADCRadar {...config} />;\n};\n\nexport default Radar;\n","import type { CSSProperties } from 'react';\nimport { ArrowDown, ArrowUp } from './custom-icons';\nimport { ProportionChart, SingleLineChart } from './mini-charts';\nimport { TEXT_THEME } from './theme';\nimport type { VisTextProps } from './types';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst INNER_ENTITY_TYPES = [\n  'metric_name', // 指标名\n  'metric_value', // 主指标值\n  'other_metric_value', // 其他指标值\n  'time_desc', // 时间描述\n  'dim_value', // 维值\n  'trend_desc', // 趋势描述\n  'delta_value', // 变化值（非正非负）\n  'ratio_value', // 变化率（非正非负）\n  'delta_value_pos', // 变化值正\n  'delta_value_neg', // 变化值负\n  'ratio_value_pos', // 变化率正\n  'ratio_value_neg', // 变化率负\n  'proportion', // 占比\n  'contribute_ratio', // 贡献度\n] as const;\n\nexport type InnerEntityType = (typeof INNER_ENTITY_TYPES)[number];\n\nexport type TextEntityType = InnerEntityType | string;\n\nexport type TextEncoding = Partial<\n  Pick<CSSProperties, 'color' | 'backgroundColor' | 'fontWeight'> & {\n    /** 前缀 */\n    prefix: string;\n    /** 后缀 */\n    suffix: string;\n\n    // TODO @羽熙 支持更多文本映射通道，eg underline 等\n  }\n>;\n\nexport const STATICS_KEY = '__statics' as const;\n\n/** 文本组件配置信息 */\nexport type TextConfig =\n  // 实体短语类型映射\n  Record<InnerEntityType & string, TextEncoding> & {\n    // 静态组件映射, 如 icon 和 mimi-chart\n    [STATICS_KEY]: Record<string, React.FC<VisTextProps>>;\n  };\n\nexport const DEFAULT_VIS_TEXT_CONFIG: TextConfig = {\n  [STATICS_KEY]: {\n    'icon:arrow-up': ArrowUp,\n    'icon:arrow-down': ArrowDown,\n    'mini-chart:proportion': ProportionChart,\n    // TODO @羽熙 当前仅支持单折线图，之后可以考虑支持多折线图，在组件内实现分支判断\n    'mini-chart:line': SingleLineChart,\n  },\n  metric_name: {\n    color: TEXT_THEME.light.default88Color,\n    fontWeight: 500,\n  },\n  metric_value: {\n    color: TEXT_THEME.light.primaryColor,\n  },\n  other_metric_value: {\n    color: TEXT_THEME.light.default65Color,\n  },\n  delta_value: {\n    color: TEXT_THEME.light.default65Color,\n  },\n  ratio_value: {\n    color: TEXT_THEME.light.default65Color,\n  },\n  delta_value_pos: {\n    color: TEXT_THEME.light.posColor,\n    prefix: '+',\n  },\n  delta_value_neg: {\n    color: TEXT_THEME.light.negColor,\n    prefix: '-',\n  },\n  ratio_value_pos: {\n    color: TEXT_THEME.light.posColor,\n    prefix: 'icon:arrow-up',\n  },\n  ratio_value_neg: {\n    color: TEXT_THEME.light.negColor,\n    prefix: 'icon:arrow-down',\n  },\n  contribute_ratio: {\n    color: TEXT_THEME.light.conclusionColor,\n  },\n  trend_desc: {\n    color: TEXT_THEME.light.conclusionColor,\n    suffix: 'mini-chart:line',\n  },\n  dim_value: {\n    color: TEXT_THEME.light.default88Color,\n  },\n  time_desc: {\n    color: TEXT_THEME.light.default88Color,\n  },\n  proportion: {\n    suffix: 'mini-chart:proportion',\n  },\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/index.md?watch=parent';\n  export const texts = [];\n  ","import { LarkMap } from '@antv/larkmap';\nimport React, { useMemo, type FC } from 'react';\nimport type { BaseMapProps } from '../types';\nimport { formatMapStyle } from '../utils/map';\nimport { MapView, Marker, Polyline } from './Component';\n\nexport type MapProps = Omit<BaseMapProps<any>, 'data'>;\n\nconst Map: FC<MapProps> = (props) => {\n  const { className, containerStyle, style, children } = props;\n  const mapConfig = useMemo(() => formatMapStyle(props), [props]);\n  const onSceneLoaded = async () => {\n    if (props.onInitComplete) {\n      props.onInitComplete();\n    }\n  };\n\n  return (\n    <LarkMap\n      className={className}\n      style={{ height: 300, ...containerStyle, ...style }}\n      {...mapConfig}\n      onSceneLoaded={onSceneLoaded}\n    >\n      {/* 设置地图状态 */}\n      <MapView {...props} />\n      {/* 初始化图片，并加载 Marker */}\n      <Marker {...props} />\n      {/* 初始化线，并加载 Polyline */}\n      <Polyline {...props} />\n\n      {children}\n    </LarkMap>\n  );\n};\n\nexport default Map;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/PinMap/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, ConfigProvider, GPTVisLite, PinMap, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nconst markdownContent = `\\n ~~~vis-chart\\n  {\\n   \\\"type\\\": \\\"pin-map\\\",\\n   \\\"data\\\": [\\n    { \\\"label\\\": \\\"杨梅岭\\\", \\\"longitude\\\": 120.118362, \\\"latitude\\\": 30.217175 },\\n    { \\\"label\\\": \\\"理安寺\\\", \\\"longitude\\\": 120.112958, \\\"latitude\\\": 30.207319 },\\n    { \\\"label\\\": \\\"九溪烟树\\\", \\\"longitude\\\": 120.11335, \\\"latitude\\\": 30.202395 },\\n    { \\\"label\\\": \\\"飞来峰\\\", \\\"longitude\\\": 120.100549, \\\"latitude\\\": 30.236875 },\\n    { \\\"label\\\": \\\"灵隐寺\\\", \\\"longitude\\\": 120.101406, \\\"latitude\\\": 30.240826 },\\n    { \\\"label\\\": \\\"天竺三寺\\\", \\\"longitude\\\": 120.105337, \\\"latitude\\\": 30.236818 },\\n    { \\\"label\\\": \\\"杭州植物园\\\", \\\"longitude\\\": 120.116979, \\\"latitude\\\": 30.252876 },\\n    { \\\"label\\\": \\\"杭州花圃\\\", \\\"longitude\\\": 120.127654, \\\"latitude\\\": 30.245663 },\\n    { \\\"label\\\": \\\"苏堤\\\", \\\"longitude\\\": 120.135764, \\\"latitude\\\": 30.251448 },\\n    { \\\"label\\\": \\\"虎跑公园\\\", \\\"longitude\\\": 120.130095, \\\"latitude\\\": 30.207505 },\\n    { \\\"label\\\": \\\"玉皇飞云\\\", \\\"longitude\\\": 120.145323, \\\"latitude\\\": 30.214993 },\\n    { \\\"label\\\": \\\"长桥公园\\\", \\\"longitude\\\": 120.155057, \\\"latitude\\\": 30.232985 }\\n  ]\\n}\\n~~~`;\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.PinMap]: PinMap },\\n  debug: true,\\n  style: { width: 500 },\\n});\\n\\nexport default () => {\\n  return (\\n    <ConfigProvider\\n      map={{\\n        style: 'amap://styles/2acc71263b1344d93a902db8df1c8b68',\\n        token: '你的地图token',\\n      }}\\n      components={{\\n        PinMap: {\\n          markerStyle: {\\n            iconPath:\\n              'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*JZf9T6psSzkAAAAAAAAAAAAADmJ7AQ/original',\\n          },\\n        },\\n      }}\\n    >\\n      <div style={bgStyle}>\\n        <Bubble\\n          placement=\\\"end\\\"\\n          content=\\\"杭州可以看桂花的地方\\\"\\n          avatar={{\\n            src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n          }}\\n          styles={{ content: { background: '#ebebeb' } }}\\n        />\\n        <Bubble\\n          content={markdownContent}\\n          messageRender={RenderMarkdown}\\n          avatar={{\\n            src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n          }}\\n          variant=\\\"shadow\\\"\\n          styles={{ content: { background: '#fff' } }}\\n        />\\n      </div>\\n    </ConfigProvider>\\n  );\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Column/demos/stack.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, Column, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n以下是为你绘制的一个柱状图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"column\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"北京\\\", \\\"value\\\": 825.6, \\\"group\\\": \\\"油车\\\" },\\n    { \\\"category\\\": \\\"北京\\\", \\\"value\\\": 60.2, \\\"group\\\": \\\"新能源汽车\\\" },\\n    { \\\"category\\\": \\\"上海\\\", \\\"value\\\": 450, \\\"group\\\": \\\"油车\\\" },\\n    { \\\"category\\\": \\\"上海\\\", \\\"value\\\": 95, \\\"group\\\": \\\"新能源汽车\\\" },\\n    { \\\"category\\\": \\\"深圳\\\", \\\"value\\\": 506, \\\"group\\\": \\\"油车\\\" },\\n    { \\\"category\\\": \\\"深圳\\\", \\\"value\\\": 76.7, \\\"group\\\": \\\"新能源汽车\\\" },\\n    { \\\"category\\\": \\\"广州\\\", \\\"value\\\": 976.6, \\\"group\\\": \\\"油车\\\" },\\n    { \\\"category\\\": \\\"广州\\\", \\\"value\\\": 97.2, \\\"group\\\": \\\"新能源汽车\\\" },\\n    { \\\"category\\\": \\\"杭州\\\", \\\"value\\\": 651.2, \\\"group\\\": \\\"油车\\\" },\\n    { \\\"category\\\": \\\"杭州\\\", \\\"value\\\": 62, \\\"group\\\": \\\"新能源汽车\\\" }\\n  ],\\n  \\\"stack\\\": true,\\n  \\\"axisXTitle\\\": \\\"城市\\\",\\n  \\\"axisYTitle\\\": \\\"售量\\\"\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Column]: Column },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"主要城市油车与新能源汽车的售卖量对比\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/guide/antd-design-x.md?watch=parent';\n  export const texts = [{\"value\":\"1.定义图表 Markdown 代码块\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"const markdownContent = `\\n## GPT-VIS\\nComponents for GPTs, generative AI, and LLM projects. Not only UI Components.\\n\\n \\\\`\\\\`\\\\`vis-chart\\n  {\\n    \\\"type\\\": \\\"pie\\\",\\n    \\\"data\\\": [\\n      { \\\"category\\\": \\\"分类一\\\", \\\"value\\\": 27 },\\n      { \\\"category\\\": \\\"分类二\\\", \\\"value\\\": 25 },\\n      { \\\"category\\\": \\\"分类三\\\", \\\"value\\\": 18 },\\n      { \\\"category\\\": \\\"分类四\\\", \\\"value\\\": 15 },\\n      { \\\"category\\\": \\\"分类五\\\", \\\"value\\\": 10 },\\n      { \\\"category\\\": \\\"其他\\\", \\\"value\\\": 5 }\\n    ]\\n  }\\n\\\\`\\\\`\\\\``;\\n\",\"paraId\":1,\"tocIndex\":0},{\"value\":\"2.扩展聊天气泡渲染\",\"paraId\":2,\"tocIndex\":0},{\"value\":\"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { GPTVis } from '@antv/gpt-vis';\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => <GPTVis>{content}</GPTVis>;\\n\\nexport default () => {\\n  return (\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  );\\n};\\n\",\"paraId\":3,\"tocIndex\":0},{\"value\":\"定义你的图表数据\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"const mockdata = [\\n  { category: '分类一', value: 27 },\\n  { category: '分类二', value: 25 },\\n  { category: '分类三', value: 18 },\\n  { category: '分类四', value: 15 },\\n  { category: '分类五', value: 10 },\\n  { category: '其他', value: 5 },\\n];\\n\",\"paraId\":5,\"tocIndex\":1},{\"value\":\"渲染聊天气泡\",\"paraId\":6,\"tocIndex\":1},{\"value\":\"import { Pie } from '@antv/gpt-vis';\\nimport { Bubble } from '@ant-design/x';\\n\\nexport default () => {\\n  return (\\n    <Bubble\\n      content={<Pie data={mockdata} containerStyle={{ width: 300, height: 250 }} />}\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  );\\n};\\n\",\"paraId\":7,\"tocIndex\":1}];\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/GPTVis/demos/errorRender.tsx?watch=parent';\n  export default \"import { GPTVisLite, withDefaultChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst components = {\\n  code: withDefaultChartCode(),\\n};\\n\\nconst content = [\\n  `二、残余流量分析和处理\\n##### 2.1 残余流量汇总\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"flow-diagram\\\",\\n  \\\"data\\\": {\\n    \\\"nodes\\\": [\\n      { \\\"name\\\": \\\"残余机器数核查\\\" },\\n      { \\\"name\\\": \\\"流量类型检测\\\" },\\n      { \\\"name\\\": \\\"定时任务分析\\\" },\\n      { \\\"name\\\": \\\"域名流量检测\\\" },\\n      { \\\"name\\\": \\\"RPC流量溯源\\\" },\\n      { \\\"name\\\": \\\"消息队列检查\\\" }\\n    ],\\n    \\\"edges\\\": [\\n      { \\\"source\\\": \\\"残余机器数核查\\\", \\\"target\\\": \\\"流量类型检测\\\", \\\"name\\\": \\\"发现5台残余机器\\\" },\\n      { \\\"source\\\": \\\"流量类型检测\\\", \\\"target\\\": \\\"RPC流量溯源\\\", \\\"name\\\": \\\"识别9154次/天服务调用\\\" },\\n      { \\\"source\\\": \\\"流量类型检测\\\", \\\"target\\\": \\\"定时任务分析\\\", \\\"name\\\": \\\"定时任务零风险\\\" },\\n      { \\\"source\\\": \\\"流量类型检测\\\", \\\"target\\\": \\\"域名流量检测\\\", \\\"name\\\": \\\"无PV流量\\\" },\\n      { \\\"source\\\": \\\"RPC流量溯源\\\", \\\"target\\\": \\\"mobilemock应用追踪\\\", \\\"name\\\": \\\"上游未完成迁移\\\" }\\n    ]\\n  }\\n}\\n\\n\\\\`\\\\`\\\\`\\n`,\\n];\\n\\nexport default () => <GPTVisLite components={components}>{content[0]}</GPTVisLite>;\\n\";;\n  ","import type { GlobalConfig } from '../types';\n\nimport { DEFAULT_VIS_TEXT_CONFIG } from '../Text';\n\nexport const DEFAULT_GLOBAL_CONFIG: GlobalConfig = {\n  map: { style: 'light' },\n  components: {\n    VisText: DEFAULT_VIS_TEXT_CONFIG,\n  },\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Line/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, GPTVisLite, Line, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个折线图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"line\\\",\\n  \\\"data\\\": [{\\\"time\\\":2013,\\\"value\\\":59.3},{\\\"time\\\":2014,\\\"value\\\":64.4},{\\\"time\\\":2015,\\\"value\\\":68.9},{\\\"time\\\":2016,\\\"value\\\":74.4},{\\\"time\\\":2017,\\\"value\\\":82.7},{\\\"time\\\":2018,\\\"value\\\":91.9},{\\\"time\\\":2019,\\\"value\\\":99.1},{\\\"time\\\":2020,\\\"value\\\":101.6},{\\\"time\\\":2021,\\\"value\\\":114.4},{\\\"time\\\":2022,\\\"value\\\":121}],\\n  \\\"axisXTitle\\\": \\\"year\\\",\\n  \\\"axisYTitle\\\": \\\"GDP\\\"\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Line]: Line },\\n  style: { width: 350 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"帮我可视化一下最近几年 GDP 情况\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/DualAxes/demos/multiple.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, DualAxes, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个多轴图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n\\t\\\"type\\\": \\\"dual-axes\\\",\\n\\t\\\"categories\\\": [\\n\\t\\t\\\"Jan\\\",\\n\\t\\t\\\"Feb\\\",\\n\\t\\t\\\"Mar\\\",\\n\\t\\t\\\"Apr\\\",\\n\\t\\t\\\"May\\\",\\n\\t\\t\\\"Jun\\\",\\n\\t\\t\\\"Jul\\\",\\n\\t\\t\\\"Aug\\\",\\n\\t\\t\\\"Sep\\\",\\n\\t\\t\\\"Oct\\\",\\n\\t\\t\\\"Nov\\\",\\n\\t\\t\\\"Dec\\\"\\n\\t],\\n\\t\\\"series\\\": [\\n    {\\n\\t\\t\\t\\\"type\\\": \\\"column\\\",\\n\\t\\t\\t\\\"data\\\": [\\n\\t\\t\\t\\t26,\\n\\t\\t\\t\\t59,\\n\\t\\t\\t\\t90,\\n\\t\\t\\t\\t264,\\n\\t\\t\\t\\t287,\\n\\t\\t\\t\\t707,\\n\\t\\t\\t\\t1756,\\n\\t\\t\\t\\t1822,\\n\\t\\t\\t\\t487,\\n\\t\\t\\t\\t188,\\n\\t\\t\\t\\t60,\\n\\t\\t\\t\\t23\\n\\t\\t\\t],\\n      \\\"axisYTitle\\\": \\\"总体增长量\\\"\\n\\t\\t},\\n    {\\n\\t\\t\\t\\\"type\\\": \\\"line\\\",\\n\\t\\t\\t\\\"data\\\": [\\n\\t\\t\\t\\t2.6,\\n\\t\\t\\t\\t5.9,\\n\\t\\t\\t\\t9,\\n\\t\\t\\t\\t26.4,\\n\\t\\t\\t\\t28.7,\\n\\t\\t\\t\\t70.7,\\n\\t\\t\\t\\t175.6,\\n\\t\\t\\t\\t182.2,\\n\\t\\t\\t\\t48.7,\\n\\t\\t\\t\\t18.8,\\n\\t\\t\\t\\t6,\\n\\t\\t\\t\\t2.3\\n\\t\\t\\t],\\n      \\\"axisYTitle\\\": \\\"A增长率\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"line\\\",\\n\\t\\t\\t\\\"data\\\": [\\n\\t\\t\\t\\t2,\\n\\t\\t\\t\\t2.2,\\n\\t\\t\\t\\t3.3,\\n\\t\\t\\t\\t4.5,\\n\\t\\t\\t\\t6.3,\\n\\t\\t\\t\\t10.2,\\n\\t\\t\\t\\t20.3,\\n\\t\\t\\t\\t23.4,\\n\\t\\t\\t\\t23,\\n\\t\\t\\t\\t16.5,\\n\\t\\t\\t\\t12,\\n\\t\\t\\t\\t6.2\\n\\t\\t\\t],\\n      \\\"axisYTitle\\\": \\\"B增长率\\\"\\n\\t\\t}\\n\\t]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.DualAxes]: DualAxes },\\n  style: { width: 350 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"帮我可视化一下我的数据\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Bar/demos/group.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { Bar, ChartType, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个条形图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"bar\\\",\\n  \\\"data\\\": [\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Jan.\\\", \\\"value\\\": 18.9 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Feb.\\\", \\\"value\\\": 28.8 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Mar.\\\", \\\"value\\\": 39.3 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Apr.\\\", \\\"value\\\": 81.4 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"May.\\\", \\\"value\\\": 47 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Jun.\\\", \\\"value\\\": 20.3 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Jul.\\\", \\\"value\\\": 24 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Aug.\\\", \\\"value\\\": 35.6 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Jan.\\\", \\\"value\\\": 12.4 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Feb.\\\", \\\"value\\\": 23.2 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Mar.\\\", \\\"value\\\": 34.5 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Apr.\\\", \\\"value\\\": 99.7 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"May.\\\", \\\"value\\\": 52.6 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Jun.\\\", \\\"value\\\": 35.5 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Jul.\\\", \\\"value\\\": 37.4 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Aug.\\\", \\\"value\\\": 42.4 }\\n  ],\\n  \\\"group\\\": true,\\n  \\\"axisXTitle\\\": \\\"month\\\",\\n  \\\"axisYTitle\\\": \\\"value\\\"\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Bar]: Bar },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"帮我可视化一下我的数据\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Radar/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, GPTVisLite, Radar, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个雷达图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"radar\\\",\\n  \\\"data\\\": [\\n    { \\\"name\\\": \\\"Vitamin C\\\", \\\"value\\\": 7 },\\n    { \\\"name\\\": \\\"Fiber\\\", \\\"value\\\": 6 },\\n    { \\\"name\\\": \\\"Sugar\\\", \\\"value\\\": 5 },\\n    { \\\"name\\\": \\\"Protein\\\", \\\"value\\\": 4 },\\n    { \\\"name\\\": \\\"Iron\\\", \\\"value\\\": 3 },\\n    { \\\"name\\\": \\\"Calcium\\\", \\\"value\\\": 2 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Radar]: Radar },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"对维度可视化我的数据\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","// organize-imports-ignore\nimport { ChartType } from './types';\n\n/********** plot chart **********/\nimport { default as Area, type AreaProps } from './Area';\nimport { default as Bar, type BarProps } from './Bar';\nimport { default as Column, type ColumnProps } from './Column';\nimport { default as DualAxes, type DualAxesProps } from './DualAxes';\nimport { default as Histogram, type HistogramProps } from './Histogram';\nimport { default as Line, type LineProps } from './Line';\nimport { default as Pie, type PieProps } from './Pie';\nimport { default as Radar, type RadarProps } from './Radar';\nimport { default as Scatter, type ScatterProps } from './Scatter';\nimport { default as Treemap, type TreemapProps } from './Treemap';\nimport { default as WordCloud, type WordCloudProps } from './WordCloud';\n\n/********** graph chart **********/\nimport { default as FishboneDiagram, type FishboneDiagramProps } from './FishboneDiagram';\nimport { default as FlowDiagram, type FlowDiagramProps } from './FlowDiagram';\nimport { default as MindMap, type MindMapProps } from './MindMap';\nimport { default as NetworkGraph, type NetworkGraphProps } from './NetworkGraph';\nexport { default as IndentedTree, type IndentedTreeProps } from './IndentedTree';\nexport { default as OrganizationChart, type OrganizationChartProps } from './OrganizationChart';\n\n/********** map chart **********/\nexport { Map, type MapProps } from './export-map';\nimport {\n  PinMap,\n  type PinMapProps,\n  HeatMap,\n  type HeatMapProps,\n  PathMap,\n  type PathMapProps,\n} from './export-map';\n\n/********** NTV **********/\nexport { VisText, type VisTextProps } from './Text';\n\nexport {\n  Area,\n  Bar,\n  Column,\n  DualAxes,\n  FishboneDiagram,\n  FlowDiagram,\n  HeatMap,\n  Histogram,\n  Line,\n  MindMap,\n  NetworkGraph,\n  PathMap,\n  Pie,\n  PinMap,\n  Radar,\n  Scatter,\n  Treemap,\n  WordCloud,\n  type AreaProps,\n  type BarProps,\n  type ColumnProps,\n  type DualAxesProps,\n  type FishboneDiagramProps,\n  type FlowDiagramProps,\n  type HeatMapProps,\n  type HistogramProps,\n  type LineProps,\n  type MindMapProps,\n  type NetworkGraphProps,\n  type PathMapProps,\n  type PieProps,\n  type PinMapProps,\n  type RadarProps,\n  type ScatterProps,\n  type TreemapProps,\n  type WordCloudProps,\n};\n\nexport const DEFAULT_CHART_COMPONENTS: Record<string, React.FC<any>> = {\n  [ChartType.Line]: Line,\n  [ChartType.Column]: Column,\n  [ChartType.Pie]: Pie,\n  [ChartType.Bar]: Bar,\n  [ChartType.Area]: Area,\n  [ChartType.Scatter]: Scatter,\n  [ChartType.PinMap]: PinMap,\n  [ChartType.HeatMap]: HeatMap,\n  [ChartType.MindMap]: MindMap,\n  [ChartType.FlowDiagram]: FlowDiagram,\n  [ChartType.NetworkGraph]: NetworkGraph,\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/FishboneDiagram/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, FishboneDiagram, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个鱼骨图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"fishbone-diagram\\\",\\n  \\\"data\\\": {\\n    \\\"name\\\": \\\"生产效率低\\\",\\n    \\\"children\\\": [\\n      {\\n        \\\"name\\\": \\\"设备问题\\\",\\n        \\\"children\\\": [{ \\\"name\\\": \\\"设备老化\\\" }, { \\\"name\\\": \\\"维护不及时\\\" }]\\n      },\\n      {\\n        \\\"name\\\": \\\"员工问题\\\",\\n        \\\"children\\\": [{ \\\"name\\\": \\\"技能不足\\\" }, { \\\"name\\\": \\\"工作态度差\\\" }]\\n      },\\n      {\\n        \\\"name\\\": \\\"流程问题\\\",\\n        \\\"children\\\": [{ \\\"name\\\": \\\"流程繁琐\\\" }, { \\\"name\\\": \\\"缺乏标准化\\\" }]\\n      }\\n    ]\\n  }\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.FishboneDiagram]: FishboneDiagram },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content='用鱼骨图来可视化一下我的数据 {\\\"problem\\\":\\\"生产效率低\\\",\\\"bones\\\":[{\\\"category\\\":\\\"设备问题\\\",\\\"factors\\\":[\\\"设备老化\\\",\\\"维护不及时\\\"]},{\\\"category\\\":\\\"员工问题\\\",\\\"factors\\\":[\\\"技能不足\\\",\\\"工作态度差\\\"]},{\\\"category\\\":\\\"流程问题\\\",\\\"factors\\\":[\\\"流程繁琐\\\",\\\"缺乏标准化\\\"]}]}'\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","export * from './line';\nexport * from './proportion';\n","export * from './getThemeColor';\nexport * from './useAntdDarkAlgorithm';\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/NetworkGraph/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, GPTVisLite, NetworkGraph, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个网络图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"network-graph\\\",\\n  \\\"data\\\": {\\n    \\\"nodes\\\": [\\n      { \\\"name\\\": \\\"哈利·波特\\\" },\\n      { \\\"name\\\": \\\"赫敏·格兰杰\\\" },\\n      { \\\"name\\\": \\\"罗恩·韦斯莱\\\" },\\n      { \\\"name\\\": \\\"伏地魔\\\" }\\n    ],\\n    \\\"edges\\\": [\\n      { \\\"source\\\": \\\"哈利·波特\\\", \\\"target\\\": \\\"赫敏·格兰杰\\\", \\\"name\\\": \\\"朋友\\\" },\\n      { \\\"source\\\": \\\"哈利·波特\\\", \\\"target\\\": \\\"罗恩·韦斯莱\\\", \\\"name\\\": \\\"朋友\\\" },\\n      { \\\"source\\\": \\\"哈利·波特\\\", \\\"target\\\": \\\"伏地魔\\\", \\\"name\\\": \\\"敌人\\\" },\\n      { \\\"source\\\": \\\"伏地魔\\\", \\\"target\\\": \\\"哈利·波特\\\", \\\"name\\\": \\\"试图杀死\\\" }\\n    ]\\n  }\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.NetworkGraph]: NetworkGraph },\\n  style: { width: 400 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"在《哈利波特》系列中，有几个主要人物：哈利·波特、赫敏·格兰杰、罗恩·韦斯莱和伏地魔。哈利·波特是主角，他的两个最好的朋友是赫敏·格兰杰和罗恩·韦斯莱。伏地魔是哈利·波特的主要敌人，曾试图杀死哈利。用网络图可视化\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb', maxWidth: '60%' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/IndentedTree/index.md?watch=parent';\n  export const texts = [{\"value\":\"缩进树，用于直观地展示层级结构和父子关系。\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"{\\n  \\\"type\\\": \\\"indented-tree\\\",\\n  \\\"data\\\": {\\n    \\\"name\\\": \\\"node1\\\",\\n    \\\"children\\\": [\\n      { \\\"name\\\": \\\"node 1-1\\\", \\\"children\\\": [{ \\\"name\\\": \\\"node 1-1-1\\\" }] },\\n      { \\\"name\\\": \\\"node 1-2\\\" },\\n      { \\\"name\\\": \\\"node 1-3\\\" }\\n    ]\\n  }\\n}\\n\",\"paraId\":1,\"tocIndex\":4},{\"value\":\"属性\",\"paraId\":2,\"tocIndex\":6},{\"value\":\"类型\",\"paraId\":2,\"tocIndex\":6},{\"value\":\"是否必传\",\"paraId\":2,\"tocIndex\":6},{\"value\":\"默认值\",\"paraId\":2,\"tocIndex\":6},{\"value\":\"说明\",\"paraId\":2,\"tocIndex\":6},{\"value\":\"data\",\"paraId\":2,\"tocIndex\":6},{\"value\":\"IndentedTreeData\",\"paraId\":2,\"tocIndex\":6},{\"value\":\"是\",\"paraId\":2,\"tocIndex\":6},{\"value\":\"-\",\"paraId\":2,\"tocIndex\":6},{\"value\":\"数据\",\"paraId\":2,\"tocIndex\":6},{\"value\":\"属性\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"类型\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"是否必传\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"默认值\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"说明\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"name\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"string\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"是\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"节点的名称，用于显示在思维导图的节点上\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"children\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"IndentedTreeData[]\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"否\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":3,\"tocIndex\":7},{\"value\":\"当前节点的子节点集合。如果当前节点没有子节点，该字段可以省略。每个子节点本身也是一个 \",\"paraId\":3,\"tocIndex\":7},{\"value\":\"IndentedTreeData\",\"paraId\":3,\"tocIndex\":7},{\"value\":\" 对象，这意味着它可以包含自己的子节点，从而递归地构建出一个多层次的树状结构\",\"paraId\":3,\"tocIndex\":7}];\n  ","import type { Scene } from '@antv/l7';\nimport type { Map, Marker } from '../../types/map';\nimport { urlToMarkerId } from './util';\n\nexport function setMapContext(props: Map, scene: Scene) {\n  //初始化Image\n  if (props.markers) {\n    const icons = new Set(\n      props.markers\n        .filter((item: Marker) => item.iconPath !== undefined)\n        .map((item: Marker) => item.iconPath),\n    ) as unknown as string[];\n\n    return Promise.all(\n      Array.from(icons.values()).map(async (url: string) => {\n        const id = urlToMarkerId(url);\n        if (scene.hasImage(id)) {\n          return;\n        }\n        return await scene.addImage(id, url);\n      }),\n    );\n  }\n}\n","import copy from 'copy-text-to-clipboard';\n\nexport const handleCopyCode = async (data: any) => {\n  try {\n    const codeText = JSON.stringify(data, null, 2);\n    const success = copy(codeText);\n    if (!success) {\n      throw new Error('复制失败');\n    }\n  } catch (err) {\n    console.error('复制失败:', err);\n    throw err;\n  }\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/DualAxes/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, DualAxes, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个双轴图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"dual-axes\\\",\\n  \\\"categories\\\": [\\\"2020\\\", \\\"2021\\\", \\\"2022\\\"],\\n  \\\"series\\\": [\\n    {\\n      \\\"type\\\": \\\"column\\\",\\n      \\\"data\\\": [500, 600, 700],\\n      \\\"axisYTitle\\\": \\\"amount\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"line\\\",\\n      \\\"data\\\": [10, 12, 15],\\n      \\\"axisYTitle\\\": \\\"rate\\\"\\n    }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.DualAxes]: DualAxes },\\n  style: { width: 350 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"帮我可视化一下我的数据\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Radar/demos/common.tsx?watch=parent';\n  export default \"import { Radar } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = [\\n  { name: '沟通能力', value: 2 },\\n  { name: '协作能力', value: 3 },\\n  { name: '领导能力', value: 2 },\\n  { name: '学习能力', value: 5 },\\n  { name: '创新能力', value: 6 },\\n  { name: '技术能力', value: 9 },\\n];\\n\\nexport default () => {\\n  return <Radar data={data} containerStyle={{ height: 300 }} />;\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Pie/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, GPTVisLite, Pie, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n以下是为你绘制的一个饼图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"pie\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"分类一\\\", \\\"value\\\": 27 },\\n    { \\\"category\\\": \\\"分类二\\\", \\\"value\\\": 25 },\\n    { \\\"category\\\": \\\"分类三\\\", \\\"value\\\": 18 },\\n    { \\\"category\\\": \\\"分类四\\\", \\\"value\\\": 15 },\\n    { \\\"category\\\": \\\"分类五\\\", \\\"value\\\": 10 },\\n    { \\\"category\\\": \\\"其他\\\", \\\"value\\\": 5 }\\n  ],\\n  \\\"innerRadius\\\": 0.6\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Pie]: Pie },\\n  style: { width: 350, height: 350 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"可视化一下数据的占比\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","module.exports = (typeof globalThis !== 'undefined' ? globalThis : self)['maplibregl'];","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Column/demos/common.tsx?watch=parent';\n  export default \"import { Column } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = [\\n  { type: '1-3秒', value: 0.16 },\\n  { type: '4-10秒', value: 0.125 },\\n  { type: '11-30秒', value: 0.24 },\\n  { type: '31-60秒', value: 0.19 },\\n  { type: '1-3分', value: 0.22 },\\n  { type: '3-10分', value: 0.05 },\\n  { type: '10-30分', value: 0.01 },\\n  { type: '30+分', value: 0.015 },\\n];\\n\\nexport default () => {\\n  return (\\n    <Column\\n      data={data}\\n      xField=\\\"type\\\"\\n      yField=\\\"value\\\"\\n      axisXTitle=\\\"type\\\"\\n      axisYTitle=\\\"value\\\"\\n      containerStyle={{ height: 300 }}\\n    />\\n  );\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Text/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { GPTVis, VisText } from '@antv/gpt-vis';\\nimport React from 'react';\\nimport styled from 'styled-components';\\n\\nconst StyledP = styled.p`\\n  font-size: 12px;\\n  opacity: 0.88;\\n`;\\n\\nconst markdownContent = `\\n### 决策数量:\\n<vis-text type=\\\"time_desc\\\">本月</vis-text>共产生<vis-text type=\\\"metric_name\\\">决策数量</vis-text><vis-text type=\\\"metric_value\\\">2,783</vis-text>个，环比<vis-text type=\\\"trend_desc\\\">增长</vis-text><vis-text type=\\\"ratio_value_pos\\\">15.2%</vis-text>，同比<vis-text type=\\\"trend_desc\\\">增长</vis-text><vis-text type=\\\"ratio_value_pos\\\">23.5%</vis-text>。其中，<vis-text type=\\\"dim_value\\\">营销部门</vis-text>贡献最多，占比<vis-text type=\\\"proportion\\\">38.7%</vis-text>；其次是<vis-text type=\\\"dim_value\\\">产品部门</vis-text>，占比<vis-text type=\\\"proportion\\\">27.3%</vis-text>。<vis-text type=\\\"dim_name\\\">高优先级决策</vis-text>占比<vis-text type=\\\"proportion\\\">56.2%</vis-text>，较上月<vis-text type=\\\"trend_desc\\\">上升</vis-text><vis-text type=\\\"delta_value_pos\\\">3.8</vis-text>个百分点。<vis-text type=\\\"metric_name\\\">决策数量</vis-text>呈现稳定<vis-text type=\\\"trend_desc\\\" origin=\\\"[1, 2, 6, 18, 24, 48]\\\">上升</vis-text>趋势，预计<vis-text type=\\\"time_desc\\\">下月</vis-text>将突破<vis-text type=\\\"metric_value\\\">3,000</vis-text>大关。\\n\\n### 决策准确率:\\n<vis-text type=\\\"time_desc\\\">本月</vis-text>整体<vis-text type=\\\"metric_name\\\">决策准确率</vis-text>为<vis-text type=\\\"metric_value\\\">87.6%</vis-text>，环比<vis-text type=\\\"trend_desc\\\">下降</vis-text><vis-text type=\\\"delta_value_neg\\\">1.2</vis-text>个百分点，但仍高于年度目标<vis-text type=\\\"ratio_value_pos\\\">2.6%</vis-text>。<vis-text type=\\\"dim_value\\\">财务部门</vis-text>表现最佳，准确率达<vis-text type=\\\"metric_value\\\">94.3%</vis-text>；<vis-text type=\\\"dim_value\\\">人力资源部门</vis-text>表现欠佳，准确率为<vis-text type=\\\"metric_value\\\">76.8%</vis-text>，建议加强培训。<vis-text type=\\\"metric_name\\\">数据驱动型决策</vis-text>的准确率（<vis-text type=\\\"metric_value\\\">91.2%</vis-text>）显著高于<vis-text type=\\\"metric_name\\\">经验驱动型决策</vis-text>（<vis-text type=\\\"metric_value\\\">82.4%</vis-text>），凸显了数据分析的重要性。\\n\\n### 决策执行率:\\n<vis-text type=\\\"time_desc\\\">本月</vis-text><vis-text type=\\\"metric_name\\\">决策执行率</vis-text>为<vis-text type=\\\"metric_value\\\">82.3%</vis-text>，环比<vis-text type=\\\"trend_desc\\\">提升</vis-text><vis-text type=\\\"delta_value_pos\\\">5.7</vis-text>个百分点，创下近6个月新高。其中，<vis-text type=\\\"dim_name\\\">高优先级决策</vis-text>执行率达<vis-text type=\\\"metric_value\\\">95.6%</vis-text>，<vis-text type=\\\"dim_name\\\">低优先级决策</vis-text>执行率仅为<vis-text type=\\\"metric_value\\\">68.7%</vis-text>。<vis-text type=\\\"dim_value\\\">技术部门</vis-text>的执行率最高，达<vis-text type=\\\"metric_value\\\">91.2%</vis-text>；<vis-text type=\\\"dim_value\\\">市场部门</vis-text>最低，为<vis-text type=\\\"metric_value\\\">74.5%</vis-text>。建议关注<vis-text type=\\\"dim_value\\\">市场部门</vis-text>的决策执行障碍，提供必要支持。\\n\\n### 决策收益:\\n<vis-text type=\\\"time_desc\\\">本月</vis-text><vis-text type=\\\"metric_name\\\">决策收益</vis-text>带来的总收益为<vis-text type=\\\"metric_value\\\">1,275</vis-text>万元，同比增长<vis-text type=\\\"ratio_value_pos\\\">31.8%</vis-text>，超出预期<vis-text type=\\\"ratio_value_pos\\\">18.6%</vis-text>。<vis-text type=\\\"dim_name\\\">产品决策</vis-text>贡献最大，占总收益的<vis-text type=\\\"proportion\\\">42.3%</vis-text>；其次是<vis-text type=\\\"dim_name\\\">营销决策</vis-text>，占<vis-text type=\\\"proportion\\\">27.6%</vis-text>。<vis-text type=\\\"dim_name\\\">高风险决策</vis-text>的平均收益（<vis-text type=\\\"metric_value\\\">87.3</vis-text>万元/个）显著高于<vis-text type=\\\"dim_name\\\">低风险决策</vis-text>（<vis-text type=\\\"metric_value\\\">23.1</vis-text>万元/个）。建议在风险可控的前提下，适当增加<vis-text type=\\\"dim_name\\\">高收益潜力</vis-text>的决策比例。\\n\\n### 数据质量:\\n<vis-text type=\\\"time_desc\\\">本月</vis-text><vis-text type=\\\"metric_name\\\">数据质量</vis-text>评分为<vis-text type=\\\"metric_value\\\">88.5</vis-text>分（满分100分），环比提升<vis-text type=\\\"trend_desc\\\">提升</vis-text><vis-text type=\\\"delta_value_pos\\\">2.3</vis-text>分。<vis-text type=\\\"metric_name\\\">数据完整性</vis-text>（<vis-text type=\\\"metric_value\\\">93.2</vis-text>分）和<vis-text type=\\\"metric_name\\\">及时性</vis-text>（<vis-text type=\\\"metric_value\\\">91.7</vis-text>分）表现优异，而<vis-text type=\\\"metric_name\\\">准确性</vis-text>（<vis-text type=\\\"metric_value\\\">84.6</vis-text>分）和<vis-text type=\\\"metric_name\\\">一致性</vis-text>（<vis-text type=\\\"metric_value\\\">82.5</vis-text>分）仍有提升空间。<vis-text type=\\\"dim_value\\\">财务数据</vis-text>质量最高，达<vis-text type=\\\"metric_value\\\">95.3</vis-text>分；<vis-text type=\\\"dim_value\\\">用户行为数据</vis-text>质量最低，为<vis-text type=\\\"metric_value\\\">81.2</vis-text>分。建议优化<vis-text type=\\\"dim_value\\\">用户行为数据</vis-text>采集流程，提高<vis-text type=\\\"metric_name\\\">数据准确性</vis-text>和<vis-text type=\\\"metric_name\\\">一致性</vis-text>。\\n\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVis components={{ 'vis-text': VisText, p: StyledP }}>{content}</GPTVis>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","import React from 'react';\n\ninterface Props extends React.SVGProps<SVGSVGElement> {\n  size?: number;\n}\n\nexport const Copy: React.FC<Props> = ({ size = 14, fill = '#707070' }) => (\n  <svg\n    viewBox=\"0 0 1024 1024\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    p-id=\"5503\"\n    width={size}\n    height={size}\n    fill={fill}\n  >\n    <path\n      d=\"M768 682.666667V170.666667a85.333333 85.333333 0 0 0-85.333333-85.333334H170.666667a85.333333 85.333333 0 0 0-85.333334 85.333334v512a85.333333 85.333333 0 0 0 85.333334 85.333333h512a85.333333 85.333333 0 0 0 85.333333-85.333333zM170.666667 170.666667h512v512H170.666667z m682.666666 85.333333v512a85.333333 85.333333 0 0 1-85.333333 85.333333H256a85.333333 85.333333 0 0 0 85.333333 85.333334h426.666667a170.666667 170.666667 0 0 0 170.666667-170.666667V341.333333a85.333333 85.333333 0 0 0-85.333334-85.333333z\"\n      p-id=\"5504\"\n    ></path>\n  </svg>\n);\n\nexport const ZoomOut: React.FC<Props> = ({ size = 14, fill = '#707070' }) => (\n  <svg\n    viewBox=\"0 0 1024 1024\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    p-id=\"5664\"\n    width={size}\n    height={size}\n    fill={fill}\n  >\n    <path\n      d=\"M889.5 852.7l-220-219.9c45-53.4 72.1-122.3 72.1-197.5 0-169.4-137.8-307.3-307.3-307.3S127.1 265.8 127.1 435.3s137.8 307.3 307.3 307.3c76.1 0 145.7-27.8 199.4-73.8l219.8 219.8c4.9 5 11.4 7.4 17.9 7.4s13-2.5 17.9-7.4c10-9.9 10-26 0.1-35.9zM434.4 691.8c-141.4 0-256.5-115.1-256.5-256.5 0-141.5 115.1-256.5 256.5-256.5s256.5 115.1 256.5 256.5-115.1 256.5-256.5 256.5z\"\n      fill=\"#231815\"\n      p-id=\"5665\"\n    ></path>\n    <path\n      d=\"M555 418.3h-99.8v-99.8c0-14-11.4-25.4-25.4-25.4s-25.4 11.4-25.4 25.4v99.8h-99.8c-14 0-25.4 11.4-25.4 25.4s11.4 25.4 25.4 25.4h99.8v99.8c0 14 11.4 25.4 25.4 25.4s25.4-11.4 25.4-25.4v-99.8H555c14 0 25.4-11.4 25.4-25.4S569 418.3 555 418.3z\"\n      fill=\"#231815\"\n      p-id=\"5666\"\n    ></path>\n  </svg>\n);\n\nexport const ZoomIn: React.FC<Props> = ({ size = 14, fill = '#707070' }) => (\n  <svg\n    viewBox=\"0 0 1024 1024\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    p-id=\"5826\"\n    width={size}\n    height={size}\n    fill={fill}\n  >\n    <path\n      d=\"M889.5 852.7l-220-219.9c45-53.4 72.1-122.3 72.1-197.5 0-169.4-137.8-307.3-307.3-307.3S127.1 265.8 127.1 435.3s137.8 307.3 307.3 307.3c76.1 0 145.7-27.8 199.4-73.8l219.8 219.8c4.9 5 11.4 7.4 17.9 7.4s13-2.5 17.9-7.4c10-9.9 10-26 0.1-35.9zM434.4 691.8c-141.4 0-256.5-115.1-256.5-256.5 0-141.5 115.1-256.5 256.5-256.5s256.5 115.1 256.5 256.5-115.1 256.5-256.5 256.5z\"\n      fill=\"#231815\"\n      p-id=\"5827\"\n    ></path>\n    <path\n      d=\"M555 418.3H304.7c-14 0-25.4 11.4-25.4 25.4s11.4 25.4 25.4 25.4H555c14 0 25.4-11.4 25.4-25.4S569 418.3 555 418.3z\"\n      fill=\"#231815\"\n      p-id=\"5828\"\n    ></path>\n  </svg>\n);\n\nexport const Check: React.FC<Props> = ({ size = 14, fill = '#707070' }) => (\n  <svg\n    viewBox=\"0 0 1024 1024\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    p-id=\"5988\"\n    width={size}\n    height={size}\n    fill={fill}\n  >\n    <path\n      d=\"M380.416 822.144c-10.432 0-20.864-3.968-28.8-11.968L75.968 534.592c-15.936-15.936-15.936-41.664 0-57.6 15.872-15.872 41.664-15.872 57.536 0L380.416 723.84l510.08-510.016c15.872-15.936 41.664-15.936 57.536 0 15.936 15.936 15.936 41.664 0 57.6L409.216 810.24c-7.936 7.936-18.368 11.904-28.8 11.904z\"\n      fill=\"\"\n      p-id=\"5989\"\n    ></path>\n  </svg>\n);\n\nexport const DownLoad: React.FC<Props> = ({ size = 14, fill = '#707070' }) => (\n  <svg\n    viewBox=\"0 0 1024 1024\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    p-id=\"5988\"\n    width={size}\n    height={size}\n    fill={fill}\n  >\n    <path\n      d=\"M512 165.93q13.645 0 23.31 9.666t9.665 23.31V580.77L653.37 472.103q9.517-9.517 23.434-9.517 14.164 0 23.558 9.394t9.393 23.557q0 13.917-9.517 23.434L535.434 683.774q-9.517 9.517-23.434 9.517t-23.434-9.517L323.763 518.971q-9.517-10.036-9.517-23.434 0-13.645 9.665-23.31t23.31-9.665q13.917 0 23.434 9.516L479.05 580.744V198.881q0-13.645 9.665-23.31t23.31-9.665z m329.582 461.435q13.645 0 23.31 9.665t9.665 23.31v131.828q0 41.207-28.575 69.782-29.095 29.095-69.536 29.095H248.32q-40.416 0-70.03-28.848-28.847-29.613-28.847-70.03V660.34q0-13.645 9.665-23.31t23.31-9.665 23.31 9.665 9.666 23.31v131.828q0 13.645 9.665 23.31t23.31 9.665h528.127q13.398 0 22.791-9.665t9.393-23.31V660.34q0-13.645 9.666-23.31t23.31-9.665z\"\n      p-id=\"1178\"\n      fill=\"#494949\"\n    ></path>\n  </svg>\n);\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/guide/quick-start.en.md?watch=parent';\n  export const texts = [{\"value\":\"$ npm install @antv/gpt-vis --save\\n\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"import React from 'react';\\nimport { GPTVis } from '@antv/gpt-vis';\\n\\nconst markdownContent = `\\n# GPT-VIS \\\\n\\\\nComponents for GPTs, generative AI, and LLM projects. Not only UI Components.\\n\\nHere’s a visualization of Haidilao's food delivery revenue from 2013 to 2022. You can see a steady increase over the years, with notable *growth* particularly in recent years.\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"line\\\",\\n  \\\"data\\\": [\\n    { \\\"time\\\":2013,\\\"value\\\":59.3 },\\n    { \\\"time\\\":2014,\\\"value\\\":64.4 },\\n    { \\\"time\\\":2015,\\\"value\\\":68.9 },\\n    { \\\"time\\\":2016,\\\"value\\\":74.4 },\\n    { \\\"time\\\":2017,\\\"value\\\":82.7 },\\n    { \\\"time\\\":2018,\\\"value\\\":91.9 },\\n    { \\\"time\\\":2019,\\\"value\\\":99.1 },\\n    { \\\"time\\\":2020,\\\"value\\\":101.6 },\\n    { \\\"time\\\":2021,\\\"value\\\":114.4 },\\n    { \\\"time\\\":2022,\\\"value\\\":121 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nexport default () => {\\n  return <GPTVis>{markdownContent}</GPTVis>;\\n};\\n\",\"paraId\":1,\"tocIndex\":1},{\"value\":\"For business-customized UI scenarios, a convenient extension mechanism is provided, supporting label and code block extension。\",\"paraId\":2,\"tocIndex\":2},{\"value\":\"import { GPTVisLite, withChartCode, ChartType, Pie } from '@antv/gpt-vis';\\n\\nconst markdownContent = `\\n\\\\`\\\\`\\\\`my-ui\\nmy data\\n\\\\`\\\\`\\\\`\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"pie\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"Category One\\\", \\\"value\\\": 27 },\\n    { \\\"category\\\": \\\"Category Two\\\", \\\"value\\\": 25 },\\n    { \\\"category\\\": \\\"Category Three\\\", \\\"value\\\": 18 },\\n    { \\\"category\\\": \\\"Others\\\", \\\"value\\\": 5 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst customRenderers = {\\n  'my-ui': ({ children }) => <div>{children}</div>,\\n};\\nconst components = {\\n  code: withChartCode({\\n    // register custom block renderer\\n    languageRenderers: customRenderers,\\n    // register a pie chart\\n    components: { [ChartType.Pie]: Pie },\\n  }),\\n};\\n\\nexport default () => {\\n  return <GPTVisLite components={components}>{markdownContent}</GPTVisLite>;\\n};\\n\",\"paraId\":3,\"tocIndex\":2}];\n  ","import type { CodeBlockComponent } from '@antv/gpt-vis';\nimport React from 'react';\nimport StyledComponent from './style';\n\nconst WeatherCard: CodeBlockComponent = (props) => {\n  const content = String(props.children).trim();\n  const { locationName, temperature, humidity, wind, cloudiness, uv } = JSON.parse(content);\n\n  return (\n    <StyledComponent>\n      <div className=\"locationSection\">\n        <div className=\"temperatureWrapper\">\n          <div className=\"temperatureDetails\">\n            <img\n              src=\"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*1w1nS6N5McoAAAAAAAAAAAAADmJ7AQ/original\"\n              className=\"imageIcon\"\n            />\n            <span className=\"currentTemperature\">{temperature}°</span>\n          </div>\n          <span className=\"locationName\">{locationName}</span>\n        </div>\n        <div className=\"weatherDetails\">\n          <div className=\"humiditySection\">\n            <span className=\"attributeLabel\">Humidity</span>\n            <span className=\"uvIndexValue\">{humidity}%</span>\n          </div>\n          <div className=\"windSection\">\n            <span className=\"windSpeedLabel\">Wind</span>\n            <span className=\"windSpeedValue\">{wind}kph</span>\n          </div>\n          <div className=\"cloudinessSection\">\n            <span className=\"cloudinessLabel\">Cloudiness</span>\n            <span className=\"cloudinessValue\">{cloudiness}%</span>\n          </div>\n          <div className=\"uvIndexSection\">\n            <span className=\"uvIndexLabel\">UV Index</span>\n            <span className=\"uvIndexValue\">{uv}</span>\n          </div>\n        </div>\n      </div>\n    </StyledComponent>\n  );\n};\n\nexport default WeatherCard;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Pie/demos/common.tsx?watch=parent';\n  export default \"import { Pie } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = [\\n  { category: '分类一', value: 27 },\\n  { category: '分类二', value: 25 },\\n  { category: '分类三', value: 18 },\\n  { category: '分类四', value: 15 },\\n  { category: '分类五', value: 10 },\\n  { category: '其他', value: 5 },\\n];\\n\\nexport default () => {\\n  return <Pie data={data} containerStyle={{ height: 300 }} />;\\n};\\n\";;\n  ","import type { FishboneOptions } from '@ant-design/graphs';\nimport { Fishbone as ADCFishbone } from '@ant-design/graphs';\nimport React, { useMemo } from 'react';\nimport { useGraphConfig } from '../ConfigProvider/hooks';\nimport type { TreeGraphProps } from '../types';\nimport { visTreeData2GraphData } from '../utils/graph';\n\nexport interface FishboneDiagramProps extends TreeGraphProps {}\n\nconst defaultConfig: FishboneOptions = {\n  autoFit: 'view',\n  autoResize: true,\n  zoomRange: [0.1, 5],\n  zoom: 1,\n  behaviors: ['drag-canvas'],\n};\n\nconst FishboneDiagram: React.FC<FishboneDiagramProps> = (props) => {\n  const { data: propsData, ...restProps } = props;\n\n  const data = useMemo(() => visTreeData2GraphData(propsData), [propsData]);\n\n  const config = useGraphConfig<FishboneOptions>('FishboneDiagram', defaultConfig, restProps);\n\n  return <ADCFishbone data={data} {...config} />;\n};\n\nexport default FishboneDiagram;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/GPTVis/demos/context-provider.tsx?watch=parent';\n  export default \"import type { CodeBlockComponent } from '@antv/gpt-vis';\\nimport { GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React, { useCallback, useMemo, useState } from 'react';\\n\\nexport const MyContext = React.createContext(null as any);\\n\\nexport function useMyContext() {\\n  const context = React.useContext(MyContext);\\n  if (context === undefined || Object.keys(context).length === 0) {\\n    throw new Error(`useMyContext must be used within a MyContext.Provider`);\\n  }\\n\\n  return context;\\n}\\n\\n/**\\n * 自定义代码块渲染器\\n */\\nconst MyUIRenderer: CodeBlockComponent = ({ children }) => {\\n  const context = useMyContext();\\n  console.log('context: ', context);\\n  return (\\n    <div style={{ backgroundColor: '#f0f0f0', padding: '10px' }}>\\n      <p>{children}</p>\\n      <button onClick={context?.onClick} type=\\\"button\\\">\\n        click\\n      </button>\\n    </div>\\n  );\\n};\\nconst customRenderers = { 'my-ui': MyUIRenderer };\\nconst components = {\\n  code: withChartCode({\\n    languageRenderers: customRenderers, // register custom block renderer\\n    components: {},\\n  }),\\n};\\n\\nconst content = `\\n\\\\`\\\\`\\\\`my-ui\\nmy ui data ...\\n\\\\`\\\\`\\\\`\\n`;\\n\\nexport default () => {\\n  const [count, setCount] = useState(0);\\n  const handleClick = useCallback(() => {\\n    console.log('handleClick');\\n    setCount((pre) => pre + 1);\\n    // do something\\n  }, []);\\n  const context = useMemo(() => ({ count: count, onClick: handleClick }), [count]);\\n\\n  return (\\n    <>\\n      <p>count: {count}</p>\\n      <MyContext.Provider value={context}>\\n        <div>\\n          {/* other component ... */}\\n          <div>\\n            {/* other component ... */}\\n            <GPTVisLite components={components}>{content}</GPTVisLite>\\n          </div>\\n        </div>\\n      </MyContext.Provider>\\n    </>\\n  );\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Histogram/demos/common.tsx?watch=parent';\n  export default \"import { Histogram } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = [\\n  1.2, 3.4, 3.7, 4.3, 5.2, 5.8, 6.1, 6.5, 6.8, 7.1, 7.3, 7.7, 8.3, 8.6, 8.8, 9.1, 9.2, 9.4, 9.5,\\n  9.7, 10.5, 10.7, 10.8, 11, 11, 11.1, 11.2, 11.3, 11.4, 11.4, 11.7, 12, 12.9, 12.9, 13.3, 13.7,\\n  13.8, 13.9, 14, 14.2, 14.5, 15, 15.2, 15.6, 16, 16.3, 17.3, 17.5, 17.9, 18, 18, 20.6, 21, 23.4,\\n];\\n\\nexport default () => {\\n  return (\\n    <Histogram\\n      title=\\\"一些列数据的直方图分布\\\"\\n      data={data}\\n      binNumber={10}\\n      axisXTitle=\\\"range\\\"\\n      axisYTitle=\\\"count\\\"\\n      containerStyle={{ height: 300 }}\\n    />\\n  );\\n};\\n\";;\n  ","import type { Scene } from '@antv/l7';\nimport type { Map } from '../../types/map';\n\nfunction fitIncludePoints(\n  includePoints: { longitude: number; latitude: number }[],\n  scene: Scene,\n  includePadding: Map['includePadding'],\n) {\n  if (includePoints.length === 1) {\n    scene.setCenter([includePoints[0].longitude, includePoints[0].latitude]);\n  } else {\n    const bounds = [180, 90, -180, -90];\n    includePoints.forEach((point: any) => {\n      if (bounds[0] > point.longitude) {\n        bounds[0] = point.longitude;\n      }\n      if (bounds[1] > point.latitude) {\n        bounds[1] = point.latitude;\n      }\n      if (bounds[2] < point.longitude) {\n        bounds[2] = point.longitude;\n      }\n      if (bounds[3] < point.latitude) {\n        bounds[3] = point.latitude;\n      }\n    });\n    const { left = 20, right = 20, bottom = 20, top = 20 } = includePadding || {};\n    const padding = [left, top, right, bottom];\n    // @ts-ignore\n    scene.map.setBounds(bounds, false, padding);\n  }\n}\n\nexport const setMapView = (props: Map, scene: Scene) => {\n  fitBounds(props, scene);\n  setMapStatus(props, scene);\n};\n\nexport const fitBounds = (props: Map, scene: Scene) => {\n  if (props.includePoints?.length) {\n    fitIncludePoints(props.includePoints, scene, props.includePadding);\n  } else {\n    const points: { longitude: number; latitude: number }[] = [];\n    if (props.markers) {\n      props.markers.forEach((item) => {\n        points.push({ longitude: item.longitude, latitude: item.latitude });\n      });\n    }\n    if (props.polyline) {\n      props.polyline.forEach((item) => {\n        item.points.forEach((point) => {\n          points.push({ longitude: point.longitude, latitude: point.latitude });\n        });\n      });\n    }\n    if (points.length) {\n      fitIncludePoints(points, scene, props.includePadding);\n    }\n  }\n};\n\nexport const setMapStatus = (props: Map, scene: Scene) => {\n  if (props.enableZoom !== undefined) {\n    scene.setMapStatus({\n      zoomEnable: props.enableZoom,\n    });\n  }\n  if (props.enableRotate !== undefined) {\n    scene.setMapStatus({\n      rotateEnable: props.enableRotate,\n    });\n  }\n  if (props.enableScroll !== undefined) {\n    scene.setMapStatus({\n      dragEnable: props.enableScroll,\n    });\n  }\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Radar/demos/category.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, GPTVisLite, Radar, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个雷达图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"radar\\\",\\n  \\\"data\\\": [\\n    { \\\"group\\\": \\\"Apple\\\", \\\"name\\\": \\\"Vitamin C\\\", \\\"value\\\": 5 },\\n    { \\\"group\\\": \\\"Apple\\\", \\\"name\\\": \\\"Fiber\\\", \\\"value\\\": 7 },\\n    { \\\"group\\\": \\\"Apple\\\", \\\"name\\\": \\\"Sugar\\\", \\\"value\\\": 6 },\\n    { \\\"group\\\": \\\"Apple\\\", \\\"name\\\": \\\"Protein\\\", \\\"value\\\": 2 },\\n    { \\\"group\\\": \\\"Apple\\\", \\\"name\\\": \\\"Iron\\\", \\\"value\\\": 3 },\\n    { \\\"group\\\": \\\"Apple\\\", \\\"name\\\": \\\"Calcium\\\", \\\"value\\\": 2 },\\n    { \\\"group\\\": \\\"Banana\\\", \\\"name\\\": \\\"Vitamin C\\\", \\\"value\\\": 4 },\\n    { \\\"group\\\": \\\"Banana\\\", \\\"name\\\": \\\"Fiber\\\", \\\"value\\\": 5 },\\n    { \\\"group\\\": \\\"Banana\\\", \\\"name\\\": \\\"Sugar\\\", \\\"value\\\": 7 },\\n    { \\\"group\\\": \\\"Banana\\\", \\\"name\\\": \\\"Protein\\\", \\\"value\\\": 3 },\\n    { \\\"group\\\": \\\"Banana\\\", \\\"name\\\": \\\"Iron\\\", \\\"value\\\": 2 },\\n    { \\\"group\\\": \\\"Banana\\\", \\\"name\\\": \\\"Calcium\\\", \\\"value\\\": 3 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Radar]: Radar },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"帮我可视化一下水果数据\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","import type { PieConfig } from '@ant-design/plots';\nimport { Pie as ADCPie } from '@ant-design/plots';\nimport { round, sumBy } from 'lodash';\nimport React from 'react';\nimport { usePlotConfig } from '../ConfigProvider/hooks';\nimport type { BasePlotProps } from '../types';\n\n/**\n * PieDataItem is the type for each data item in the pie chart.\n * It includes the name of the sector and its corresponding value.\n * @param category The name of the sector.\n * @param value The value of the sector.\n */\ntype PieDataItem = {\n  category: string;\n  value: number;\n  [key: string]: string | number;\n};\n\n/**\n * the props for the Pie\n * @param data pie data\n */\nexport type PieProps = BasePlotProps<PieDataItem> & Partial<PieConfig>;\n\nconst defaultConfig = (props: PieConfig): PieConfig => {\n  const { data = [], angleField = 'value', colorField = 'category' } = props;\n  const sumValue = sumBy(data, angleField);\n\n  return {\n    angleField,\n    colorField,\n    tooltip: (d) => {\n      return {\n        name: d[colorField as string],\n        value: d[angleField as string],\n      };\n    },\n    label: {\n      position: 'outside',\n      // text: angleField,\n      text: (d: Record<string, any>) =>\n        `${d[colorField as string]}: ${round((d[angleField as string] / sumValue) * 100, 1)}%`,\n    },\n    legend: {\n      color: {\n        title: false,\n        position: 'top',\n      },\n    },\n    interaction: {\n      elementSelect: {\n        single: true,\n      },\n    },\n  };\n};\n\nconst Pie = (props: PieProps) => {\n  const config = usePlotConfig<PieConfig>('Pie', defaultConfig, props);\n\n  return <ADCPie {...config} />;\n};\n\nexport default Pie;\n","export default '0.5.5';\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/guide/antd-design-x.en.md?watch=parent';\n  export const texts = [{\"value\":\"1.Define chart Markdown code block\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"const markdownContent = `\\n## GPT-VIS\\nComponents for GPTs, generative AI, and LLM projects. Not only UI Components.\\n\\n \\\\`\\\\`\\\\`vis-chart\\n  {\\n    \\\"type\\\": \\\"pie\\\",\\n    \\\"data\\\": [\\n      { \\\"category\\\": \\\"Category One\\\", \\\"value\\\": 27 },\\n      { \\\"category\\\": \\\"Category Two\\\", \\\"value\\\": 25 },\\n      { \\\"category\\\": \\\"Category Three\\\", \\\"value\\\": 18 },\\n      { \\\"category\\\": \\\"Category Four\\\", \\\"value\\\": 15 },\\n      { \\\"category\\\": \\\"Category Five\\\", \\\"value\\\": 10 },\\n      { \\\"category\\\": \\\"Others\\\", \\\"value\\\": 5 }\\n    ]\\n  }\\n\\\\`\\\\`\\\\``;\\n\",\"paraId\":1,\"tocIndex\":0},{\"value\":\"2.Extend chat bubble rendering\",\"paraId\":2,\"tocIndex\":0},{\"value\":\"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { GPTVis } from '@antv/gpt-vis';\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => <GPTVis>{content}</GPTVis>;\\n\\nexport default () => {\\n  return (\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  );\\n};\\n\",\"paraId\":3,\"tocIndex\":0},{\"value\":\"Define your chart data\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"const mockdata = [\\n  { category: 'Category One', value: 27 },\\n  { category: 'Category Two', value: 25 },\\n  { category: 'Category Three', value: 18 },\\n  { category: 'Category Four', value: 15 },\\n  { category: 'Category Five', value: 10 },\\n  { category: 'Others', value: 5 },\\n];\\n\",\"paraId\":5,\"tocIndex\":1},{\"value\":\"Render chat bubble\",\"paraId\":6,\"tocIndex\":1},{\"value\":\"import { Pie } from '@antv/gpt-vis';\\nimport { Bubble } from '@ant-design/x';\\n\\nexport default () => {\\n  return (\\n    <Bubble\\n      content={<Pie data={mockdata} containerStyle={{ width: 300, height: 250 }} />}\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  );\\n};\\n\",\"paraId\":7,\"tocIndex\":1}];\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/index.en.md?watch=parent';\n  export const texts = [];\n  ","import { findKey, get } from 'lodash';\nimport { DEFAULT_VIS_TEXT_CONFIG } from '../config';\nimport { TEXT_THEME } from '../theme';\n\n/**\n * 自动适配暗黑模式\n * @params type 类型\n * @params color 当前颜色\n * @params theme 当前主题\n */\nexport const getThemeColor = ({\n  type,\n  color,\n  theme,\n}: {\n  type?: string;\n  color: string | undefined;\n  theme: 'dark' | 'light';\n}) => {\n  // 仅暗黑主题才处理\n  if (type && color && theme === 'dark') {\n    const defaultLightColor = get(DEFAULT_VIS_TEXT_CONFIG, [type, 'color']);\n    // 仅当前颜色为默认的浅色主题时才处理\n    if (color === defaultLightColor) {\n      // 找到浅色主题的 token\n      const token = findKey(TEXT_THEME.light, (i) => i === color);\n      // 返回暗黑主题的对应 token 的颜色\n      if (token) return TEXT_THEME.dark[token as keyof typeof TEXT_THEME.dark];\n    }\n  }\n  return color;\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/MindMap/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, GPTVisLite, MindMap, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个思维导图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"mind-map\\\",\\n  \\\"data\\\": {\\n    \\\"name\\\": \\\"台风形成的因素\\\",\\n    \\\"children\\\": [\\n      {\\n        \\\"name\\\": \\\"气象条件\\\",\\n        \\\"children\\\": [\\n          { \\\"name\\\": \\\"温暖的海水\\\" },\\n          { \\\"name\\\": \\\"气压分布\\\" },\\n          { \\\"name\\\": \\\"湿度水平\\\" },\\n          { \\\"name\\\": \\\"风的切变\\\" }\\n        ]\\n      },\\n      {\\n        \\\"name\\\": \\\"地理环境\\\",\\n        \\\"children\\\": [\\n          { \\\"name\\\": \\\"大陆架的形状与深度\\\" },\\n          { \\\"name\\\": \\\"海洋暖流的分布\\\" },\\n          { \\\"name\\\": \\\"热带地区的气候特征\\\" },\\n          { \\\"name\\\": \\\"岛屿的影响\\\" }\\n        ]\\n      }\\n    ]\\n  }\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.MindMap]: MindMap },\\n  style: { width: 500 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content='用思维导图来可视化一下我的数据 {\\\"name\\\":\\\"台风形成的因素\\\",\\\"children\\\":[{\\\"name\\\":\\\"气象条件\\\",\\\"children\\\":[{\\\"name\\\":\\\"温暖的海水\\\"},{\\\"name\\\":\\\"气压分布\\\"},{\\\"name\\\":\\\"湿度水平\\\"},{\\\"name\\\":\\\"风的切变\\\"}]},{\\\"name\\\":\\\"地理环境\\\",\\\"children\\\":[{\\\"name\\\":\\\"大陆架的形状与深度\\\"},{\\\"name\\\":\\\"海洋暖流的分布\\\"},{\\\"name\\\":\\\"热带地区的气候特征\\\"},{\\\"name\\\":\\\"岛屿的影响\\\"}]}]}'\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb', maxWidth: '60%' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","export const TEXT_THEME = {\n  fontSizeBase: 14,\n  chart: {\n    proportionShadowColor: '#CDDDFD',\n    proportionFillColor: '#3471F9',\n    lineStrokeColor: '#5B8FF9',\n  },\n  light: {\n    primaryColor: '#1677FF',\n    default88Color: 'rgba(0, 0, 0, 0.88)',\n    default65Color: 'rgba(0, 0, 0, 0.65)',\n    posColor: '#FA541C',\n    negColor: '#13A8A8',\n    conclusionColor: '#1F0352',\n  },\n  dark: {\n    primaryColor: '#4B91FF',\n    default88Color: 'rgba(255, 255, 255, 0.88)',\n    default65Color: 'rgba(255, 255, 255, 0.65)',\n    posColor: '#FA541C',\n    negColor: '#13A8A8',\n    conclusionColor: '#D8C3F3',\n  },\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/PathMap/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, ConfigProvider, GPTVisLite, PathMap, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst markdownContent = `\\n ~~~vis-chart\\n  {\\n  \\\"type\\\": \\\"path-map\\\",\\n  \\\"data\\\": [\\n    {\\n      \\\"path\\\": {\\n        \\\"points\\\": [\\n          {\\n            \\\"longitude\\\": 120.130638,\\n            \\\"latitude\\\": 30.219835,\\n            \\\"label\\\": \\\"石屋洞\\\"\\n          },\\n          {\\n            \\\"longitude\\\": 120.128125,\\n            \\\"latitude\\\": 30.219386,\\n            \\\"label\\\": \\\"满觉陇\\\"\\n          },\\n          {\\n            \\\"longitude\\\": 120.118362,\\n            \\\"latitude\\\": 30.217175,\\n            \\\"label\\\": \\\"杨梅岭\\\"\\n          },\\n          {\\n            \\\"longitude\\\": 120.112958,\\n            \\\"latitude\\\": 30.207319,\\n            \\\"label\\\": \\\"理安寺\\\"\\n          },\\n          {\\n            \\\"longitude\\\": 120.11335,\\n            \\\"latitude\\\": 30.202395,\\n            \\\"label\\\": \\\"九溪烟树\\\"\\n          }\\n        ]\\n      },\\n      \\\"markers\\\": [\\n        {\\n          \\\"longitude\\\": 120.130638,\\n          \\\"latitude\\\": 30.219835,\\n          \\\"label\\\": \\\"石屋洞\\\"\\n        },\\n        {\\n          \\\"longitude\\\": 120.128125,\\n          \\\"latitude\\\": 30.219386,\\n          \\\"label\\\": \\\"满觉陇\\\"\\n        },\\n        {\\n          \\\"longitude\\\": 120.118362,\\n          \\\"latitude\\\": 30.217175,\\n          \\\"label\\\": \\\"杨梅岭\\\"\\n        },\\n        {\\n          \\\"longitude\\\": 120.112958,\\n          \\\"latitude\\\": 30.207319,\\n          \\\"label\\\": \\\"理安寺\\\"\\n        },\\n        {\\n          \\\"longitude\\\": 120.11335,\\n          \\\"latitude\\\": 30.202395,\\n          \\\"label\\\": \\\"九溪烟树\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"path\\\": {\\n        \\\"points\\\": [\\n          {\\n            \\\"longitude\\\": 120.100549,\\n            \\\"latitude\\\": 30.236875,\\n            \\\"label\\\": \\\"飞来峰\\\"\\n          },\\n          {\\n            \\\"longitude\\\": 120.101406,\\n            \\\"latitude\\\": 30.240826,\\n            \\\"label\\\": \\\"灵隐寺\\\"\\n          },\\n          {\\n            \\\"longitude\\\": 120.105337,\\n            \\\"latitude\\\": 30.236818,\\n            \\\"label\\\": \\\"天竺三寺\\\"\\n          }\\n        ]\\n      },\\n      \\\"markers\\\": [\\n        {\\n          \\\"longitude\\\": 120.100549,\\n          \\\"latitude\\\": 30.236875,\\n          \\\"label\\\": \\\"飞来峰\\\"\\n        },\\n        {\\n          \\\"longitude\\\": 120.101406,\\n          \\\"latitude\\\": 30.240826,\\n          \\\"label\\\": \\\"灵隐寺\\\"\\n        },\\n        {\\n          \\\"longitude\\\": 120.105337,\\n          \\\"latitude\\\": 30.236818,\\n          \\\"label\\\": \\\"天竺三寺\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\\n~~~`;\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.PathMap]: PathMap },\\n  style: { width: 500 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => {\\n  return (\\n    <ConfigProvider\\n      map={{\\n        style: 'amap://styles/2acc71263b1344d93a902db8df1c8b68',\\n        token: '你的地图token',\\n      }}\\n    >\\n      <div style={bgStyle}>\\n        <Bubble\\n          placement=\\\"end\\\"\\n          content=\\\"杭州赏桂最佳路线推荐\\\"\\n          avatar={{\\n            src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n          }}\\n          styles={{ content: { background: '#ebebeb' } }}\\n        />\\n        <Bubble\\n          content={markdownContent}\\n          messageRender={RenderMarkdown}\\n          avatar={{\\n            src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n          }}\\n          variant=\\\"shadow\\\"\\n          styles={{ content: { background: '#fff' } }}\\n        />\\n      </div>\\n    </ConfigProvider>\\n  );\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/FishboneDiagram/demos/common.tsx?watch=parent';\n  export default \"import { FishboneDiagram } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = {\\n  name: '产品盈利未达到预期目标',\\n  children: [\\n    {\\n      name: '问题描述与分析',\\n      children: [\\n        { name: '品牌销量分析' },\\n        { name: '市场容量评估' },\\n        { name: '品牌的市场份额分析' },\\n        { name: '总贡献毛利计算' },\\n      ],\\n    },\\n    {\\n      name: '品牌定位策略',\\n      children: [\\n        { name: '外包装设计' },\\n        { name: '品牌名称选择' },\\n        { name: '销售价格定位' },\\n        { name: '产品规格定义' },\\n      ],\\n    },\\n    {\\n      name: '分销渠道管理',\\n      children: [\\n        { name: '地区分布' },\\n        { name: '渠道选择' },\\n        { name: '客户类型分类' },\\n        { name: '销售人员覆盖范围' },\\n      ],\\n    },\\n    {\\n      name: '市场知名度提升',\\n      children: [\\n        { name: '地区权重分析' },\\n        { name: '媒体组合策略' },\\n        { name: '广告投入预算' },\\n        { name: '品质意识提升' },\\n      ],\\n    },\\n    {\\n      name: '试购买策略',\\n      children: [\\n        { name: '现场展示效果' },\\n        { name: '促销形式设计' },\\n        { name: '促销时机选择' },\\n        { name: '供货保证措施' },\\n      ],\\n    },\\n    {\\n      name: '重复购买策略',\\n      children: [\\n        { name: '消费者档案管理' },\\n        { name: '使用场合分析' },\\n        { name: '使用次数统计' },\\n        { name: '产品原因退货处理' },\\n      ],\\n    },\\n  ],\\n};\\n\\nexport default () => <FishboneDiagram data={data} />;\\n\";;\n  ","import type { ColumnConfig } from '@ant-design/plots';\nimport { Column as ADCColumn } from '@ant-design/plots';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { usePlotConfig } from '../ConfigProvider/hooks';\nimport type { BasePlotProps } from '../types';\n\nexport type ColumnDataItem = {\n  category: string | number;\n  value: number;\n  [key: string]: string | number;\n};\n\nexport type ColumnProps = BasePlotProps<ColumnDataItem> & Partial<ColumnConfig>;\n\nconst defaultConfig = (props: ColumnConfig): ColumnConfig => {\n  const { data, xField = 'category', yField = 'value' } = props;\n  const hasGroupField = get(data, '[0].group') !== undefined;\n  const axisYTitle = get(props, 'axis.y.title');\n\n  return {\n    xField,\n    yField,\n    colorField: hasGroupField ? 'group' : undefined,\n    tooltip: (d) => {\n      const tooltipName = axisYTitle || d[xField as string];\n      return {\n        name: tooltipName,\n        value: d[yField as string],\n      };\n    },\n    style: {\n      // 圆角样式\n      radiusTopLeft: 10,\n      radiusTopRight: 10,\n    },\n  };\n};\n\nconst Column = (props: ColumnProps) => {\n  const config = usePlotConfig<ColumnConfig>('Column', defaultConfig, props);\n\n  return <ADCColumn {...config} />;\n};\n\nexport default Column;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/ChartCodeRender/index.md?watch=parent';\n  export const texts = [{\"value\":\"自定义拓展 Markdown 代码块渲染，将代码块自定义可视化。\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"这是一条警告信息\\n\",\"paraId\":1},{\"value\":\"withChartCode\",\"paraId\":1},{\"value\":\"、\",\"paraId\":1},{\"value\":\"withDefaultChartCode\",\"paraId\":1},{\"value\":\" 方法不要直接放入函数内部，避免重复渲染造成抖动问题！！！如需放入函数内部，用 \",\"paraId\":1},{\"value\":\"useMemo\",\"paraId\":1},{\"value\":\" 缓存一下。\",\"paraId\":1},{\"value\":\"withDefaultChartCode\",\"paraId\":2,\"tocIndex\":2},{\"value\":\"包含了\",\"paraId\":2,\"tocIndex\":2},{\"value\":\"默认的图表\",\"paraId\":2,\"tocIndex\":2},{\"value\":\"，接入简单\",\"paraId\":2,\"tocIndex\":2},{\"value\":\"通过 \",\"paraId\":3,\"tocIndex\":4},{\"value\":\"errorRender\",\"paraId\":3,\"tocIndex\":4},{\"value\":\" \",\"paraId\":3,\"tocIndex\":4},{\"value\":\"componentErrorRender\",\"paraId\":3,\"tocIndex\":4},{\"value\":\" 属性可以自定义错误渲染，让用户能够获取到完整的错误信息进行个性化的错误处理。\",\"paraId\":3,\"tocIndex\":4},{\"value\":\"属性\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"类型\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"是否必传\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"默认值\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"说明\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"components\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"ChartComponents\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"否\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"要额外加载的图表组件\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"languageRenderers\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"LanguageRenderers\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"否\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"自定义其它语言代码块渲染器\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"defaultRenderer\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"CodeRenderer\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"否\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"默认的代码渲染器\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"errorRender\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"ErrorRender\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"否\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"自定义错误渲染函数\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"debug\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"boolean\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"否\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"false\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"打开调试日志\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"loadingTimeout\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"number\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"否\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"设置 loading 动画的超时时间，默认为 5s\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"style\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"React.CSSProperties\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"否\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"-\",\"paraId\":4,\"tocIndex\":7},{\"value\":\"图表样式，配置容器样式\",\"paraId\":4,\"tocIndex\":7}];\n  ","import { useEffect, useState } from 'react';\nimport { TEXT_THEME } from '../../theme';\nimport type { Scale } from './scaleLinear';\nimport { scaleLinear } from './scaleLinear';\n\n// adjust to draw line width\nconst SCALE_ADJUST = 2;\n\nclass Line {\n  protected data: number[] = [];\n\n  protected size: number = TEXT_THEME.fontSizeBase;\n\n  protected height: number = this.size;\n\n  protected width: number = this.getWidth();\n\n  protected xScale: Scale | undefined;\n\n  protected yScale: Scale | undefined;\n\n  protected points: [number, number][] = [];\n\n  constructor(size: number, data: number[] | undefined) {\n    this.size = size;\n    if (data) {\n      this.data = data;\n      this.compute();\n    }\n  }\n\n  protected getWidth() {\n    return Math.max(this.size * 2, this.data?.length * 2);\n  }\n\n  protected compute() {\n    if (!this.data) return;\n    this.height = this.size;\n    this.width = this.getWidth();\n    this.xScale = scaleLinear([0, this.width], [0, this.data?.length - 1]);\n    const [min, max] = [Math.min(...this.data), Math.max(...this.data)];\n    this.yScale = scaleLinear([SCALE_ADJUST, this.height - SCALE_ADJUST], [min, max]);\n    this.points = this.data.map((item, index) => [\n      this.xScale!(index),\n      this.height - this.yScale!(item),\n    ]);\n  }\n\n  getLinePath(): null | string {\n    if (!this.data?.length || !this.xScale || !this.yScale) return null;\n    const path = this.points.reduce((prev, [x, y], index) => {\n      if (index === 0) return `M${x} ${y}`;\n      return `${prev} L ${x} ${y}`;\n    }, '');\n    return path;\n  }\n\n  getPolygonPath(): null | string {\n    if (!this.data?.length || !this.xScale || !this.yScale) return null;\n    const polygonPoints = [...this.points];\n    const last = this.points[this.points.length - 1];\n    polygonPoints.push([last[0], this.height]);\n    polygonPoints.push([0, this.height]);\n    const startPoint = this.points[0];\n    polygonPoints.push(startPoint);\n\n    const path = polygonPoints.reduce((prev, [x, y]) => `${prev} ${x},${y}`, '');\n    return path;\n  }\n\n  getContainer() {\n    return [this.width, this.height];\n  }\n}\n\nexport const useLineCompute = (size: number, data: undefined | number[]) => {\n  const [line, setLine] = useState<Line>(new Line(size, data));\n  useEffect(() => {\n    setLine(new Line(size, data));\n  }, [size, data]);\n  return {\n    width: line.getContainer()[0],\n    height: line.getContainer()[1],\n    linePath: line.getLinePath(),\n    polygonPath: line.getPolygonPath(),\n  };\n};\n","export * from './useConfig';\n","import type { G6, IndentedTreeOptions } from '@ant-design/graphs';\nimport { IndentedTree as ADCIndentedTree } from '@ant-design/graphs';\nimport React, { useMemo } from 'react';\nimport { useGraphConfig } from '../ConfigProvider/hooks';\nimport type { TreeGraphProps } from '../types';\nimport { visTreeData2GraphData } from '../utils/graph';\n\nexport interface IndentedTreeProps extends TreeGraphProps {}\n\nconst defaultConfig: IndentedTreeOptions = {\n  type: 'linear',\n  autoFit: 'view',\n  autoResize: true,\n  zoomRange: [0.1, 5],\n  zoom: 1,\n  node: { animation: { update: false, translate: false } },\n  edge: { animation: { update: false, translate: false } },\n  transforms: (prev) => [\n    ...prev.filter(\n      (transform) => (transform as G6.BaseTransformOptions).type !== 'collapse-expand-react-node',\n    ),\n    {\n      ...(prev.find(\n        (transform) => (transform as G6.BaseTransformOptions).type === 'collapse-expand-react-node',\n      ) as G6.BaseTransformOptions),\n      enable: true,\n    },\n  ],\n  behaviors: ['drag-canvas'],\n};\n\nconst IndentedTree: React.FC<IndentedTreeProps> = (props) => {\n  const { data: propsData, ...restProps } = props;\n\n  const data = useMemo(() => visTreeData2GraphData(propsData), [propsData]);\n\n  const config = useGraphConfig<IndentedTreeOptions>('IndentedTree', defaultConfig, restProps);\n\n  return <ADCIndentedTree data={data} {...config} />;\n};\n\nexport default IndentedTree;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/MindMap/demos/common.tsx?watch=parent';\n  export default \"import { MindMap } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = {\\n  name: '项目计划',\\n  children: [\\n    {\\n      name: '研究阶段',\\n      children: [{ name: '市场调研' }, { name: '技术可行性分析' }],\\n    },\\n    {\\n      name: '设计阶段',\\n      children: [{ name: '产品功能确定' }, { name: 'UI 设计' }],\\n    },\\n    {\\n      name: '开发阶段',\\n      children: [{ name: '编写代码' }, { name: '单元测试' }],\\n    },\\n    {\\n      name: '测试阶段',\\n      children: [{ name: '功能测试' }, { name: '性能测试' }],\\n    },\\n  ],\\n};\\n\\nexport default () => <MindMap data={data} containerStyle={{ height: 300 }} />;\\n\";;\n  ","// FIXME: 全量导入 G6 模块\nimport { G6 } from '@ant-design/graphs';\nimport type { GraphData, TreeGraphData } from '../types';\n\nconst { treeToGraphData } = G6;\n\nexport function visTreeData2GraphData(data: TreeGraphData) {\n  return treeToGraphData(data as unknown as G6.TreeData, {\n    getNodeData: (datum, depth) => {\n      datum.id = datum.name;\n      datum.depth = depth;\n      if (!datum.children) return datum as G6.NodeData;\n      const { children, ...restDatum } = datum;\n      return {\n        ...restDatum,\n        children: children.map((child) => child.name),\n      } as G6.NodeData;\n    },\n    getEdgeData: (source, target) =>\n      ({\n        source: source.name,\n        target: target.name,\n      }) as G6.EdgeData,\n  });\n}\n\nexport function visGraphData2GraphData(data: GraphData) {\n  return {\n    nodes: data.nodes.map((node) => ({\n      id: node.name,\n      style: { labelText: node.name },\n    })),\n    edges: data.edges.map((edge) => ({\n      source: edge.source,\n      target: edge.target,\n      style: { labelText: edge.name },\n    })),\n  };\n}\n","import type { PropsWithChildren } from 'react';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport { TEXT_THEME } from '../../theme';\nimport { getElementFontSize } from './getElementFontSize';\n\ntype SvgProps = PropsWithChildren<React.SVGProps<SVGSVGElement>>;\n\nexport const useSvgWrapper = () => {\n  const ele = useRef(null);\n  const [fontSize, setFontSize] = useState<number>(TEXT_THEME.fontSizeBase);\n  useLayoutEffect(() => {\n    if (ele.current) {\n      setFontSize(getElementFontSize(ele.current, TEXT_THEME.fontSizeBase));\n    }\n  }, []);\n  const Svg = ({ children, ...otherProps }: SvgProps) => {\n    return (\n      <svg\n        style={{\n          margin: '0px 4px',\n          transform: 'translate(0px, 0.125em)',\n        }}\n        ref={ele}\n        {...otherProps}\n      >\n        {children}\n      </svg>\n    );\n  };\n  return [Svg, fontSize] as const;\n};\n","import type { GraphOptions } from '@ant-design/graphs';\nimport type { CommonConfig } from '@ant-design/plots';\nimport React from 'react';\nimport type { MapProps } from '../../Map';\nimport type { Charts } from '../../types';\nimport { mergeGraphOptions } from '../../utils/config';\nimport { transform2ADCProps } from '../../utils/plot';\nimport { ConfigContext } from '../context';\n\nfunction useConfig() {\n  const context = React.useContext(ConfigContext);\n  return context;\n}\n\nexport function useComponentGlobalConfig(name: Charts) {\n  const globalConfig = useConfig();\n  const { components = {} } = globalConfig;\n  const config = components?.[name];\n\n  return config;\n}\n\nfunction usePlotGlobalConfig(name: Charts) {\n  const componentConfig = useComponentGlobalConfig(name);\n  const { plot: plotConfig } = useConfig();\n  const config = {\n    ...plotConfig,\n    ...componentConfig,\n  };\n\n  return config;\n}\n\nexport function usePlotConfig<T extends CommonConfig>(\n  name: Charts,\n  defaultConfig: Partial<T> | ((props: Partial<T>) => Partial<T>),\n  props: Partial<T>,\n): Partial<T> {\n  const globalConfig = usePlotGlobalConfig(name);\n  const mergedProps = { ...globalConfig, ...props };\n  const transformedProps = transform2ADCProps(mergedProps);\n\n  const _defaultConfig =\n    typeof defaultConfig === 'function' ? defaultConfig(transformedProps) : defaultConfig;\n\n  const config = {\n    ..._defaultConfig,\n    ...transformedProps,\n  };\n\n  return config;\n}\n\nfunction useMapGlobalConfig(name: Charts) {\n  const componentConfig = useComponentGlobalConfig(name);\n  const { map: mapConfig } = useConfig();\n  const transformedProps = {\n    mapType: mapConfig?.style,\n    token: mapConfig?.token,\n  };\n\n  const config = {\n    ...transformedProps,\n    ...componentConfig,\n  };\n\n  return config;\n}\n\nexport function useMapConfig<T extends MapProps>(name: Charts, props: T) {\n  const globalConfig = useMapGlobalConfig(name);\n\n  const mapConfig = {\n    ...globalConfig,\n    ...props,\n  };\n\n  return mapConfig;\n}\n\nfunction useGraphGlobalConfig(name: Charts) {\n  const { graph: graphConfig = {} } = useConfig();\n  const componentConfig = useComponentGlobalConfig(name);\n\n  return mergeGraphOptions(graphConfig, componentConfig || {});\n}\n\nexport function useGraphConfig<T extends Omit<GraphOptions, 'data'>>(\n  name: Charts,\n  defaultConfig: Partial<T>,\n  props: Partial<T>,\n) {\n  const globalConfig = useGraphGlobalConfig(name);\n\n  return mergeGraphOptions(defaultConfig, globalConfig, props);\n}\n","import { get } from 'lodash';\nimport React from 'react';\nimport { DEFAULT_CHART_COMPONENTS } from '../export';\nimport type { CodeBlockComponent, WithChartCodeOptions } from './type';\nimport { RenderVisChart } from './VisChart';\n\nconst RenderDefaultCode: CodeBlockComponent = (props) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { children, className = '', node, ...rest } = props;\n  return (\n    <code {...rest} className={className}>\n      {children}\n    </code>\n  );\n};\n\nconst withCodeBlock = (options: WithChartCodeOptions): CodeBlockComponent => {\n  // Render code block component\n  return function CodeBlock(props) {\n    const { children, className = '' } = props;\n    const content = String(children).trim();\n    const isVisChart = className.includes('language-vis-chart');\n    const {\n      components,\n      languageRenderers,\n      defaultRenderer: DefaultRenderer,\n      debug,\n      loadingTimeout = 5000,\n      style,\n      errorRender,\n      componentErrorRender,\n    } = options;\n\n    // If the code block is a VisChart, render the corresponding chart component\n    if (isVisChart) {\n      return (\n        <RenderVisChart\n          style={style}\n          content={content}\n          components={components}\n          debug={debug}\n          loadingTimeout={loadingTimeout}\n          errorRender={errorRender}\n          componentErrorRender={componentErrorRender}\n        />\n      );\n    }\n\n    // If the code block math extraRenderer  languageName, the corresponding extra languageRenderers component\n    const languageName = className.match(/language-(.*)/)?.[1] || '';\n    const extraLanguageRenderers = languageRenderers;\n    const ExtraRendererComponent = extraLanguageRenderers && extraLanguageRenderers[languageName];\n    if (ExtraRendererComponent) {\n      return <ExtraRendererComponent {...props} />;\n    }\n\n    // If the code block is not a VisChart, render plain code\n    return DefaultRenderer ? <DefaultRenderer {...props} /> : <RenderDefaultCode {...props} />;\n  };\n};\n\n// Create a higher-order component (HOC) with chart code\nexport const withChartCode = (options: WithChartCodeOptions): CodeBlockComponent => {\n  return withCodeBlock(options);\n};\n\n/**\n * Includes built-in chart components such as line charts, pie charts, etc.\n * @param componentsArray\n * @returns\n */\nexport const withDefaultChartCode = (\n  options?: Partial<WithChartCodeOptions>,\n): CodeBlockComponent => {\n  return withChartCode({\n    ...options,\n    components: {\n      ...DEFAULT_CHART_COMPONENTS,\n      ...get(options, 'components', {}),\n    },\n  });\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Treemap/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, GPTVisLite, Treemap, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个矩阵树图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"treemap\\\",\\n  \\\"data\\\": [\\n    {\\n      \\\"name\\\": \\\"产品A\\\",\\n      \\\"value\\\": 500,\\n      \\\"children\\\": [\\n        { \\\"name\\\": \\\"子产品A1\\\", \\\"value\\\": 200 },\\n        { \\\"name\\\": \\\"子产品A2\\\", \\\"value\\\": 300 }\\n      ]\\n    },\\n    { \\\"name\\\": \\\"产品B\\\", \\\"value\\\": 400 }\\n  ]\\n}\\n\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Treemap]: Treemap },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"用矩阵树图展示产品销售情况的数据\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","import React, { useMemo } from 'react';\nimport type { GlobalConfig } from '../types';\nimport { mergeGlobalConfig } from '../utils/config';\nimport { ConfigContext } from './context';\n\nexport type ConfigProviderProps = {\n  children?: React.ReactNode;\n} & GlobalConfig;\n\nconst ConfigProvider: React.FC<ConfigProviderProps> = (props) => {\n  const { children, ...config } = props;\n\n  const contextValue = useMemo(() => mergeGlobalConfig(config), []);\n\n  return <ConfigContext.Provider value={contextValue}>{children}</ConfigContext.Provider>;\n};\n\nexport default ConfigProvider;\n","export * from './context';\nexport * from './markers';\nexport * from './polyline';\nexport * from './style';\nexport * from './util';\nexport * from './view';\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Bar/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { Bar, ChartType, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个条形图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"bar\\\",\\n  \\\"data\\\": [\\n        { \\\"category\\\": \\\"1951 年\\\", \\\"value\\\": 38 },\\n        { \\\"category\\\": \\\"1952 年\\\", \\\"value\\\": 52 },\\n        { \\\"category\\\": \\\"1956 年\\\", \\\"value\\\": 61 },\\n        { \\\"category\\\": \\\"1957 年\\\", \\\"value\\\": 145 },\\n        { \\\"category\\\": \\\"1958 年\\\", \\\"value\\\": 48 },\\n        { \\\"category\\\": \\\"1959 年\\\", \\\"value\\\": 38 },\\n        { \\\"category\\\": \\\"1960 年\\\", \\\"value\\\": 38 },\\n        { \\\"category\\\": \\\"1962 年\\\", \\\"value\\\": 38 }\\n  ],\\n  \\\"axisXTitle\\\": \\\"year\\\",\\n  \\\"axisYTitle\\\": \\\"sales\\\"\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Bar]: Bar },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"帮我可视化一下最近几年销售情况\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","import { LineLayer } from '@antv/l7';\nimport type { Polyline as PolylinePorps } from '../../types/map';\n\nexport function setPolyline(data: PolylinePorps[]) {\n  const lineData = data.map((item: PolylinePorps) => {\n    const coord = item.points.map((point) => [point.longitude, point.latitude]);\n    return {\n      ...item,\n      coordinates: coord,\n      color: item.color,\n      width: item.width,\n    };\n  });\n  const isdash = lineData[0].dottedLine;\n  const lineLayer = new LineLayer()\n    .source(lineData, {\n      parser: {\n        type: 'json',\n        coordinates: 'coordinates',\n      },\n    })\n    .size('width')\n    .shape('line')\n    .color('color')\n    .style({\n      opacity: 1.0,\n      lineType: isdash ? 'dash' : 'solid',\n      dashArray: [3, 1],\n    });\n  return [lineLayer];\n}\n","import { isArray, isString, size } from 'lodash';\nimport React, { useMemo } from 'react';\nimport { TEXT_THEME } from '../../theme';\nimport type { VisTextProps } from '../../types';\nimport { useSvgWrapper } from '../hooks';\nimport { useLineCompute } from './useLineCompute';\n\nconst LINEAR_FILL_COLOR_ID = 'wsc-line-fill';\n\nfunction getLineChartData(origin: any) {\n  if (isArray(origin)) return origin;\n  if (isString(origin)) {\n    try {\n      const data = JSON.parse(origin);\n      if (isArray(data)) return data;\n    } catch (e) {\n      console.warn(e, `${origin} is not a valid json string`);\n    }\n  }\n}\n\nexport const SingleLineChart: React.FC<VisTextProps> = ({ origin }) => {\n  const [Svg, fontSize] = useSvgWrapper();\n  const data = useMemo(() => getLineChartData(origin), [origin]);\n  const { width, height, linePath, polygonPath } = useLineCompute(fontSize, data);\n  return (\n    size(data) > 0 && (\n      <Svg width={width} height={height}>\n        <defs>\n          <linearGradient x1=\"50%\" y1=\"0%\" x2=\"50%\" y2=\"122.389541%\" id={LINEAR_FILL_COLOR_ID}>\n            <stop stopColor={TEXT_THEME.chart.lineStrokeColor} offset=\"0%\" />\n            <stop stopColor=\"#FFFFFF\" stopOpacity=\"0\" offset=\"100%\" />\n          </linearGradient>\n        </defs>\n        {linePath && (\n          <path d={linePath} stroke={TEXT_THEME.chart.lineStrokeColor} fill=\"transparent\" />\n        )}\n        {polygonPath && <polygon points={polygonPath} fill={`url(#${LINEAR_FILL_COLOR_ID})`} />}\n      </Svg>\n    )\n  );\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Text/demos/common.tsx?watch=parent';\n  export default \"import { VisText } from '@antv/gpt-vis';\\nimport { ConfigProvider, Descriptions, Space, theme } from 'antd';\\nimport { usePrefersColor } from 'dumi';\\nimport React from 'react';\\n\\nexport default () => {\\n  // dumi 文档当前的主题色\\n  const [color] = usePrefersColor();\\n  return (\\n    // 适配 antd 主题。待整体文档 demo 都适配主题后可以删除\\n    // https://github.com/antvis/GPT-Vis/pull/24\\n    <ConfigProvider\\n      theme={{\\n        algorithm: color === 'dark' ? theme.darkAlgorithm : theme.defaultAlgorithm,\\n      }}\\n    >\\n      <Descriptions bordered column={2} size=\\\"small\\\">\\n        <Descriptions.Item label=\\\"指标名 metric_name\\\">\\n          <VisText type=\\\"metric_name\\\">DAU</VisText>\\n        </Descriptions.Item>\\n        <Descriptions.Item label=\\\"指标值 metric_value\\\">\\n          <VisText type=\\\"metric_value\\\" origin={9012334}>\\n            90.1w\\n          </VisText>\\n        </Descriptions.Item>\\n        <Descriptions.Item label=\\\"其他指标 other_metric_value\\\">\\n          <VisText type=\\\"other_metric_value\\\">30%</VisText>\\n        </Descriptions.Item>\\n        <Descriptions.Item label=\\\"差值 delta_value\\\">\\n          <Space>\\n            <VisText type=\\\"delta_value_pos\\\">100.33</VisText>\\n            <VisText type=\\\"delta_value_neg\\\">100.33</VisText>\\n          </Space>\\n        </Descriptions.Item>\\n        <Descriptions.Item label=\\\"比率 ratio_value\\\">\\n          <Space>\\n            <VisText type=\\\"ratio_value_pos\\\">30%</VisText>\\n            <VisText type=\\\"ratio_value_neg\\\">30%</VisText>\\n          </Space>\\n        </Descriptions.Item>\\n        <Descriptions.Item label=\\\"贡献度 contribute_ratio\\\">\\n          <VisText type=\\\"contribute_ratio\\\">20%</VisText>\\n        </Descriptions.Item>\\n        <Descriptions.Item label=\\\"趋势描述 trend_desc\\\">\\n          <VisText type=\\\"trend_desc\\\" origin={[1, 2, 6, 18, 24, 48]}>\\n            趋势上涨\\n          </VisText>\\n        </Descriptions.Item>\\n        <Descriptions.Item label=\\\"维度值 dim_value\\\">\\n          <VisText type=\\\"dim_value\\\">杭州</VisText>\\n        </Descriptions.Item>\\n        <Descriptions.Item label=\\\"时间描述 time_desc\\\">\\n          <VisText type=\\\"time_desc\\\">2021-10-11</VisText>\\n        </Descriptions.Item>\\n        <Descriptions.Item label=\\\"占比 proportion\\\">\\n          <VisText type=\\\"proportion\\\">30%</VisText>\\n        </Descriptions.Item>\\n      </Descriptions>\\n    </ConfigProvider>\\n  );\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/guide/custom-ui.en.md?watch=parent';\n  export const texts = [{\"value\":\"Customize the UI for the structured data output by the model through code blocks.\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"import { GPTVisLite, withChartCode } from '@antv/gpt-vis';\\n\\nconst markdownContent = `\\n\\\\`\\\\`\\\\`weather\\n{\\n  \\\"locationName\\\": \\\"Hangzhou\\\",\\n  \\\"temperature\\\": 11.4,\\n  \\\"humidity\\\": 82,\\n  \\\"wind\\\": 6.8,\\n  \\\"cloudiness\\\": 75,\\n  \\\"uv\\\": \\\"0.2 of 11\\\"\\n}\\n\\\\`\\\\`\\\\`\\n\\nIn Hangzhou, the current weather is as follows: \\n- The temperature is 11.4°C, humidity is 82%, and wind speed is 6.8 kph. \\n- There's 75% cloud cover, and the UV index is very low at 0.2 out of 11. \\n- This indicates cool, humid conditions with overcast skies and minimal UV exposure.\\n`;\\n\\nconst customRenderers = {\\n  weather: (props) => 'WeatherCard',\\n};\\nconst components = {\\n  code: withChartCode({\\n    // register custom block renderer\\n    languageRenderers: customRenderers,\\n  }),\\n};\\n\\nexport default () => {\\n  return <GPTVisLite components={components}>{markdownContent}</GPTVisLite>;\\n};\\n\",\"paraId\":1,\"tocIndex\":0}];\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Bar/demos/stack.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { Bar, ChartType, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个条形图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"bar\\\",\\n  \\\"data\\\": [\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Jan.\\\", \\\"value\\\": 18.9 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Feb.\\\", \\\"value\\\": 28.8 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Mar.\\\", \\\"value\\\": 39.3 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Apr.\\\", \\\"value\\\": 81.4 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"May.\\\", \\\"value\\\": 47 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Jun.\\\", \\\"value\\\": 20.3 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Jul.\\\", \\\"value\\\": 24 },\\n    { \\\"group\\\": \\\"London\\\", \\\"category\\\": \\\"Aug.\\\", \\\"value\\\": 35.6 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Jan.\\\", \\\"value\\\": 12.4 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Feb.\\\", \\\"value\\\": 23.2 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Mar.\\\", \\\"value\\\": 34.5 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Apr.\\\", \\\"value\\\": 99.7 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"May.\\\", \\\"value\\\": 52.6 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Jun.\\\", \\\"value\\\": 35.5 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Jul.\\\", \\\"value\\\": 37.4 },\\n    { \\\"group\\\": \\\"Berlin\\\", \\\"category\\\": \\\"Aug.\\\", \\\"value\\\": 42.4 }\\n  ],\\n  \\\"stack\\\": true,\\n  \\\"axisXTitle\\\": \\\"month\\\",\\n  \\\"axisYTitle\\\": \\\"value\\\"\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Bar]: Bar },\\n});\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"帮我可视化一下我的数据\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","import type { WordCloudConfig } from '@ant-design/plots';\nimport { WordCloud as ADCWordCloud } from '@ant-design/plots';\nimport React, { type FC } from 'react';\nimport { usePlotConfig } from '../ConfigProvider/hooks';\nimport type { BasePlotProps } from '../types';\n\ntype WordCloudDataItem = {\n  text: string;\n  value: number;\n};\n\nconst defaultConfig = {\n  autoFit: true,\n  layout: { fontSize: [20, 100] },\n  colorField: 'text',\n  legend: false,\n  tooltip: false,\n};\n\nexport type WordCloudProps = BasePlotProps<WordCloudDataItem> & Partial<WordCloudConfig>;\n\nconst WordCloud: FC<WordCloudProps> = (props) => {\n  const config = usePlotConfig<WordCloudConfig>('WordCloud', defaultConfig, props);\n\n  return <ADCWordCloud {...config} />;\n};\n\nexport default WordCloud;\n","import type { AreaConfig } from '@ant-design/plots';\nimport { Area as ADCArea } from '@ant-design/plots';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { usePlotConfig } from '../ConfigProvider/hooks';\nimport type { BasePlotProps } from '../types';\n\ntype AreaDataItem = {\n  time: string | number;\n  value: number;\n  [key: string]: string | number;\n};\n\nexport type AreaProps = BasePlotProps<AreaDataItem> & Partial<AreaConfig>;\n\nconst defaultConfig = (props: AreaConfig): AreaConfig => {\n  const { data, xField = 'time', yField = 'value' } = props;\n  const hasGroupField = get(data, '[0].group') !== undefined;\n  const axisYTitle = get(props, 'axis.y.title');\n  const defalutStyle = hasGroupField ? {} : { opacity: 0.6 };\n\n  return {\n    xField,\n    yField,\n    style: defalutStyle,\n    colorField: hasGroupField ? 'group' : undefined,\n    tooltip: (d: Record<string, string | number>) => {\n      const tooltipName = axisYTitle || d[xField as string];\n      return {\n        name: tooltipName,\n        value: d[yField as string],\n      };\n    },\n  };\n};\n\nconst Area = (props: AreaProps) => {\n  const config = usePlotConfig<AreaConfig>('Area', defaultConfig, props);\n\n  return <ADCArea {...config} />;\n};\n\nexport default Area;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Area/demos/markdown.tsx?watch=parent';\n  export default \"import type { BubbleProps } from '@ant-design/x';\\nimport { Bubble } from '@ant-design/x';\\nimport { Area, ChartType, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个面积图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"area\\\",\\n  \\\"data\\\": [{\\\"time\\\":2013,\\\"value\\\":59.3},{\\\"time\\\":2014,\\\"value\\\":64.4},{\\\"time\\\":2015,\\\"value\\\":68.9},{\\\"time\\\":2016,\\\"value\\\":74.4},{\\\"time\\\":2017,\\\"value\\\":82.7},{\\\"time\\\":2018,\\\"value\\\":91.9},{\\\"time\\\":2019,\\\"value\\\":99.1},{\\\"time\\\":2020,\\\"value\\\":101.6},{\\\"time\\\":2021,\\\"value\\\":114.4},{\\\"time\\\":2022,\\\"value\\\":121}],\\n  \\\"axisXTitle\\\": \\\"year\\\",\\n  \\\"axisYTitle\\\": \\\"GDP\\\"\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  padding: 20,\\n  background: '#f7f7f7',\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Area]: Area },\\n  style: { width: 350 },\\n});\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"帮我面积图显示最近几年 GDP 情况\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","import React from 'react';\nconst MARGIN_RIGHT = 2;\nexport const ArrowUp = () => (\n  <svg\n    width=\"8px\"\n    height=\"9px\"\n    style={{ transform: 'rotate(180deg)', marginRight: MARGIN_RIGHT }}\n    viewBox=\"0 0 8 9\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g transform=\"translate(-2.000000, -2.000000)\">\n      <polygon fill=\"currentColor\" points=\"6 11 9.5 2 2.5 2\" />\n    </g>\n  </svg>\n);\nexport const ArrowDown = () => (\n  <svg\n    width=\"8px\"\n    height=\"9px\"\n    viewBox=\"0 0 8 9\"\n    style={{ marginRight: MARGIN_RIGHT }}\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g transform=\"translate(-2.000000, -2.000000)\">\n      <polygon fill=\"currentColor\" points=\"6 11 9.5 2 2.5 2\" />\n    </g>\n  </svg>\n);\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/guide/quick-start.md?watch=parent';\n  export const texts = [{\"value\":\"$ npm install @antv/gpt-vis --save\\n\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"import React from 'react';\\nimport { GPTVis } from '@antv/gpt-vis';\\n\\nconst markdownContent = `\\n# GPT-VIS \\\\n\\\\nComponents for GPTs, generative AI, and LLM projects. Not only UI Components.\\n\\nHere’s a visualization of Haidilao's food delivery revenue from 2013 to 2022. You can see a steady increase over the years, with notable *growth* particularly in recent years.\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"line\\\",\\n  \\\"data\\\": [\\n    { \\\"time\\\":2013,\\\"value\\\":59.3 },\\n    { \\\"time\\\":2014,\\\"value\\\":64.4 },\\n    { \\\"time\\\":2015,\\\"value\\\":68.9 },\\n    { \\\"time\\\":2016,\\\"value\\\":74.4 },\\n    { \\\"time\\\":2017,\\\"value\\\":82.7 },\\n    { \\\"time\\\":2018,\\\"value\\\":91.9 },\\n    { \\\"time\\\":2019,\\\"value\\\":99.1 },\\n    { \\\"time\\\":2020,\\\"value\\\":101.6 },\\n    { \\\"time\\\":2021,\\\"value\\\":114.4 },\\n    { \\\"time\\\":2022,\\\"value\\\":121 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nexport default () => {\\n  return <GPTVis>{markdownContent}</GPTVis>;\\n};\\n\",\"paraId\":1,\"tocIndex\":1},{\"value\":\"业务定制 UI 场景，提供方便的扩展机制，支持标签和代码块扩展。\",\"paraId\":2,\"tocIndex\":2},{\"value\":\"import { GPTVisLite, withChartCode, ChartType, Pie } from '@antv/gpt-vis';\\n\\nconst markdownContent = `\\n\\\\`\\\\`\\\\`my-ui\\nmy data\\n\\\\`\\\\`\\\\`\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"pie\\\",\\n  \\\"data\\\": [\\n    { \\\"category\\\": \\\"分类一\\\", \\\"value\\\": 27 },\\n    { \\\"category\\\": \\\"分类二\\\", \\\"value\\\": 25 },\\n    { \\\"category\\\": \\\"分类三\\\", \\\"value\\\": 18 },\\n    { \\\"category\\\": \\\"其他\\\", \\\"value\\\": 5 }\\n  ]\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst customRenderers = {\\n  'my-ui': ({ children }) => <div>{children}</div>,\\n};\\nconst components = {\\n  code: withChartCode({\\n    // register custom block renderer\\n    languageRenderers: customRenderers,\\n    // register a pie chart\\n    components: { [ChartType.Pie]: Pie },\\n  }),\\n};\\n\\nexport default () => {\\n  return <GPTVisLite components={components}>{markdownContent}</GPTVisLite>;\\n};\\n\",\"paraId\":3,\"tocIndex\":2}];\n  ","import { snapdom } from '@zumer/snapdom';\nimport React, { memo, useRef, useState } from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport json from 'react-syntax-highlighter/dist/esm/languages/hljs/json';\nimport { magula } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Check, Copy, DownLoad, ZoomIn, ZoomOut } from './icon';\nimport Loading from './Loading';\nimport {\n  ChartWrapper,\n  Divider,\n  ErrorMessage,\n  GlobalStyles,\n  StyledGPTVis,\n  StyledTabButton,\n  TabContainer,\n  TabContent,\n  TabHeader,\n  TabLeftGroup,\n  TabRightGroup,\n  TextButton,\n} from './styles';\nimport type { ChartComponents, ChartJson, ComponentErrorRender, ErrorRender } from './type';\nimport { handleCopyCode } from './utils';\n\n// 注册 JSON 语言支持\nSyntaxHighlighter.registerLanguage('json', json);\n\nconst G6List = [\n  'mind-map',\n  'fishbone-diagram',\n  'flow-diagram',\n  'organization-chart',\n  'network-graph',\n  'indented-tree',\n];\n\ntype RenderVisChartProps = {\n  content: string;\n  components: ChartComponents;\n  debug?: boolean;\n  loadingTimeout: number;\n  style?: React.CSSProperties;\n  componentErrorRender?: (errorInfo: ComponentErrorRender) => React.ReactElement;\n  errorRender?: (errorInfo: ErrorRender) => React.ReactElement;\n};\n\nexport const RenderVisChart: React.FC<RenderVisChartProps> = memo(\n  ({ style, content, components, debug, loadingTimeout, componentErrorRender, errorRender }) => {\n    const timeoutRef = useRef<NodeJS.Timeout>();\n    const copyTimeoutRef = useRef<NodeJS.Timeout>();\n    const [loading, setLoading] = useState(true);\n    const [activeTab, setActiveTab] = useState<'chart' | 'code'>('chart');\n    const [hasRenderError, setHasRenderError] = useState(false);\n    const [copied, setCopied] = useState(false);\n    const chartRef = useRef<any>(null);\n    const chartContainerRef = useRef<HTMLDivElement>(null);\n    let chartJson: ChartJson;\n\n    try {\n      chartJson = JSON.parse(content);\n    } catch (e) {\n      const parseError = e as Error;\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        if (debug) {\n          console.warn('GPT-Vis parse content timeout!');\n        }\n      }\n      timeoutRef.current = setTimeout(() => {\n        setLoading(false);\n      }, loadingTimeout);\n\n      if (loading) {\n        return (\n          <StyledGPTVis className=\"gpt-vis\" style={style}>\n            <Loading />\n          </StyledGPTVis>\n        );\n      }\n\n      // 使用自定义错误渲染函数\n      if (errorRender) {\n        return errorRender({\n          error: parseError,\n          content,\n        });\n      }\n\n      return <div> GPT-Vis parse content error! </div>;\n    }\n\n    const { type, ...chartProps } = chartJson;\n    const ChartComponent = components[type];\n\n    // debug mode print chartJson\n    if (debug) {\n      console.log('GPT-Vis withChartCode get chartJson parse from vis-chart code block', chartJson);\n    }\n\n    // If the chart type is not supported, display an error message\n    if (!ChartComponent) {\n      const message = `Chart type \"${type}\" is not supported.`;\n      if (errorRender) {\n        return errorRender({\n          error: new Error(message),\n          content,\n        });\n      }\n\n      return <div> {message} </div>;\n    }\n\n    const FallbackComponent = (fallbackProps: { error: Error }) => {\n      const { error } = fallbackProps;\n\n      // 设置渲染错误状态并切换到代码 tab\n      if (!hasRenderError) {\n        setHasRenderError(true);\n        setActiveTab('code');\n      }\n\n      if (componentErrorRender) {\n        return componentErrorRender({\n          error,\n          content,\n        });\n      }\n\n      // 返回一个简单的错误提示\n      return (\n        <div>\n          <ErrorMessage>图表渲染失败</ErrorMessage>\n        </div>\n      );\n    };\n\n    const handleCopy = async () => {\n      try {\n        await handleCopyCode(chartJson);\n        setCopied(true);\n\n        // 清除之前的定时器\n        if (copyTimeoutRef.current) {\n          clearTimeout(copyTimeoutRef.current);\n        }\n\n        // 3秒后恢复原状态\n        copyTimeoutRef.current = setTimeout(() => {\n          setCopied(false);\n        }, 1000);\n      } catch (error) {\n        console.error('复制失败:', error);\n      }\n    };\n\n    const handleDownload = async () => {\n      try {\n        if (chartContainerRef.current) {\n          const result = await snapdom(chartContainerRef.current, { scale: 2 });\n          await result.download({\n            format: 'png',\n            filename: `chart-${type}-${Date.now()}`,\n          });\n        }\n      } catch (error) {\n        console.error('下载图片失败:', error);\n      }\n    };\n\n    const isG6 = G6List.includes(type);\n\n    // 缩放功能函数\n    const handleZoomOut = () => {\n      if (chartRef.current && typeof chartRef.current.zoomTo === 'function') {\n        const currentZoom = chartRef.current.getZoom() || 1;\n        const newZoom = Math.min(currentZoom * 1.15, 1.5);\n        chartRef.current.zoomTo(newZoom);\n      }\n    };\n\n    const handleZoomIn = () => {\n      if (chartRef.current && typeof chartRef.current.zoomTo === 'function') {\n        const currentZoom = chartRef.current.getZoom() || 1;\n        const newZoom = Math.max(currentZoom / 1.15, 0.1);\n        chartRef.current.zoomTo(newZoom);\n      }\n    };\n\n    // Render the supported chart component with data\n    return (\n      <TabContainer style={style}>\n        <TabHeader>\n          <TabLeftGroup>\n            <StyledTabButton active={activeTab === 'chart'} onClick={() => setActiveTab('chart')}>\n              图表\n            </StyledTabButton>\n            <StyledTabButton active={activeTab === 'code'} onClick={() => setActiveTab('code')}>\n              代码\n            </StyledTabButton>\n          </TabLeftGroup>\n\n          <TabRightGroup>\n            {activeTab === 'chart' ? (\n              <>\n                {isG6 && (\n                  <>\n                    <TextButton\n                      onClick={handleZoomIn}\n                      style={{ width: '24px', height: '24px', padding: 0 }}\n                    >\n                      <ZoomIn size={18} />\n                    </TextButton>\n                    <TextButton\n                      onClick={handleZoomOut}\n                      style={{ width: '24px', height: '24px', padding: 0 }}\n                    >\n                      <ZoomOut size={18} />\n                    </TextButton>\n                    <Divider />\n                  </>\n                )}\n                <TextButton onClick={handleDownload}>\n                  <DownLoad size={16} />\n                  下载\n                </TextButton>\n              </>\n            ) : (\n              <>\n                {/* 复制代码 */}\n                <TextButton onClick={handleCopy}>\n                  {copied ? <Check /> : <Copy />}\n                  {copied ? '完成' : '复制'}\n                </TextButton>\n              </>\n            )}\n          </TabRightGroup>\n        </TabHeader>\n\n        <TabContent>\n          {activeTab === 'chart' ? (\n            <ErrorBoundary\n              FallbackComponent={FallbackComponent}\n              onError={(error: Error, errorInfo: React.ErrorInfo) => {\n                console.error('GPT-Vis Render error:', error);\n                if (!hasRenderError) {\n                  setHasRenderError(true);\n                  setActiveTab('code');\n                }\n                if (debug) {\n                  console.error('GPT-Vis Render error info:', errorInfo);\n                }\n              }}\n            >\n              <StyledGPTVis className=\"gpt-vis\">\n                <GlobalStyles />\n                <ChartWrapper ref={chartContainerRef}>\n                  <ChartComponent\n                    {...chartProps}\n                    onReady={(chart: any) => {\n                      chartRef.current = chart;\n                    }}\n                  />\n                </ChartWrapper>\n              </StyledGPTVis>\n            </ErrorBoundary>\n          ) : (\n            <div style={{ maxHeight: 500, overflow: 'auto' }}>\n              <SyntaxHighlighter\n                language=\"json\"\n                style={magula}\n                showLineNumbers={false}\n                wrapLines={true}\n                customStyle={{\n                  background: 'transparent',\n                  padding: '16px',\n                  margin: 0,\n                  fontSize: '12px',\n                  lineHeight: '1',\n                }}\n              >\n                {JSON.stringify(chartJson, null, 2) || content}\n              </SyntaxHighlighter>\n            </div>\n          )}\n        </TabContent>\n      </TabContainer>\n    );\n  },\n);\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/ConfigProvider/demos/graph-components-config.tsx?watch=parent';\n  export default \"import { ConfigProvider, GPTVis } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst content = `\\n ~~~vis-chart\\n{\\n  \\\"type\\\": \\\"mind-map\\\",\\n  \\\"data\\\": {\\n    \\\"name\\\": \\\"台风形成的因素\\\",\\n    \\\"children\\\": [\\n      {\\n        \\\"name\\\": \\\"气象条件\\\",\\n        \\\"children\\\": [\\n          { \\\"name\\\": \\\"温暖的海水\\\" },\\n          { \\\"name\\\": \\\"气压分布\\\" },\\n          { \\\"name\\\": \\\"湿度水平\\\" },\\n          { \\\"name\\\": \\\"风的切变\\\" }\\n        ]\\n      },\\n      {\\n        \\\"name\\\": \\\"地理环境\\\",\\n        \\\"children\\\": [\\n          { \\\"name\\\": \\\"大陆架的形状与深度\\\" },\\n          { \\\"name\\\": \\\"海洋暖流的分布\\\" },\\n          { \\\"name\\\": \\\"热带地区的气候特征\\\" },\\n          { \\\"name\\\": \\\"岛屿的影响\\\" }\\n        ]\\n      }\\n    ]\\n  }\\n}\\n~~~`;\\n\\nconst mindmapConfig = {\\n  type: 'linear',\\n  direction: 'right',\\n  behaviors: (behaviors) => [\\n    // console.log(behaviors) 👉 [{ key: 'zoom-canvas', type: 'zoom-canvas' }, { key: 'drag-canvas', type: 'drag-canvas' }]\\n    // 默认启用两个交互，缩放画布和拖拽画布。此处移除缩放画布并添加拖拽元素\\n    ...behaviors.filter((behavior) => behavior.key !== 'zoom-canvas'),\\n    {\\n      key: 'drag-element',\\n      type: 'drag-element',\\n    },\\n  ],\\n  transforms: (prev) => [\\n    // 默认节点支持折叠展开，此处禁用\\n    ...prev.filter((transform) => transform.key !== 'collapse-expand-react-node'),\\n    {\\n      ...prev.find((transform) => transform.key === 'collapse-expand-react-node'),\\n      enable: false,\\n    },\\n  ],\\n};\\n\\nexport default () => (\\n  <ConfigProvider\\n    components={{\\n      MindMap: mindmapConfig,\\n    }}\\n  >\\n    <GPTVis>{content}</GPTVis>\\n  </ConfigProvider>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/guide/custom-ui.md?watch=parent';\n  export const texts = [{\"value\":\"为模型输出的结构化数据，通过代码块的方式定制 UI。\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"import { GPTVisLite, withChartCode } from '@antv/gpt-vis';\\n\\nconst markdownContent = `\\n\\\\`\\\\`\\\\`weather\\n{\\n  \\\"locationName\\\": \\\"Hangzhou\\\",\\n  \\\"temperature\\\": 11.4,\\n  \\\"humidity\\\": 82,\\n  \\\"wind\\\": 6.8,\\n  \\\"cloudiness\\\": 75,\\n  \\\"uv\\\": \\\"0.2 of 11\\\"\\n}\\n\\\\`\\\\`\\\\`\\n\\nIn Hangzhou, the current weather is as follows: \\n- The temperature is 11.4°C, humidity is 82%, and wind speed is 6.8 kph. \\n- There's 75% cloud cover, and the UV index is very low at 0.2 out of 11. \\n- This indicates cool, humid conditions with overcast skies and minimal UV exposure.\\n`;\\n\\nconst customRenderers = {\\n  weather: (props) => 'WeatherCard',\\n};\\nconst components = {\\n  code: withChartCode({\\n    // register custom block renderer\\n    languageRenderers: customRenderers,\\n  }),\\n};\\n\\nexport default () => {\\n  return <GPTVisLite components={components}>{markdownContent}</GPTVisLite>;\\n};\\n\",\"paraId\":1,\"tocIndex\":0}];\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Text/demos/custom-markdown.tsx?watch=parent';\n  export default \"import { CaretDownOutlined, CaretUpOutlined } from '@ant-design/icons';\\nimport { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ConfigProvider, GPTVis, VisText } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n<vis-text type=\\\"metric_name\\\">DAU</vis-text> 是 <vis-text type=\\\"metric_value\\\">1.23亿</vis-text>，环比昨日 <vis-text type=\\\"delta_value_pos\\\">80万</vis-text>(<vis-text type=\\\"ratio_value_pos\\\">2.3%</vis-text>)，<vis-text type=\\\"action_recommendation\\\">建议保持关注</vis-text>。\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVis components={{ 'vis-text': VisText }}>{content}</GPTVis>\\n);\\n\\nexport default () => (\\n  <ConfigProvider\\n    components={{\\n      VisText: {\\n        __statics: {\\n          'icon:antd-up': CaretUpOutlined,\\n          'icon:antd-down': CaretDownOutlined,\\n        },\\n        delta_value_pos: {\\n          color: '#13A8A8',\\n          prefix: 'icon:antd-up',\\n        },\\n        delta_value_neg: {\\n          color: '#FA541C',\\n          prefix: 'icon:antd-down',\\n        },\\n        ratio_value_pos: {\\n          color: '#13A8A8',\\n          prefix: '↑',\\n        },\\n        ratio_value_neg: {\\n          color: '#FA541C',\\n          prefix: '↓',\\n        },\\n        action_recommendation: {\\n          backgroundColor: 'antiquewhite',\\n        },\\n      },\\n    }}\\n  >\\n    <div style={bgStyle}>\\n      <Bubble\\n        content={markdownContent}\\n        messageRender={RenderMarkdown}\\n        avatar={{\\n          src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n        }}\\n        variant=\\\"shadow\\\"\\n        styles={{ content: { background: '#fff' } }}\\n      />\\n    </div>\\n  </ConfigProvider>\\n);\\n\";;\n  ","/**\n * make data between 0 ~ 1\n */\nfunction normalizeProportion(data: number | undefined) {\n  if (typeof data !== 'number') return 0;\n  if (data > 1) return 1;\n  if (data < 0) return 0;\n  return data;\n}\n\nexport function getArcPath(size: number, data: number) {\n  const cx = size / 2;\n  const cy = size / 2;\n  const r = size / 2;\n  const angle = normalizeProportion(data) * 2 * Math.PI;\n  const dx = cx + r * Math.sin(angle);\n  const dy = cy - r * Math.cos(angle);\n  const path = `\n    M${cx} ${0}\n    A ${cx} ${cy} 0 ${angle > Math.PI ? 1 : 0} 1 ${dx} ${dy}\n    L ${cx} ${cy} Z\n  `;\n  return path;\n}\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/OrganizationChart/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, GPTVisLite, OrganizationChart, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个组织架构图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"organization-chart\\\",\\n  \\\"data\\\": {\\n    \\\"name\\\": \\\"Eric Joplin\\\",\\n    \\\"description\\\": \\\"Chief Executive Officer\\\",\\n    \\\"children\\\": [\\n      {\\n        \\\"name\\\": \\\"Linda Newland\\\",\\n        \\\"description\\\": \\\"Chief Executive Assistant\\\"\\n      }\\n    ]\\n  }\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.OrganizationChart]: OrganizationChart },\\n  style: { width: 600 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"组织架构图来可视化一下我的数据\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/FlowDiagram/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, FlowDiagram, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个流程图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"flow-diagram\\\",\\n  \\\"data\\\": {\\n    \\\"nodes\\\": [\\n      { \\\"name\\\": \\\"客户下单\\\" },\\n      { \\\"name\\\": \\\"系统生成订单\\\" },\\n      { \\\"name\\\": \\\"仓库拣货\\\" },\\n      { \\\"name\\\": \\\"仓库打包\\\" },\\n      { \\\"name\\\": \\\"物流配送\\\" },\\n      { \\\"name\\\": \\\"客户收货\\\" }\\n    ],\\n    \\\"edges\\\": [\\n      { \\\"source\\\": \\\"客户下单\\\", \\\"target\\\": \\\"系统生成订单\\\" },\\n      { \\\"source\\\": \\\"系统生成订单\\\", \\\"target\\\": \\\"仓库拣货\\\" },\\n      { \\\"source\\\": \\\"仓库拣货\\\", \\\"target\\\": \\\"仓库打包\\\" },\\n      { \\\"source\\\": \\\"仓库打包\\\", \\\"target\\\": \\\"物流配送\\\" },\\n      { \\\"source\\\": \\\"物流配送\\\", \\\"target\\\": \\\"客户收货\\\" }\\n    ]\\n  }\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.FlowDiagram]: FlowDiagram },\\n  style: { width: 500 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"可视化用户网购物流全流程\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","import { styled } from 'styled-components';\n\nconst StyledComponent = styled.div`\n  width: 560px;\n  background-color: #60a5fa;\n  border-radius: 10px;\n\n  .locationSection {\n    display: flex;\n    flex-direction: column;\n    padding: 18px 25px;\n  }\n\n  .temperatureWrapper {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .temperatureDetails {\n    display: flex;\n    align-items: center;\n    gap: 40px;\n  }\n\n  .imageIcon {\n    flex-shrink: 0;\n    width: 36px;\n    height: 36px;\n    border-radius: 10px;\n  }\n\n  .currentTemperature {\n    color: #feffff;\n    font-size: 25px;\n    font-weight: bold;\n  }\n\n  .locationName {\n    color: #feffff;\n    font-size: 24px;\n    font-weight: bold;\n  }\n\n  .weatherDetails {\n    display: flex;\n    align-items: center;\n    margin-top: 16px;\n    justify-content: space-between;\n    font-size: 14px;\n  }\n\n  .humiditySection {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    min-width: 82px;\n  }\n\n  .attributeLabel {\n    min-width: 56px;\n    margin-right: 2px;\n    margin-left: 2px;\n    color: #dbeafe;\n  }\n\n  .uvIndexValue {\n    color: #fff;\n    font-size: 12px;\n  }\n\n  .windSection {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    margin-left: 20px;\n  }\n\n  .windSpeedLabel {\n    color: #dbeafe;\n  }\n\n  .windSpeedValue {\n    color: #feffff;\n  }\n\n  .cloudinessSection {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .cloudinessLabel {\n    color: #dbeafe;\n  }\n\n  .cloudinessValue {\n    align-self: flex-start;\n    color: #fff;\n  }\n\n  .uvIndexSection {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .uvIndexLabel {\n    margin-left: 2px;\n    color: #dbeafe;\n  }\n\n  .uvIndexValue {\n    color: #fff;\n  }\n`;\n\nexport default StyledComponent;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/FlowDiagram/demos/common.tsx?watch=parent';\n  export default \"import { FlowDiagram } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = {\\n  nodes: [\\n    { name: '客户咨询' },\\n    { name: '判断问题类型' },\\n    { name: '技术问题' },\\n    { name: '售后问题' },\\n    { name: '咨询产品信息' },\\n    { name: '转接技术部门' },\\n    { name: '转接售后部门' },\\n    { name: '提供产品信息' },\\n    { name: '客户是否满意' },\\n    { name: '满意' },\\n    { name: '不满意' },\\n    { name: '记录反馈' },\\n  ],\\n  edges: [\\n    { source: '客户咨询', target: '判断问题类型' },\\n    { source: '判断问题类型', target: '技术问题', name: '技术问题' },\\n    { source: '判断问题类型', target: '售后问题', name: '售后问题' },\\n    { source: '判断问题类型', target: '咨询产品信息', name: '产品咨询' },\\n    { source: '技术问题', target: '转接技术部门' },\\n    { source: '售后问题', target: '转接售后部门' },\\n    { source: '咨询产品信息', target: '提供产品信息' },\\n    { source: '转接技术部门', target: '客户是否满意' },\\n    { source: '转接售后部门', target: '客户是否满意' },\\n    { source: '提供产品信息', target: '客户是否满意' },\\n    { source: '客户是否满意', target: '满意', name: '满意' },\\n    { source: '客户是否满意', target: '不满意', name: '不满意' },\\n    { source: '不满意', target: '记录反馈' },\\n  ],\\n};\\n\\nexport default () => <FlowDiagram data={data} containerStyle={{ height: 300 }} />;\\n\";;\n  ","export * from './chart';\nexport type { GlobalConfig } from './config';\n","import { PointLayer } from '@antv/l7';\nimport { isObject } from 'lodash';\nimport type { Marker as MarkerProps } from '../../types/map';\nimport { urlToMarkerId } from './util';\n\nexport function setMarkers(data: MarkerProps[]) {\n  const items = data.map((item: MarkerProps) => {\n    return {\n      ...item,\n      label: isObject(item.label) ? item.label!.content : item.label,\n      color: item.label?.color,\n      bgColor: item.label?.bgColor,\n      fontSize: item.label?.fontSize,\n      offsets: [item.anchorX || 0, item.anchorY || -1],\n      iconPath: item.iconPath ? urlToMarkerId(item.iconPath) : undefined,\n    };\n  });\n  const icons = items.filter((item) => item.iconPath !== undefined);\n  const texts = items.filter((item) => item.label !== undefined);\n  const layers = [];\n  if (texts.length > 0) {\n    const offsets = texts[0].offsets;\n    const fontSize = texts[0].fontSize || 10;\n    const text = new PointLayer({\n      zIndex: 2,\n    })\n      .source(texts, {\n        parser: {\n          type: 'json',\n          x: 'longitude',\n          y: 'latitude',\n        },\n      })\n      .shape('label', 'text')\n      .size('fontSize')\n      .color('color')\n      .style({\n        opacity: 1,\n        textOffset: [offsets[0], -2 * offsets[1] * fontSize],\n        fontWeight: 600,\n        textAnchor: 'center',\n        stroke: texts[0].bgColor || '#ffffff', // 描边颜色\n        strokeWidth: 2, // 描边宽度\n        strokeOpacity: 1.0,\n        padding: [10, 10],\n      });\n    layers.push(text);\n  }\n  if (icons.length !== 0) {\n    const offsets = icons[0].offsets;\n\n    const width = icons[0].width || 10;\n    const iconLayer = new PointLayer()\n      .source(icons, {\n        parser: {\n          type: 'json',\n          x: 'longitude',\n          y: 'latitude',\n        },\n      })\n      .shape('iconPath')\n      .size('width')\n      .style({\n        offsets: [offsets[0], offsets[1] * width],\n      });\n    layers.push(iconLayer);\n  }\n  return layers;\n}\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Scatter/demos/markdown.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { ChartType, GPTVisLite, Scatter, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个散点图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n    \\\"type\\\": \\\"scatter\\\",\\n    \\\"data\\\": [\\n      { \\\"x\\\": 22, \\\"y\\\": 3000 },\\n      { \\\"x\\\": 23, \\\"y\\\": 3200 },\\n      { \\\"x\\\": 24, \\\"y\\\": 3100 },\\n      { \\\"x\\\": 25, \\\"y\\\": 3500 },\\n      { \\\"x\\\": 26, \\\"y\\\": 3300 },\\n      { \\\"x\\\": 27, \\\"y\\\": 3600 },\\n      { \\\"x\\\": 28, \\\"y\\\": 4000 },\\n      { \\\"x\\\": 29, \\\"y\\\": 3900 },\\n      { \\\"x\\\": 30, \\\"y\\\": 4200 },\\n      { \\\"x\\\": 31, \\\"y\\\": 4100 },\\n      { \\\"x\\\": 32, \\\"y\\\": 4500 },\\n      { \\\"x\\\": 33, \\\"y\\\": 4700 },\\n      { \\\"x\\\": 34, \\\"y\\\": 4600 },\\n      { \\\"x\\\": 35, \\\"y\\\": 4800 },\\n      { \\\"x\\\": 36, \\\"y\\\": 5000 },\\n      { \\\"x\\\": 37, \\\"y\\\": 5200 },\\n      { \\\"x\\\": 38, \\\"y\\\": 5100 },\\n      { \\\"x\\\": 39, \\\"y\\\": 5500 },\\n      { \\\"x\\\": 40, \\\"y\\\": 5300 },\\n      { \\\"x\\\": 41, \\\"y\\\": 5700 },\\n      { \\\"x\\\": 42, \\\"y\\\": 5600 },\\n      { \\\"x\\\": 43, \\\"y\\\": 5900 },\\n      { \\\"x\\\": 44, \\\"y\\\": 5800 },\\n      { \\\"x\\\": 45, \\\"y\\\": 6000 },\\n      { \\\"x\\\": 46, \\\"y\\\": 6100 },\\n      { \\\"x\\\": 47, \\\"y\\\": 6500 },\\n      { \\\"x\\\": 48, \\\"y\\\": 6300 },\\n      { \\\"x\\\": 49, \\\"y\\\": 6700 },\\n      { \\\"x\\\": 50, \\\"y\\\": 6400 },\\n      { \\\"x\\\": 51, \\\"y\\\": 6800 },\\n      { \\\"x\\\": 52, \\\"y\\\": 6900 },\\n      { \\\"x\\\": 53, \\\"y\\\": 7100 },\\n      { \\\"x\\\": 54, \\\"y\\\": 7000 },\\n      { \\\"x\\\": 55, \\\"y\\\": 7300 },\\n      { \\\"x\\\": 56, \\\"y\\\": 7200 },\\n      { \\\"x\\\": 57, \\\"y\\\": 7500 },\\n      { \\\"x\\\": 58, \\\"y\\\": 7400 },\\n      { \\\"x\\\": 59, \\\"y\\\": 7600 },\\n      { \\\"x\\\": 60, \\\"y\\\": 7700 },\\n      { \\\"x\\\": 61, \\\"y\\\": 7900 },\\n      { \\\"x\\\": 62, \\\"y\\\": 7800 },\\n      { \\\"x\\\": 63, \\\"y\\\": 8000 },\\n      { \\\"x\\\": 64, \\\"y\\\": 8100 },\\n      { \\\"x\\\": 65, \\\"y\\\": 8200 },\\n      { \\\"x\\\": 66, \\\"y\\\": 8300 },\\n      { \\\"x\\\": 67, \\\"y\\\": 8500 },\\n      { \\\"x\\\": 68, \\\"y\\\": 8400 },\\n      { \\\"x\\\": 69, \\\"y\\\": 8600 },\\n      { \\\"x\\\": 70, \\\"y\\\": 8700 }\\n    ],\\n  \\\"axisXTitle\\\": \\\"age\\\",\\n  \\\"axisYTitle\\\": \\\"income\\\"\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Scatter]: Scatter },\\n  style: { width: 350 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"可视化年龄与收入的关系\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","import type { G6, MindMapOptions } from '@ant-design/graphs';\nimport { MindMap as ADCMindMap } from '@ant-design/graphs';\nimport type { FC } from 'react';\nimport React, { useMemo } from 'react';\nimport { useGraphConfig } from '../ConfigProvider/hooks';\nimport type { TreeGraphProps } from '../types';\nimport { visTreeData2GraphData } from '../utils/graph';\n\nconst defaultConfig: MindMapOptions = {\n  type: 'boxed',\n  autoFit: 'view',\n  autoResize: true,\n  padding: 2,\n  zoomRange: [0.1, 5],\n  zoom: 1,\n  node: { animation: { translate: false, update: false } },\n  edge: { animation: { translate: false, update: false } },\n  transforms: (prev) => [\n    ...prev.filter(\n      (transform) => (transform as G6.BaseTransformOptions).type !== 'collapse-expand-react-node',\n    ),\n    {\n      ...(prev.find(\n        (transform) => (transform as G6.BaseTransformOptions).type === 'collapse-expand-react-node',\n      ) as G6.BaseTransformOptions),\n      enable: true,\n    },\n  ],\n  behaviors: ['drag-canvas'],\n};\n\nexport interface MindMapProps extends TreeGraphProps {}\n\nconst MindMap: FC<MindMapProps> = (props) => {\n  const { data: propsData, ...restProps } = props;\n\n  const data = useMemo(() => visTreeData2GraphData(propsData), [propsData]);\n\n  const config = useGraphConfig<MindMapOptions>('MindMap', defaultConfig, restProps);\n\n  return <ADCMindMap data={data} {...config} />;\n};\n\nexport default MindMap;\n","import type { ScatterConfig } from '@ant-design/plots';\nimport { Scatter as ADCScatter } from '@ant-design/plots';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { usePlotConfig } from '../ConfigProvider/hooks';\nimport type { BasePlotProps } from '../types';\n\ntype ScatterDataItem = {\n  x: number;\n  y: number;\n  [key: string]: string | number;\n};\n\nexport type ScatterProps = BasePlotProps<ScatterDataItem> & Partial<ScatterConfig>;\n\nconst defaultConfig = (props: ScatterConfig): ScatterConfig => {\n  const { data, xField = 'x', yField = 'y' } = props;\n  const axisXTitle = get(props, 'axis.x.title');\n  const axisYTitle = get(props, 'axis.y.title');\n\n  return {\n    data,\n    xField,\n    yField,\n    tooltip: [\n      { channel: 'x', name: axisXTitle || 'x' },\n      { channel: 'y', name: axisYTitle || 'y' },\n    ],\n  };\n};\n\nconst Scatter = (props: ScatterProps) => {\n  const config = usePlotConfig<ScatterConfig>('Scatter', defaultConfig, props);\n\n  return <ADCScatter {...config} />;\n};\n\nexport default Scatter;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Treemap/demos/common.tsx?watch=parent';\n  export default \"import { Treemap } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = [\\n  { name: '分类 1', value: 560 },\\n  { name: '分类 2', value: 500 },\\n  { name: '分类 3', value: 150 },\\n  { name: '分类 4', value: 140 },\\n  { name: '分类 5', value: 115 },\\n  { name: '分类 6', value: 95 },\\n  { name: '分类 7', value: 90 },\\n  { name: '分类 8', value: 75 },\\n  { name: '分类 9', value: 98 },\\n  { name: '分类 10', value: 60 },\\n  { name: '分类 11', value: 45 },\\n  { name: '分类 12', value: 40 },\\n  { name: '分类 13', value: 40 },\\n  { name: '分类 14', value: 35 },\\n  { name: '分类 15', value: 40 },\\n  { name: '分类 16', value: 40 },\\n  { name: '分类 17', value: 40 },\\n  { name: '分类 18', value: 30 },\\n  { name: '分类 19', value: 28 },\\n  { name: '分类 20', value: 16 },\\n];\\n\\nexport default () => {\\n  return <Treemap data={data} />;\\n};\\n\";;\n  ","import type { NetworkGraphOptions } from '@ant-design/graphs';\nimport { NetworkGraph as ADCNetworkGraph } from '@ant-design/graphs';\nimport React, { useMemo } from 'react';\nimport { useGraphConfig } from '../ConfigProvider/hooks';\nimport type { GraphProps } from '../types';\nimport { visGraphData2GraphData } from '../utils/graph';\n\nexport interface NetworkGraphProps extends GraphProps {}\n\nconst defaultConfig: NetworkGraphOptions = {\n  autoFit: 'view',\n  autoResize: true,\n  zoomRange: [0.1, 5],\n  zoom: 1,\n  node: {\n    style: {\n      size: 28,\n      labelFontSize: 10,\n      labelBackground: true,\n    },\n    animation: {\n      enter: false,\n    },\n  },\n  edge: {\n    style: {\n      labelFontSize: 10,\n      labelBackground: true,\n      endArrow: true,\n    },\n    animation: { enter: false },\n  },\n  behaviors: ['drag-canvas', { key: 'hover-activate', type: 'hover-activate', degree: 1 }],\n  transforms: (prev) => [...prev, 'process-parallel-edges'],\n  layout: {\n    type: 'force',\n    animation: false,\n  },\n};\n\nconst NetworkGraph: React.FC<NetworkGraphProps> = (props) => {\n  const { data: propsData, ...restProps } = props;\n\n  const data = useMemo(() => visGraphData2GraphData(propsData), [propsData]);\n\n  const config = useGraphConfig<NetworkGraphOptions>('NetworkGraph', defaultConfig, restProps);\n\n  return <ADCNetworkGraph data={data} {...config} />;\n};\n\nexport default NetworkGraph;\n","import type { TreemapConfig } from '@ant-design/plots';\nimport { Treemap as ADCTreemap } from '@ant-design/plots';\nimport React, { useMemo } from 'react';\nimport { usePlotConfig } from '../ConfigProvider/hooks';\nimport type { BasePlotProps } from '../types';\n\ntype TreeNode = {\n  name: string;\n  value: number;\n  children?: TreeNode[];\n};\n// binNumber和binWidth为互斥属性，选其一即可\ntype ADCTreemapConfig = TreemapConfig & {\n  valueField: string;\n};\nexport type TreemapProps = BasePlotProps<TreeNode> & Partial<TreemapConfig>;\n\nconst defaultConfig = (props: ADCTreemapConfig): TreemapConfig => {\n  const { valueField = 'value' } = props;\n  return {\n    legend: false,\n    layout: {\n      tile: 'treemapBinary',\n      paddingInner: 3,\n    },\n    valueField,\n    tooltip: {\n      items: [\n        (d) => {\n          return {\n            name: d.data?.name,\n            value: d[valueField],\n          };\n        },\n      ],\n    },\n    style: { fillOpacity: 0.8, labelFontSize: 12 },\n  };\n};\nconst transform = (data: TreeNode[]) => {\n  return {\n    name: 'root',\n    children: data,\n  };\n};\n\nconst Treemap = (props: TreemapProps) => {\n  const config = usePlotConfig<TreemapConfig>('Treemap', defaultConfig, props);\n  const { data, ...others } = config;\n  const transformData = useMemo(() => transform(data), [data]);\n\n  return <ADCTreemap {...others} data={transformData} />;\n};\n\nexport default Treemap;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/PinMap/demos/marker.tsx?watch=parent';\n  export default \"import { PinMap } from '@antv/gpt-vis';\\nimport React from 'react';\\nexport default () => {\\n  const data = [\\n    {\\n      label: '石屋洞',\\n      longitude: 120.130638,\\n      latitude: 30.219835,\\n      cityname: '杭州市',\\n    },\\n    {\\n      label: '满觉陇',\\n      longitude: 120.128125,\\n      latitude: 30.219386,\\n    },\\n    { label: '杨梅岭', longitude: 120.118362, latitude: 30.217175 },\\n    { label: '理安寺', longitude: 120.112958, latitude: 30.207319 },\\n    { label: '九溪烟树', longitude: 120.11335, latitude: 30.202395 },\\n    { label: '飞来峰', longitude: 120.100549, latitude: 30.236875 },\\n    { label: '灵隐寺', longitude: 120.101406, latitude: 30.240826 },\\n    { label: '天竺三寺', longitude: 120.105337, latitude: 30.236818 },\\n    { label: '杭州植物园', longitude: 120.116979, latitude: 30.252876 },\\n    { label: '杭州花圃', longitude: 120.127654, latitude: 30.245663 },\\n    { label: '苏堤', longitude: 120.135764, latitude: 30.251448 },\\n    { label: '虎跑公园', longitude: 120.130095, latitude: 30.207505 },\\n    { label: '玉皇飞云', longitude: 120.145323, latitude: 30.214993 },\\n    { label: '长桥公园', longitude: 120.155057, latitude: 30.232985 },\\n  ];\\n  const markerStyle = {\\n    iconPath:\\n      'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ufrWTqCNCScAAAAAAAAAAAAADmJ7AQ/original',\\n    width: 5,\\n    anchorY: -1,\\n    label: {\\n      color: '#735142',\\n      fontSize: 10,\\n      bgColor: '#ffffff',\\n    },\\n  };\\n\\n  return (\\n    <PinMap\\n      data={data}\\n      markerStyle={markerStyle}\\n      mapType=\\\"amap://styles/2acc71263b1344d93a902db8df1c8b68\\\"\\n    />\\n  );\\n};\\n\";;\n  ","import { isNaN, isString, toNumber } from 'lodash';\nimport React, { useMemo } from 'react';\nimport { TEXT_THEME } from '../../theme';\nimport type { VisTextProps } from '../../types';\nimport { useSvgWrapper } from '../hooks/useSvgWrapper';\nimport { getArcPath } from './getArcPath';\n\nfunction getProportionNumber(\n  children: string | string[], // markdown 中传入的 children 文本为 string[]\n  origin?: any,\n): number | undefined {\n  let result: number | undefined;\n  const originNumber = toNumber(origin);\n  if (!isNaN(originNumber)) {\n    result = originNumber;\n  } else {\n    let text;\n    if (isString(children)) {\n      text = children;\n    } else if (Array.isArray(children) && isString(children[0])) {\n      text = children[0];\n    }\n    if (text?.endsWith?.('%')) {\n      const percentageStr = text?.replace(/%$/, '');\n      const proportionNumber = toNumber(percentageStr);\n      if (!isNaN(proportionNumber)) result = proportionNumber / 100;\n    }\n  }\n  return result;\n}\n\nexport const ProportionChart: React.FC<VisTextProps> = ({ origin, children }) => {\n  const data = useMemo(() => getProportionNumber(children, origin), [children, origin]);\n  const [Svg, fontSize] = useSvgWrapper();\n  const r = fontSize / 2;\n  return (\n    data && (\n      <Svg width={fontSize} height={fontSize}>\n        <circle cx={r} cy={r} r={r} fill={TEXT_THEME.chart.proportionShadowColor} />\n        {data >= 1 ? (\n          <circle cx={r} cy={r} r={r} fill={TEXT_THEME.chart.proportionFillColor} />\n        ) : (\n          <path d={getArcPath(fontSize, data)} fill={TEXT_THEME.chart.proportionFillColor} />\n        )}\n      </Svg>\n    )\n  );\n};\n","import React, { useMemo, type FC } from 'react';\nimport { useMapConfig } from '../ConfigProvider/hooks';\nimport type { MapProps } from '../Map';\nimport Map from '../Map';\nimport type { PathMap as _PathMap, MarkerData, Polyline } from '../types/map';\nimport { formatMakerStyle, formatPolylineStyle } from '../utils/map';\n\nexport type PathMapProps = MapProps & _PathMap;\n\nconst PathMap: FC<PathMapProps> = (props) => {\n  const { data, markerStyle, pathStyle, ...rest } = useMapConfig('PathMap', props);\n\n  const markerdata = useMemo(() => {\n    const markers: MarkerData[] = [];\n    (data || []).forEach((item) => {\n      if (item.markers) {\n        markers.push(...item.markers);\n      }\n    });\n    return formatMakerStyle(markers, markerStyle);\n  }, [data, markerStyle]);\n\n  const linedata = useMemo(() => {\n    const lines = (data || []).map((item) => {\n      return item.path;\n    }) as Polyline[];\n    return formatPolylineStyle(lines, pathStyle);\n  }, [data, pathStyle]);\n\n  return <Map markers={markerdata} polyline={linedata} {...rest} />;\n};\n\nexport default PathMap;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Scatter/demos/common.tsx?watch=parent';\n  export default \"import { Scatter } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = [\\n  {\\n    x: 161.2,\\n    y: 51.6,\\n  },\\n  {\\n    x: 167.5,\\n    y: 59,\\n  },\\n  {\\n    x: 159.5,\\n    y: 49.2,\\n  },\\n  {\\n    x: 157,\\n    y: 63,\\n  },\\n  {\\n    x: 155.8,\\n    y: 53.6,\\n  },\\n  {\\n    x: 170,\\n    y: 59,\\n  },\\n  {\\n    x: 159.1,\\n    y: 47.6,\\n  },\\n  {\\n    x: 166,\\n    y: 69.8,\\n  },\\n  {\\n    x: 176.2,\\n    y: 66.8,\\n  },\\n  {\\n    x: 160.2,\\n    y: 75.2,\\n  },\\n  {\\n    x: 172.5,\\n    y: 55.2,\\n  },\\n  {\\n    x: 170.9,\\n    y: 54.2,\\n  },\\n  {\\n    x: 172.9,\\n    y: 62.5,\\n  },\\n  {\\n    x: 153.4,\\n    y: 42,\\n  },\\n  {\\n    x: 160,\\n    y: 50,\\n  },\\n  {\\n    x: 147.2,\\n    y: 49.8,\\n  },\\n  {\\n    x: 168.2,\\n    y: 49.2,\\n  },\\n  {\\n    x: 175,\\n    y: 73.2,\\n  },\\n  {\\n    x: 157,\\n    y: 47.8,\\n  },\\n  {\\n    x: 167.6,\\n    y: 68.8,\\n  },\\n  {\\n    x: 159.5,\\n    y: 50.6,\\n  },\\n  {\\n    x: 175,\\n    y: 82.5,\\n  },\\n  {\\n    x: 166.8,\\n    y: 57.2,\\n  },\\n  {\\n    x: 176.5,\\n    y: 87.8,\\n  },\\n  {\\n    x: 170.2,\\n    y: 72.8,\\n  },\\n  {\\n    x: 174,\\n    y: 54.5,\\n  },\\n  {\\n    x: 173,\\n    y: 59.8,\\n  },\\n  {\\n    x: 179.9,\\n    y: 67.3,\\n  },\\n  {\\n    x: 170.5,\\n    y: 67.8,\\n  },\\n  {\\n    x: 160,\\n    y: 47,\\n  },\\n  {\\n    x: 154.4,\\n    y: 46.2,\\n  },\\n  {\\n    x: 162,\\n    y: 55,\\n  },\\n  {\\n    x: 176.5,\\n    y: 83,\\n  },\\n  {\\n    x: 160,\\n    y: 54.4,\\n  },\\n  {\\n    x: 152,\\n    y: 45.8,\\n  },\\n  {\\n    x: 162.1,\\n    y: 53.6,\\n  },\\n  {\\n    x: 170,\\n    y: 73.2,\\n  },\\n  {\\n    x: 160.2,\\n    y: 52.1,\\n  },\\n  {\\n    x: 161.3,\\n    y: 67.9,\\n  },\\n  {\\n    x: 166.4,\\n    y: 56.6,\\n  },\\n  {\\n    x: 168.9,\\n    y: 62.3,\\n  },\\n  {\\n    x: 163.8,\\n    y: 58.5,\\n  },\\n  {\\n    x: 167.6,\\n    y: 54.5,\\n  },\\n  {\\n    x: 160,\\n    y: 50.2,\\n  },\\n  {\\n    x: 161.3,\\n    y: 60.3,\\n  },\\n  {\\n    x: 167.6,\\n    y: 58.3,\\n  },\\n  {\\n    x: 165.1,\\n    y: 56.2,\\n  },\\n  {\\n    x: 160,\\n    y: 50.2,\\n  },\\n  {\\n    x: 170,\\n    y: 72.9,\\n  },\\n  {\\n    x: 157.5,\\n    y: 59.8,\\n  },\\n  {\\n    x: 167.6,\\n    y: 61,\\n  },\\n  {\\n    x: 160.7,\\n    y: 69.1,\\n  },\\n  {\\n    x: 163.2,\\n    y: 55.9,\\n  },\\n  {\\n    x: 152.4,\\n    y: 46.5,\\n  },\\n  {\\n    x: 157.5,\\n    y: 54.3,\\n  },\\n  {\\n    x: 168.3,\\n    y: 54.8,\\n  },\\n  {\\n    x: 180.3,\\n    y: 60.7,\\n  },\\n  {\\n    x: 165.5,\\n    y: 60,\\n  },\\n  {\\n    x: 165,\\n    y: 62,\\n  },\\n  {\\n    x: 164.5,\\n    y: 60.3,\\n  },\\n  {\\n    x: 156,\\n    y: 52.7,\\n  },\\n  {\\n    x: 160,\\n    y: 74.3,\\n  },\\n  {\\n    x: 163,\\n    y: 62,\\n  },\\n  {\\n    x: 165.7,\\n    y: 73.1,\\n  },\\n  {\\n    x: 161,\\n    y: 80,\\n  },\\n  {\\n    x: 162,\\n    y: 54.7,\\n  },\\n  {\\n    x: 166,\\n    y: 53.2,\\n  },\\n  {\\n    x: 174,\\n    y: 75.7,\\n  },\\n  {\\n    x: 172.7,\\n    y: 61.1,\\n  },\\n  {\\n    x: 167.6,\\n    y: 55.7,\\n  },\\n  {\\n    x: 151.1,\\n    y: 48.7,\\n  },\\n  {\\n    x: 164.5,\\n    y: 52.3,\\n  },\\n  {\\n    x: 163.5,\\n    y: 50,\\n  },\\n  {\\n    x: 152,\\n    y: 59.3,\\n  },\\n  {\\n    x: 169,\\n    y: 62.5,\\n  },\\n  {\\n    x: 164,\\n    y: 55.7,\\n  },\\n  {\\n    x: 161.2,\\n    y: 54.8,\\n  },\\n  {\\n    x: 155,\\n    y: 45.9,\\n  },\\n  {\\n    x: 170,\\n    y: 70.6,\\n  },\\n  {\\n    x: 176.2,\\n    y: 67.2,\\n  },\\n  {\\n    x: 170,\\n    y: 69.4,\\n  },\\n  {\\n    x: 162.5,\\n    y: 58.2,\\n  },\\n  {\\n    x: 170.3,\\n    y: 64.8,\\n  },\\n  {\\n    x: 164.1,\\n    y: 71.6,\\n  },\\n  {\\n    x: 169.5,\\n    y: 52.8,\\n  },\\n  {\\n    x: 163.2,\\n    y: 59.8,\\n  },\\n  {\\n    x: 154.5,\\n    y: 49,\\n  },\\n  {\\n    x: 159.8,\\n    y: 50,\\n  },\\n  {\\n    x: 173.2,\\n    y: 69.2,\\n  },\\n  {\\n    x: 170,\\n    y: 55.9,\\n  },\\n  {\\n    x: 161.4,\\n    y: 63.4,\\n  },\\n  {\\n    x: 169,\\n    y: 58.2,\\n  },\\n  {\\n    x: 166.2,\\n    y: 58.6,\\n  },\\n  {\\n    x: 159.4,\\n    y: 45.7,\\n  },\\n  {\\n    x: 162.5,\\n    y: 52.2,\\n  },\\n  {\\n    x: 159,\\n    y: 48.6,\\n  },\\n  {\\n    x: 162.8,\\n    y: 57.8,\\n  },\\n  {\\n    x: 159,\\n    y: 55.6,\\n  },\\n  {\\n    x: 179.8,\\n    y: 66.8,\\n  },\\n  {\\n    x: 162.9,\\n    y: 59.4,\\n  },\\n  {\\n    x: 161,\\n    y: 53.6,\\n  },\\n  {\\n    x: 151.1,\\n    y: 73.2,\\n  },\\n  {\\n    x: 168.2,\\n    y: 53.4,\\n  },\\n  {\\n    x: 168.9,\\n    y: 69,\\n  },\\n  {\\n    x: 173.2,\\n    y: 58.4,\\n  },\\n  {\\n    x: 171.8,\\n    y: 56.2,\\n  },\\n  {\\n    x: 178,\\n    y: 70.6,\\n  },\\n  {\\n    x: 164.3,\\n    y: 59.8,\\n  },\\n  {\\n    x: 163,\\n    y: 72,\\n  },\\n  {\\n    x: 168.5,\\n    y: 65.2,\\n  },\\n  {\\n    x: 166.8,\\n    y: 56.6,\\n  },\\n  {\\n    x: 172.7,\\n    y: 105.2,\\n  },\\n  {\\n    x: 163.5,\\n    y: 51.8,\\n  },\\n  {\\n    x: 169.4,\\n    y: 63.4,\\n  },\\n  {\\n    x: 167.8,\\n    y: 59,\\n  },\\n  {\\n    x: 159.5,\\n    y: 47.6,\\n  },\\n  {\\n    x: 167.6,\\n    y: 63,\\n  },\\n  {\\n    x: 161.2,\\n    y: 55.2,\\n  },\\n  {\\n    x: 160,\\n    y: 45,\\n  },\\n  {\\n    x: 163.2,\\n    y: 54,\\n  },\\n  {\\n    x: 162.2,\\n    y: 50.2,\\n  },\\n  {\\n    x: 161.3,\\n    y: 60.2,\\n  },\\n  {\\n    x: 149.5,\\n    y: 44.8,\\n  },\\n  {\\n    x: 157.5,\\n    y: 58.8,\\n  },\\n  {\\n    x: 163.2,\\n    y: 56.4,\\n  },\\n  {\\n    x: 172.7,\\n    y: 62,\\n  },\\n  {\\n    x: 155,\\n    y: 49.2,\\n  },\\n  {\\n    x: 156.5,\\n    y: 67.2,\\n  },\\n  {\\n    x: 164,\\n    y: 53.8,\\n  },\\n  {\\n    x: 160.9,\\n    y: 54.4,\\n  },\\n  {\\n    x: 162.8,\\n    y: 58,\\n  },\\n  {\\n    x: 167,\\n    y: 59.8,\\n  },\\n  {\\n    x: 160,\\n    y: 54.8,\\n  },\\n  {\\n    x: 160,\\n    y: 43.2,\\n  },\\n  {\\n    x: 168.9,\\n    y: 60.5,\\n  },\\n  {\\n    x: 158.2,\\n    y: 46.4,\\n  },\\n  {\\n    x: 156,\\n    y: 64.4,\\n  },\\n  {\\n    x: 160,\\n    y: 48.8,\\n  },\\n  {\\n    x: 167.1,\\n    y: 62.2,\\n  },\\n  {\\n    x: 158,\\n    y: 55.5,\\n  },\\n  {\\n    x: 167.6,\\n    y: 57.8,\\n  },\\n  {\\n    x: 156,\\n    y: 54.6,\\n  },\\n  {\\n    x: 162.1,\\n    y: 59.2,\\n  },\\n  {\\n    x: 173.4,\\n    y: 52.7,\\n  },\\n  {\\n    x: 159.8,\\n    y: 53.2,\\n  },\\n  {\\n    x: 170.5,\\n    y: 64.5,\\n  },\\n  {\\n    x: 159.2,\\n    y: 51.8,\\n  },\\n  {\\n    x: 157.5,\\n    y: 56,\\n  },\\n  {\\n    x: 161.3,\\n    y: 63.6,\\n  },\\n  {\\n    x: 162.6,\\n    y: 63.2,\\n  },\\n  {\\n    x: 160,\\n    y: 59.5,\\n  },\\n  {\\n    x: 168.9,\\n    y: 56.8,\\n  },\\n  {\\n    x: 165.1,\\n    y: 64.1,\\n  },\\n  {\\n    x: 162.6,\\n    y: 50,\\n  },\\n  {\\n    x: 165.1,\\n    y: 72.3,\\n  },\\n  {\\n    x: 166.4,\\n    y: 55,\\n  },\\n  {\\n    x: 160,\\n    y: 55.9,\\n  },\\n  {\\n    x: 152.4,\\n    y: 60.4,\\n  },\\n  {\\n    x: 170.2,\\n    y: 69.1,\\n  },\\n  {\\n    x: 162.6,\\n    y: 84.5,\\n  },\\n  {\\n    x: 170.2,\\n    y: 55.9,\\n  },\\n  {\\n    x: 158.8,\\n    y: 55.5,\\n  },\\n  {\\n    x: 172.7,\\n    y: 69.5,\\n  },\\n  {\\n    x: 167.6,\\n    y: 76.4,\\n  },\\n  {\\n    x: 162.6,\\n    y: 61.4,\\n  },\\n  {\\n    x: 167.6,\\n    y: 65.9,\\n  },\\n  {\\n    x: 156.2,\\n    y: 58.6,\\n  },\\n  {\\n    x: 175.2,\\n    y: 66.8,\\n  },\\n  {\\n    x: 172.1,\\n    y: 56.6,\\n  },\\n  {\\n    x: 162.6,\\n    y: 58.6,\\n  },\\n  {\\n    x: 160,\\n    y: 55.9,\\n  },\\n  {\\n    x: 165.1,\\n    y: 59.1,\\n  },\\n  {\\n    x: 182.9,\\n    y: 81.8,\\n  },\\n  {\\n    x: 166.4,\\n    y: 70.7,\\n  },\\n  {\\n    x: 165.1,\\n    y: 56.8,\\n  },\\n  {\\n    x: 177.8,\\n    y: 60,\\n  },\\n  {\\n    x: 165.1,\\n    y: 58.2,\\n  },\\n  {\\n    x: 175.3,\\n    y: 72.7,\\n  },\\n  {\\n    x: 154.9,\\n    y: 54.1,\\n  },\\n  {\\n    x: 158.8,\\n    y: 49.1,\\n  },\\n  {\\n    x: 172.7,\\n    y: 75.9,\\n  },\\n  {\\n    x: 168.9,\\n    y: 55,\\n  },\\n  {\\n    x: 161.3,\\n    y: 57.3,\\n  },\\n  {\\n    x: 167.6,\\n    y: 55,\\n  },\\n  {\\n    x: 165.1,\\n    y: 65.5,\\n  },\\n  {\\n    x: 175.3,\\n    y: 65.5,\\n  },\\n  {\\n    x: 157.5,\\n    y: 48.6,\\n  },\\n  {\\n    x: 163.8,\\n    y: 58.6,\\n  },\\n  {\\n    x: 167.6,\\n    y: 63.6,\\n  },\\n  {\\n    x: 165.1,\\n    y: 55.2,\\n  },\\n  {\\n    x: 165.1,\\n    y: 62.7,\\n  },\\n  {\\n    x: 168.9,\\n    y: 56.6,\\n  },\\n  {\\n    x: 162.6,\\n    y: 53.9,\\n  },\\n  {\\n    x: 164.5,\\n    y: 63.2,\\n  },\\n  {\\n    x: 176.5,\\n    y: 73.6,\\n  },\\n  {\\n    x: 168.9,\\n    y: 62,\\n  },\\n  {\\n    x: 175.3,\\n    y: 63.6,\\n  },\\n  {\\n    x: 159.4,\\n    y: 53.2,\\n  },\\n  {\\n    x: 160,\\n    y: 53.4,\\n  },\\n  {\\n    x: 170.2,\\n    y: 55,\\n  },\\n  {\\n    x: 162.6,\\n    y: 70.5,\\n  },\\n  {\\n    x: 167.6,\\n    y: 54.5,\\n  },\\n  {\\n    x: 162.6,\\n    y: 54.5,\\n  },\\n  {\\n    x: 160.7,\\n    y: 55.9,\\n  },\\n  {\\n    x: 160,\\n    y: 59,\\n  },\\n  {\\n    x: 157.5,\\n    y: 63.6,\\n  },\\n  {\\n    x: 162.6,\\n    y: 54.5,\\n  },\\n  {\\n    x: 152.4,\\n    y: 47.3,\\n  },\\n  {\\n    x: 170.2,\\n    y: 67.7,\\n  },\\n  {\\n    x: 165.1,\\n    y: 80.9,\\n  },\\n  {\\n    x: 172.7,\\n    y: 70.5,\\n  },\\n  {\\n    x: 165.1,\\n    y: 60.9,\\n  },\\n  {\\n    x: 170.2,\\n    y: 63.6,\\n  },\\n  {\\n    x: 170.2,\\n    y: 54.5,\\n  },\\n  {\\n    x: 170.2,\\n    y: 59.1,\\n  },\\n  {\\n    x: 161.3,\\n    y: 70.5,\\n  },\\n  {\\n    x: 167.6,\\n    y: 52.7,\\n  },\\n  {\\n    x: 167.6,\\n    y: 62.7,\\n  },\\n  {\\n    x: 165.1,\\n    y: 86.3,\\n  },\\n  {\\n    x: 162.6,\\n    y: 66.4,\\n  },\\n  {\\n    x: 152.4,\\n    y: 67.3,\\n  },\\n  {\\n    x: 168.9,\\n    y: 63,\\n  },\\n  {\\n    x: 170.2,\\n    y: 73.6,\\n  },\\n  {\\n    x: 175.2,\\n    y: 62.3,\\n  },\\n  {\\n    x: 175.2,\\n    y: 57.7,\\n  },\\n  {\\n    x: 160,\\n    y: 55.4,\\n  },\\n  {\\n    x: 165.1,\\n    y: 104.1,\\n  },\\n  {\\n    x: 174,\\n    y: 55.5,\\n  },\\n  {\\n    x: 170.2,\\n    y: 77.3,\\n  },\\n  {\\n    x: 160,\\n    y: 80.5,\\n  },\\n  {\\n    x: 167.6,\\n    y: 64.5,\\n  },\\n  {\\n    x: 167.6,\\n    y: 72.3,\\n  },\\n  {\\n    x: 167.6,\\n    y: 61.4,\\n  },\\n  {\\n    x: 154.9,\\n    y: 58.2,\\n  },\\n  {\\n    x: 162.6,\\n    y: 81.8,\\n  },\\n  {\\n    x: 175.3,\\n    y: 63.6,\\n  },\\n  {\\n    x: 171.4,\\n    y: 53.4,\\n  },\\n  {\\n    x: 157.5,\\n    y: 54.5,\\n  },\\n  {\\n    x: 165.1,\\n    y: 53.6,\\n  },\\n  {\\n    x: 160,\\n    y: 60,\\n  },\\n  {\\n    x: 174,\\n    y: 73.6,\\n  },\\n  {\\n    x: 162.6,\\n    y: 61.4,\\n  },\\n  {\\n    x: 174,\\n    y: 55.5,\\n  },\\n  {\\n    x: 162.6,\\n    y: 63.6,\\n  },\\n  {\\n    x: 161.3,\\n    y: 60.9,\\n  },\\n  {\\n    x: 156.2,\\n    y: 60,\\n  },\\n  {\\n    x: 149.9,\\n    y: 46.8,\\n  },\\n  {\\n    x: 169.5,\\n    y: 57.3,\\n  },\\n  {\\n    x: 160,\\n    y: 64.1,\\n  },\\n  {\\n    x: 175.3,\\n    y: 63.6,\\n  },\\n  {\\n    x: 169.5,\\n    y: 67.3,\\n  },\\n  {\\n    x: 160,\\n    y: 75.5,\\n  },\\n  {\\n    x: 172.7,\\n    y: 68.2,\\n  },\\n  {\\n    x: 162.6,\\n    y: 61.4,\\n  },\\n  {\\n    x: 157.5,\\n    y: 76.8,\\n  },\\n  {\\n    x: 176.5,\\n    y: 71.8,\\n  },\\n  {\\n    x: 164.4,\\n    y: 55.5,\\n  },\\n  {\\n    x: 160.7,\\n    y: 48.6,\\n  },\\n  {\\n    x: 174,\\n    y: 66.4,\\n  },\\n  {\\n    x: 163.8,\\n    y: 67.3,\\n  },\\n  {\\n    x: 174,\\n    y: 65.6,\\n  },\\n  {\\n    x: 175.3,\\n    y: 71.8,\\n  },\\n  {\\n    x: 193.5,\\n    y: 80.7,\\n  },\\n  {\\n    x: 186.5,\\n    y: 72.6,\\n  },\\n  {\\n    x: 187.2,\\n    y: 78.8,\\n  },\\n  {\\n    x: 181.5,\\n    y: 74.8,\\n  },\\n  {\\n    x: 184,\\n    y: 86.4,\\n  },\\n  {\\n    x: 184.5,\\n    y: 78.4,\\n  },\\n  {\\n    x: 175,\\n    y: 62,\\n  },\\n  {\\n    x: 184,\\n    y: 81.6,\\n  },\\n  {\\n    x: 180,\\n    y: 76.6,\\n  },\\n  {\\n    x: 177.8,\\n    y: 83.6,\\n  },\\n  {\\n    x: 192,\\n    y: 90,\\n  },\\n  {\\n    x: 176,\\n    y: 74.6,\\n  },\\n  {\\n    x: 174,\\n    y: 71,\\n  },\\n  {\\n    x: 184,\\n    y: 79.6,\\n  },\\n  {\\n    x: 192.7,\\n    y: 93.8,\\n  },\\n  {\\n    x: 171.5,\\n    y: 70,\\n  },\\n  {\\n    x: 173,\\n    y: 72.4,\\n  },\\n  {\\n    x: 176,\\n    y: 85.9,\\n  },\\n  {\\n    x: 176,\\n    y: 78.8,\\n  },\\n  {\\n    x: 180.5,\\n    y: 77.8,\\n  },\\n  {\\n    x: 172.7,\\n    y: 66.2,\\n  },\\n  {\\n    x: 176,\\n    y: 86.4,\\n  },\\n  {\\n    x: 173.5,\\n    y: 81.8,\\n  },\\n  {\\n    x: 178,\\n    y: 89.6,\\n  },\\n  {\\n    x: 180.3,\\n    y: 82.8,\\n  },\\n  {\\n    x: 180.3,\\n    y: 76.4,\\n  },\\n  {\\n    x: 164.5,\\n    y: 63.2,\\n  },\\n  {\\n    x: 173,\\n    y: 60.9,\\n  },\\n  {\\n    x: 183.5,\\n    y: 74.8,\\n  },\\n  {\\n    x: 175.5,\\n    y: 70,\\n  },\\n  {\\n    x: 188,\\n    y: 72.4,\\n  },\\n  {\\n    x: 189.2,\\n    y: 84.1,\\n  },\\n  {\\n    x: 172.8,\\n    y: 69.1,\\n  },\\n  {\\n    x: 170,\\n    y: 59.5,\\n  },\\n  {\\n    x: 182,\\n    y: 67.2,\\n  },\\n  {\\n    x: 170,\\n    y: 61.3,\\n  },\\n  {\\n    x: 177.8,\\n    y: 68.6,\\n  },\\n  {\\n    x: 184.2,\\n    y: 80.1,\\n  },\\n  {\\n    x: 186.7,\\n    y: 87.8,\\n  },\\n  {\\n    x: 171.4,\\n    y: 84.7,\\n  },\\n  {\\n    x: 172.7,\\n    y: 73.4,\\n  },\\n  {\\n    x: 175.3,\\n    y: 72.1,\\n  },\\n  {\\n    x: 180.3,\\n    y: 82.6,\\n  },\\n  {\\n    x: 182.9,\\n    y: 88.7,\\n  },\\n  {\\n    x: 188,\\n    y: 84.1,\\n  },\\n  {\\n    x: 177.2,\\n    y: 94.1,\\n  },\\n  {\\n    x: 172.1,\\n    y: 74.9,\\n  },\\n  {\\n    x: 167,\\n    y: 59.1,\\n  },\\n  {\\n    x: 169.5,\\n    y: 75.6,\\n  },\\n  {\\n    x: 174,\\n    y: 86.2,\\n  },\\n  {\\n    x: 172.7,\\n    y: 75.3,\\n  },\\n  {\\n    x: 182.2,\\n    y: 87.1,\\n  },\\n  {\\n    x: 164.1,\\n    y: 55.2,\\n  },\\n  {\\n    x: 163,\\n    y: 57,\\n  },\\n  {\\n    x: 171.5,\\n    y: 61.4,\\n  },\\n  {\\n    x: 184.2,\\n    y: 76.8,\\n  },\\n  {\\n    x: 174,\\n    y: 86.8,\\n  },\\n  {\\n    x: 174,\\n    y: 72.2,\\n  },\\n  {\\n    x: 177,\\n    y: 71.6,\\n  },\\n  {\\n    x: 186,\\n    y: 84.8,\\n  },\\n  {\\n    x: 167,\\n    y: 68.2,\\n  },\\n  {\\n    x: 171.8,\\n    y: 66.1,\\n  },\\n  {\\n    x: 182,\\n    y: 72,\\n  },\\n  {\\n    x: 167,\\n    y: 64.6,\\n  },\\n  {\\n    x: 177.8,\\n    y: 74.8,\\n  },\\n  {\\n    x: 164.5,\\n    y: 70,\\n  },\\n  {\\n    x: 192,\\n    y: 101.6,\\n  },\\n  {\\n    x: 175.5,\\n    y: 63.2,\\n  },\\n  {\\n    x: 171.2,\\n    y: 79.1,\\n  },\\n  {\\n    x: 181.6,\\n    y: 78.9,\\n  },\\n  {\\n    x: 167.4,\\n    y: 67.7,\\n  },\\n  {\\n    x: 181.1,\\n    y: 66,\\n  },\\n  {\\n    x: 177,\\n    y: 68.2,\\n  },\\n  {\\n    x: 174.5,\\n    y: 63.9,\\n  },\\n  {\\n    x: 177.5,\\n    y: 72,\\n  },\\n  {\\n    x: 170.5,\\n    y: 56.8,\\n  },\\n  {\\n    x: 182.4,\\n    y: 74.5,\\n  },\\n  {\\n    x: 197.1,\\n    y: 90.9,\\n  },\\n  {\\n    x: 180.1,\\n    y: 93,\\n  },\\n  {\\n    x: 175.5,\\n    y: 80.9,\\n  },\\n  {\\n    x: 180.6,\\n    y: 72.7,\\n  },\\n  {\\n    x: 184.4,\\n    y: 68,\\n  },\\n  {\\n    x: 175.5,\\n    y: 70.9,\\n  },\\n  {\\n    x: 180.6,\\n    y: 72.5,\\n  },\\n  {\\n    x: 177,\\n    y: 72.5,\\n  },\\n  {\\n    x: 177.1,\\n    y: 83.4,\\n  },\\n  {\\n    x: 181.6,\\n    y: 75.5,\\n  },\\n  {\\n    x: 176.5,\\n    y: 73,\\n  },\\n  {\\n    x: 175,\\n    y: 70.2,\\n  },\\n  {\\n    x: 174,\\n    y: 73.4,\\n  },\\n  {\\n    x: 165.1,\\n    y: 70.5,\\n  },\\n  {\\n    x: 177,\\n    y: 68.9,\\n  },\\n  {\\n    x: 192,\\n    y: 102.3,\\n  },\\n  {\\n    x: 176.5,\\n    y: 68.4,\\n  },\\n  {\\n    x: 169.4,\\n    y: 65.9,\\n  },\\n  {\\n    x: 182.1,\\n    y: 75.7,\\n  },\\n  {\\n    x: 179.8,\\n    y: 84.5,\\n  },\\n  {\\n    x: 175.3,\\n    y: 87.7,\\n  },\\n  {\\n    x: 184.9,\\n    y: 86.4,\\n  },\\n  {\\n    x: 177.3,\\n    y: 73.2,\\n  },\\n  {\\n    x: 167.4,\\n    y: 53.9,\\n  },\\n  {\\n    x: 178.1,\\n    y: 72,\\n  },\\n  {\\n    x: 168.9,\\n    y: 55.5,\\n  },\\n  {\\n    x: 157.2,\\n    y: 58.4,\\n  },\\n  {\\n    x: 180.3,\\n    y: 83.2,\\n  },\\n  {\\n    x: 170.2,\\n    y: 72.7,\\n  },\\n  {\\n    x: 177.8,\\n    y: 64.1,\\n  },\\n  {\\n    x: 172.7,\\n    y: 72.3,\\n  },\\n  {\\n    x: 165.1,\\n    y: 65,\\n  },\\n  {\\n    x: 186.7,\\n    y: 86.4,\\n  },\\n  {\\n    x: 165.1,\\n    y: 65,\\n  },\\n  {\\n    x: 174,\\n    y: 88.6,\\n  },\\n  {\\n    x: 175.3,\\n    y: 84.1,\\n  },\\n  {\\n    x: 185.4,\\n    y: 66.8,\\n  },\\n  {\\n    x: 177.8,\\n    y: 75.5,\\n  },\\n  {\\n    x: 180.3,\\n    y: 93.2,\\n  },\\n  {\\n    x: 180.3,\\n    y: 82.7,\\n  },\\n  {\\n    x: 177.8,\\n    y: 58,\\n  },\\n  {\\n    x: 177.8,\\n    y: 79.5,\\n  },\\n  {\\n    x: 177.8,\\n    y: 78.6,\\n  },\\n  {\\n    x: 177.8,\\n    y: 71.8,\\n  },\\n  {\\n    x: 177.8,\\n    y: 116.4,\\n  },\\n  {\\n    x: 163.8,\\n    y: 72.2,\\n  },\\n  {\\n    x: 188,\\n    y: 83.6,\\n  },\\n  {\\n    x: 198.1,\\n    y: 85.5,\\n  },\\n  {\\n    x: 175.3,\\n    y: 90.9,\\n  },\\n  {\\n    x: 166.4,\\n    y: 85.9,\\n  },\\n  {\\n    x: 190.5,\\n    y: 89.1,\\n  },\\n  {\\n    x: 166.4,\\n    y: 75,\\n  },\\n  {\\n    x: 177.8,\\n    y: 77.7,\\n  },\\n  {\\n    x: 179.7,\\n    y: 86.4,\\n  },\\n  {\\n    x: 172.7,\\n    y: 90.9,\\n  },\\n  {\\n    x: 190.5,\\n    y: 73.6,\\n  },\\n  {\\n    x: 185.4,\\n    y: 76.4,\\n  },\\n  {\\n    x: 168.9,\\n    y: 69.1,\\n  },\\n  {\\n    x: 167.6,\\n    y: 84.5,\\n  },\\n  {\\n    x: 175.3,\\n    y: 64.5,\\n  },\\n  {\\n    x: 170.2,\\n    y: 69.1,\\n  },\\n  {\\n    x: 190.5,\\n    y: 108.6,\\n  },\\n  {\\n    x: 177.8,\\n    y: 86.4,\\n  },\\n  {\\n    x: 190.5,\\n    y: 80.9,\\n  },\\n  {\\n    x: 177.8,\\n    y: 87.7,\\n  },\\n  {\\n    x: 184.2,\\n    y: 94.5,\\n  },\\n  {\\n    x: 176.5,\\n    y: 80.2,\\n  },\\n  {\\n    x: 177.8,\\n    y: 72,\\n  },\\n  {\\n    x: 180.3,\\n    y: 71.4,\\n  },\\n  {\\n    x: 171.4,\\n    y: 72.7,\\n  },\\n  {\\n    x: 172.7,\\n    y: 84.1,\\n  },\\n  {\\n    x: 172.7,\\n    y: 76.8,\\n  },\\n  {\\n    x: 177.8,\\n    y: 63.6,\\n  },\\n  {\\n    x: 177.8,\\n    y: 80.9,\\n  },\\n  {\\n    x: 182.9,\\n    y: 80.9,\\n  },\\n  {\\n    x: 170.2,\\n    y: 85.5,\\n  },\\n  {\\n    x: 167.6,\\n    y: 68.6,\\n  },\\n  {\\n    x: 175.3,\\n    y: 67.7,\\n  },\\n  {\\n    x: 165.1,\\n    y: 66.4,\\n  },\\n  {\\n    x: 185.4,\\n    y: 102.3,\\n  },\\n  {\\n    x: 181.6,\\n    y: 70.5,\\n  },\\n  {\\n    x: 172.7,\\n    y: 95.9,\\n  },\\n  {\\n    x: 190.5,\\n    y: 84.1,\\n  },\\n  {\\n    x: 179.1,\\n    y: 87.3,\\n  },\\n  {\\n    x: 175.3,\\n    y: 71.8,\\n  },\\n  {\\n    x: 170.2,\\n    y: 65.9,\\n  },\\n  {\\n    x: 193,\\n    y: 95.9,\\n  },\\n  {\\n    x: 171.4,\\n    y: 91.4,\\n  },\\n  {\\n    x: 177.8,\\n    y: 81.8,\\n  },\\n  {\\n    x: 177.8,\\n    y: 96.8,\\n  },\\n  {\\n    x: 167.6,\\n    y: 69.1,\\n  },\\n  {\\n    x: 167.6,\\n    y: 82.7,\\n  },\\n  {\\n    x: 180.3,\\n    y: 75.5,\\n  },\\n  {\\n    x: 182.9,\\n    y: 79.5,\\n  },\\n  {\\n    x: 176.5,\\n    y: 73.6,\\n  },\\n  {\\n    x: 186.7,\\n    y: 91.8,\\n  },\\n  {\\n    x: 188,\\n    y: 84.1,\\n  },\\n  {\\n    x: 188,\\n    y: 85.9,\\n  },\\n  {\\n    x: 177.8,\\n    y: 81.8,\\n  },\\n  {\\n    x: 174,\\n    y: 82.5,\\n  },\\n  {\\n    x: 177.8,\\n    y: 80.5,\\n  },\\n  {\\n    x: 171.4,\\n    y: 70,\\n  },\\n  {\\n    x: 185.4,\\n    y: 81.8,\\n  },\\n  {\\n    x: 185.4,\\n    y: 84.1,\\n  },\\n  {\\n    x: 188,\\n    y: 90.5,\\n  },\\n  {\\n    x: 188,\\n    y: 91.4,\\n  },\\n  {\\n    x: 182.9,\\n    y: 89.1,\\n  },\\n  {\\n    x: 176.5,\\n    y: 85,\\n  },\\n  {\\n    x: 175.3,\\n    y: 69.1,\\n  },\\n  {\\n    x: 175.3,\\n    y: 73.6,\\n  },\\n  {\\n    x: 188,\\n    y: 80.5,\\n  },\\n  {\\n    x: 188,\\n    y: 82.7,\\n  },\\n  {\\n    x: 175.3,\\n    y: 86.4,\\n  },\\n  {\\n    x: 170.5,\\n    y: 67.7,\\n  },\\n  {\\n    x: 179.1,\\n    y: 92.7,\\n  },\\n  {\\n    x: 177.8,\\n    y: 93.6,\\n  },\\n  {\\n    x: 175.3,\\n    y: 70.9,\\n  },\\n  {\\n    x: 182.9,\\n    y: 75,\\n  },\\n  {\\n    x: 170.8,\\n    y: 93.2,\\n  },\\n  {\\n    x: 188,\\n    y: 93.2,\\n  },\\n  {\\n    x: 180.3,\\n    y: 77.7,\\n  },\\n  {\\n    x: 177.8,\\n    y: 61.4,\\n  },\\n  {\\n    x: 185.4,\\n    y: 94.1,\\n  },\\n  {\\n    x: 168.9,\\n    y: 75,\\n  },\\n  {\\n    x: 185.4,\\n    y: 83.6,\\n  },\\n  {\\n    x: 180.3,\\n    y: 85.5,\\n  },\\n  {\\n    x: 174,\\n    y: 73.9,\\n  },\\n  {\\n    x: 167.6,\\n    y: 66.8,\\n  },\\n  {\\n    x: 182.9,\\n    y: 87.3,\\n  },\\n  {\\n    x: 160,\\n    y: 72.3,\\n  },\\n  {\\n    x: 180.3,\\n    y: 88.6,\\n  },\\n  {\\n    x: 167.6,\\n    y: 75.5,\\n  },\\n  {\\n    x: 186.7,\\n    y: 101.4,\\n  },\\n  {\\n    x: 175.3,\\n    y: 91.1,\\n  },\\n  {\\n    x: 175.3,\\n    y: 67.3,\\n  },\\n  {\\n    x: 175.9,\\n    y: 77.7,\\n  },\\n  {\\n    x: 175.3,\\n    y: 81.8,\\n  },\\n  {\\n    x: 179.1,\\n    y: 75.5,\\n  },\\n  {\\n    x: 181.6,\\n    y: 84.5,\\n  },\\n  {\\n    x: 177.8,\\n    y: 76.6,\\n  },\\n  {\\n    x: 182.9,\\n    y: 85,\\n  },\\n  {\\n    x: 177.8,\\n    y: 102.5,\\n  },\\n  {\\n    x: 184.2,\\n    y: 77.3,\\n  },\\n  {\\n    x: 179.1,\\n    y: 71.8,\\n  },\\n  {\\n    x: 176.5,\\n    y: 87.9,\\n  },\\n  {\\n    x: 188,\\n    y: 94.3,\\n  },\\n  {\\n    x: 174,\\n    y: 70.9,\\n  },\\n  {\\n    x: 167.6,\\n    y: 64.5,\\n  },\\n  {\\n    x: 170.2,\\n    y: 77.3,\\n  },\\n  {\\n    x: 167.6,\\n    y: 72.3,\\n  },\\n  {\\n    x: 188,\\n    y: 87.3,\\n  },\\n  {\\n    x: 174,\\n    y: 80,\\n  },\\n  {\\n    x: 176.5,\\n    y: 82.3,\\n  },\\n  {\\n    x: 180.3,\\n    y: 73.6,\\n  },\\n  {\\n    x: 167.6,\\n    y: 74.1,\\n  },\\n  {\\n    x: 188,\\n    y: 85.9,\\n  },\\n  {\\n    x: 180.3,\\n    y: 73.2,\\n  },\\n  {\\n    x: 167.6,\\n    y: 76.3,\\n  },\\n  {\\n    x: 183,\\n    y: 65.9,\\n  },\\n  {\\n    x: 183,\\n    y: 90.9,\\n  },\\n  {\\n    x: 179.1,\\n    y: 89.1,\\n  },\\n  {\\n    x: 170.2,\\n    y: 62.3,\\n  },\\n  {\\n    x: 177.8,\\n    y: 82.7,\\n  },\\n  {\\n    x: 179.1,\\n    y: 79.1,\\n  },\\n  {\\n    x: 190.5,\\n    y: 98.2,\\n  },\\n  {\\n    x: 177.8,\\n    y: 84.1,\\n  },\\n  {\\n    x: 180.3,\\n    y: 83.2,\\n  },\\n  {\\n    x: 180.3,\\n    y: 83.2,\\n  },\\n];\\n\\nexport default () => {\\n  return (\\n    <Scatter\\n      data={data}\\n      axisXTitle=\\\"身高\\\"\\n      axisYTitle=\\\"体重（KG）\\\"\\n      containerStyle={{ height: 300 }}\\n    />\\n  );\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/PinMap/demos/default.tsx?watch=parent';\n  export default \"import { PinMap } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nexport default () => {\\n  const data = [\\n    {\\n      label: '石屋洞',\\n      longitude: 120.130638,\\n      latitude: 30.219835,\\n      cityname: '杭州市',\\n    },\\n    {\\n      label: '满觉陇',\\n      longitude: 120.128125,\\n      latitude: 30.219386,\\n    },\\n    { label: '杨梅岭', longitude: 120.118362, latitude: 30.217175 },\\n    { label: '理安寺', longitude: 120.112958, latitude: 30.207319 },\\n    { label: '九溪烟树', longitude: 120.11335, latitude: 30.202395 },\\n    { label: '飞来峰', longitude: 120.100549, latitude: 30.236875 },\\n    { label: '灵隐寺', longitude: 120.101406, latitude: 30.240826 },\\n    { label: '天竺三寺', longitude: 120.105337, latitude: 30.236818 },\\n    { label: '杭州植物园', longitude: 120.116979, latitude: 30.252876 },\\n    { label: '杭州花圃', longitude: 120.127654, latitude: 30.245663 },\\n    { label: '苏堤', longitude: 120.135764, latitude: 30.251448 },\\n    { label: '虎跑公园', longitude: 120.130095, latitude: 30.207505 },\\n    { label: '玉皇飞云', longitude: 120.145323, latitude: 30.214993 },\\n    { label: '长桥公园', longitude: 120.155057, latitude: 30.232985 },\\n  ];\\n\\n  return <PinMap data={data} mapType=\\\"amap://styles/2acc71263b1344d93a902db8df1c8b68\\\" />;\\n};\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/guide/demos/custom-ui.tsx?watch=parent';\n  export default \"import { Bubble } from '@ant-design/x';\\nimport { GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\nimport WeatherCard from './WeatherCard';\\n\\nconst markdownContent = `\\n\\\\`\\\\`\\\\`weather\\n{\\n  \\\"locationName\\\": \\\"Hangzhou\\\",\\n  \\\"temperature\\\": 11.4,\\n  \\\"humidity\\\": 82,\\n  \\\"wind\\\": 6.8,\\n  \\\"cloudiness\\\": 75,\\n  \\\"uv\\\": \\\"0.2 of 11\\\"\\n}\\n\\\\`\\\\`\\\\`\\n\\nIn Hangzhou, the current weather is as follows:\\n- The temperature is 11.4°C, humidity is 82%, and wind speed is 6.8 kph.\\n- There's 75% cloud cover, and the UV index is very low at 0.2 out of 11.\\n- This indicates cool, humid conditions with overcast skies and minimal UV exposure.\\n`;\\n\\nconst customRenderers = {\\n  weather: WeatherCard,\\n};\\nconst components = {\\n  code: withChartCode({\\n    // register custom block renderer\\n    languageRenderers: customRenderers,\\n  }),\\n};\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nexport default () => {\\n  return (\\n    <div style={bgStyle}>\\n      <Bubble placement=\\\"end\\\" content=\\\"How is the weather today?\\\" />\\n      <Bubble content={<GPTVisLite components={components}>{markdownContent}</GPTVisLite>} />\\n    </div>\\n  );\\n};\\n\";;\n  ","import { get } from 'lodash';\n\nconst ADC_ENCODE_FIELDS = new Map([\n  ['x', 'xField'],\n  ['y', 'yField'],\n  ['series', 'seriesField'],\n  ['size', 'sizeField'],\n  ['color', 'colorField'],\n  ['shape', 'shapeField'],\n  ['y', 'angleField'],\n]);\n\n/**\n * 将 G2 encode 写法转换为 ADC Plot 字段映射\n */\nfunction visG2Encode2ADCEncode<T extends Record<string, any>>(config: T) {\n  const encodeConfig = config.encode;\n  if (!encodeConfig) return config;\n\n  const _config = { ...config };\n  for (const field of encodeConfig) {\n    const adcField = ADC_ENCODE_FIELDS.get(field);\n    if (adcField) {\n      // @ts-expect-error\n      _config[adcField] = encodeConfig[field];\n    }\n  }\n\n  return _config;\n}\n\n/**\n * 将缩写的 axisTitle 转换为 G2 axis 配置\n */\nfunction axisTitle2G2axis<T extends Record<string, any>>(config: T) {\n  const { axisXTitle, axisYTitle } = config;\n  const _config: T = { axis: {}, ...config };\n\n  if (axisXTitle) {\n    if (get(_config, 'axis.x')) {\n      _config.axis.x.title = axisXTitle;\n    } else {\n      _config.axis.x = { title: axisXTitle };\n    }\n  }\n\n  if (axisYTitle) {\n    if (get(_config, 'axis.y')) {\n      _config.axis.y.title = axisYTitle;\n    } else {\n      _config.axis.y = { title: axisYTitle };\n    }\n  }\n\n  return _config;\n}\n\n/**\n * 将 GPT-Vis 图表的配置转换为 ADC 的配置\n */\nexport function transform2ADCProps<T extends Record<string, any>>(props: T) {\n  const transformedEncode = visG2Encode2ADCEncode(props);\n  const transformedAxis = axisTitle2G2axis(transformedEncode);\n\n  return transformedAxis;\n}\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Line/demos/common.tsx?watch=parent';\n  export default \"import { Line } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = [\\n  { time: '1991', value: 3 },\\n  { time: '1992', value: 4 },\\n  { time: '1993', value: 3.5 },\\n  { time: '1994', value: 5 },\\n  { time: '1995', value: 4.9 },\\n  { time: '1996', value: 6 },\\n  { time: '1997', value: 7 },\\n  { time: '1998', value: 9 },\\n  { time: '1999', value: 13 },\\n];\\n\\nexport default () => {\\n  return (\\n    <Line data={data} axisXTitle=\\\"year\\\" axisYTitle=\\\"growth\\\" containerStyle={{ height: 300 }} />\\n  );\\n};\\n\";;\n  ","import type { LineConfig } from '@ant-design/plots';\nimport { Line as ADCLine } from '@ant-design/plots';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { usePlotConfig } from '../ConfigProvider/hooks';\nimport type { BasePlotProps } from '../types';\n\nexport type LineDataItem = {\n  time: string | number;\n  value: number;\n  [key: string]: string | number;\n};\n\nexport type LineProps = BasePlotProps<LineDataItem> & Partial<LineConfig>;\n\nconst defaultConfig = (props: LineConfig): LineConfig => {\n  const { data, xField = 'time', yField = 'value' } = props;\n  const hasGroupField = get(data, '[0].group') !== undefined;\n  const axisYTitle = get(props, 'axis.y.title');\n\n  return {\n    xField,\n    yField,\n    colorField: hasGroupField ? 'group' : undefined,\n    tooltip: (d) => {\n      const tooltipName = axisYTitle || d[xField as string];\n      return {\n        name: tooltipName,\n        value: d[yField as string],\n      };\n    },\n  };\n};\n\nconst Line = (props: LineProps) => {\n  const config = usePlotConfig<LineConfig>('Line', defaultConfig, props);\n\n  return <ADCLine {...config} />;\n};\n\nexport default Line;\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/NetworkGraph/demos/common.tsx?watch=parent';\n  export default \"import { NetworkGraph } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = {\\n  nodes: [\\n    { name: '哈利·波特' },\\n    { name: '赫敏·格兰杰' },\\n    { name: '罗恩·韦斯莱' },\\n    { name: '伏地魔' },\\n  ],\\n  edges: [\\n    { source: '哈利·波特', target: '赫敏·格兰杰', name: '朋友' },\\n    { source: '哈利·波特', target: '罗恩·韦斯莱', name: '朋友' },\\n    { source: '哈利·波特', target: '伏地魔', name: '敌人' },\\n    { source: '伏地魔', target: '哈利·波特', name: '试图杀死' },\\n  ],\\n};\\n\\nexport default () => <NetworkGraph data={data} containerStyle={{ height: 300 }} />;\\n\";;\n  ","import type { ILayer } from '@antv/l7';\nimport { useScene } from '@antv/larkmap';\nimport { useEffect, useState } from 'react';\nimport type { Map } from '../../types/map';\nimport { setMapContext, setMarkers } from '../../utils/map';\n// 渲染标记点\nexport default (props: Map) => {\n  const scene = useScene();\n  const [layers, setLayers] = useState<ILayer[]>([]);\n  const removeLayers = () => {\n    layers.forEach((item) => {\n      scene.removeLayer(item);\n    });\n  };\n  useEffect(() => {\n    if (!props.markers) return;\n    // 异步调用\n    setMapContext(props, scene)?.then(() => {\n      // 初始化资源\n      const markerLayer = setMarkers(props.markers || []);\n      removeLayers();\n      markerLayer.forEach((item) => {\n        scene.addLayer(item);\n      });\n      setLayers(markerLayer);\n    });\n    return () => {\n      removeLayers();\n    };\n  }, [props.markers]);\n\n  return null;\n};\n","import type { FlowGraphOptions, G6 } from '@ant-design/graphs';\n\n/**\n * Adjust graph configuration based on data characteristics.\n * @param data - graph data\n * @returns graph options\n */\nexport function getGraphOptionsByData(data: G6.GraphData): FlowGraphOptions {\n  if (isLinearStructure(data))\n    return {\n      node: {\n        style: {\n          ports: [\n            { placement: 'right' },\n            { placement: 'left' },\n            { placement: 'top' },\n            { placement: 'bottom' },\n          ],\n        },\n      },\n      layout: {\n        type: 'snake',\n        cols: 3,\n        rowGap: 40,\n      },\n    };\n  return {};\n}\n\nfunction isLinearStructure(data: G6.GraphData) {\n  const { nodes = [], edges = [] } = data;\n  const inDegree: { [key: G6.ID]: number } = {};\n  const outDegree: { [key: G6.ID]: number } = {};\n  const adjList: { [key: G6.ID]: G6.ID[] } = {};\n\n  nodes.forEach((node) => {\n    inDegree[node.id] = 0;\n    outDegree[node.id] = 0;\n    adjList[node.id] = [];\n  });\n\n  edges.forEach((edge) => {\n    inDegree[edge.target]++;\n    outDegree[edge.source]++;\n    adjList[edge.source].push(edge.target);\n  });\n\n  // 检查图是否连通\n  // Check if the graph is connected\n  const visited: Set<G6.ID> = new Set();\n  const dfs = (nodeId: G6.ID) => {\n    if (visited.has(nodeId)) return;\n    visited.add(nodeId);\n    adjList[nodeId].forEach(dfs);\n  };\n  dfs(nodes[0].id);\n  if (visited.size !== nodes.length) return false;\n\n  // 检查是否有且仅有一个源节点和一个汇节点\n  // Check if there is exactly one source node and one sink node\n  const sourceNodes = nodes.filter((node) => inDegree[node.id] === 0);\n  const sinkNodes = nodes.filter((node) => outDegree[node.id] === 0);\n  if (sourceNodes.length !== 1 || sinkNodes.length !== 1) return false;\n\n  // 检查中间节点是否只有一个前驱和一个后继\n  // Check if the middle nodes have only one predecessor and one successor\n  const middleNodes = nodes.filter((node) => inDegree[node.id] === 1 && outDegree[node.id] === 1);\n  if (middleNodes.length !== nodes.length - 2) return false;\n\n  return true;\n}\n","export type Domain = [number, number];\nexport type Range = [number, number];\n\nexport type Scale = (n: number) => number;\n\nexport const scaleLinear =\n  (domain: Domain, range: Range): Scale =>\n  (n) => {\n    const [d1, d2] = domain;\n    const [r1, r2] = range;\n    // Returns the intermediate value when the range is zero.\n    if (r1 === r2) return (d2 - d1) / 2;\n    return (n / (r2 - r1)) * (d2 - d1);\n  };\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/OrganizationChart/demos/common.tsx?watch=parent';\n  export default \"import { OrganizationChart } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = {\\n  name: 'Alice Johnson',\\n  description: 'Chief Technology Officer',\\n  children: [\\n    {\\n      name: 'Bob Smith',\\n      description: 'Senior Software Engineer',\\n      children: [\\n        {\\n          name: 'Charlie Brown',\\n          description: 'Software Engineer',\\n        },\\n        {\\n          name: 'Diana White',\\n          description: 'Software Engineer',\\n        },\\n      ],\\n    },\\n    {\\n      name: 'Eve Black',\\n      description: 'IT Support Department Head',\\n      children: [\\n        {\\n          name: 'Frank Green',\\n          description: 'IT Support Specialist',\\n        },\\n        {\\n          name: 'Grace Blue',\\n          description: 'IT Support Specialist',\\n        },\\n      ],\\n    },\\n  ],\\n};\\n\\nexport default () => <OrganizationChart data={data} containerStyle={{ height: 300 }} />;\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/docs/guide/demos/WeatherCard/style.ts?watch=parent';\n  export default \"import { styled } from 'styled-components';\\n\\nconst StyledComponent = styled.div`\\n  width: 560px;\\n  background-color: #60a5fa;\\n  border-radius: 10px;\\n\\n  .locationSection {\\n    display: flex;\\n    flex-direction: column;\\n    padding: 18px 25px;\\n  }\\n\\n  .temperatureWrapper {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n  }\\n\\n  .temperatureDetails {\\n    display: flex;\\n    align-items: center;\\n    gap: 40px;\\n  }\\n\\n  .imageIcon {\\n    flex-shrink: 0;\\n    width: 36px;\\n    height: 36px;\\n    border-radius: 10px;\\n  }\\n\\n  .currentTemperature {\\n    color: #feffff;\\n    font-size: 25px;\\n    font-weight: bold;\\n  }\\n\\n  .locationName {\\n    color: #feffff;\\n    font-size: 24px;\\n    font-weight: bold;\\n  }\\n\\n  .weatherDetails {\\n    display: flex;\\n    align-items: center;\\n    margin-top: 16px;\\n    justify-content: space-between;\\n    font-size: 14px;\\n  }\\n\\n  .humiditySection {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: flex-start;\\n    min-width: 82px;\\n  }\\n\\n  .attributeLabel {\\n    min-width: 56px;\\n    margin-right: 2px;\\n    margin-left: 2px;\\n    color: #dbeafe;\\n  }\\n\\n  .uvIndexValue {\\n    color: #fff;\\n    font-size: 12px;\\n  }\\n\\n  .windSection {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: flex-start;\\n    margin-left: 20px;\\n  }\\n\\n  .windSpeedLabel {\\n    color: #dbeafe;\\n  }\\n\\n  .windSpeedValue {\\n    color: #feffff;\\n  }\\n\\n  .cloudinessSection {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n\\n  .cloudinessLabel {\\n    color: #dbeafe;\\n  }\\n\\n  .cloudinessValue {\\n    align-self: flex-start;\\n    color: #fff;\\n  }\\n\\n  .uvIndexSection {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n\\n  .uvIndexLabel {\\n    margin-left: 2px;\\n    color: #dbeafe;\\n  }\\n\\n  .uvIndexValue {\\n    color: #fff;\\n  }\\n`;\\n\\nexport default StyledComponent;\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/ConfigProvider/demos/plot-theme.tsx?watch=parent';\n  export default \"import { ConfigProvider, GPTVis } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst content = `\\n ~~~vis-chart\\n{\\n  \\\"type\\\": \\\"line\\\",\\n  \\\"data\\\": [\\n    { \\\"time\\\": \\\"2015 年\\\", \\\"value\\\": 1700, \\\"group\\\": \\\"出生人口\\\" },\\n    { \\\"time\\\": \\\"2015 年\\\", \\\"value\\\": 965, \\\"group\\\": \\\"死亡人口\\\" },\\n    { \\\"time\\\": \\\"2016 年\\\", \\\"value\\\": 1500, \\\"group\\\": \\\"出生人口\\\" },\\n    { \\\"time\\\": \\\"2016 年\\\", \\\"value\\\": 846, \\\"group\\\": \\\"死亡人口\\\" },\\n    { \\\"time\\\": \\\"2017 年\\\", \\\"value\\\": 1200, \\\"group\\\": \\\"出生人口\\\" },\\n    { \\\"time\\\": \\\"2017 年\\\", \\\"value\\\": 782, \\\"group\\\": \\\"死亡人口\\\" },\\n    { \\\"time\\\": \\\"2018 年\\\", \\\"value\\\": 1250, \\\"group\\\": \\\"出生人口\\\" },\\n    { \\\"time\\\": \\\"2018 年\\\", \\\"value\\\": 762, \\\"group\\\": \\\"死亡人口\\\" },\\n    { \\\"time\\\": \\\"2019 年\\\", \\\"value\\\": 1290, \\\"group\\\": \\\"出生人口\\\" },\\n    { \\\"time\\\": \\\"2019 年\\\", \\\"value\\\": 862, \\\"group\\\": \\\"死亡人口\\\" },\\n    { \\\"time\\\": \\\"2020 年\\\", \\\"value\\\": 1100, \\\"group\\\": \\\"出生人口\\\" },\\n    { \\\"time\\\": \\\"2020 年\\\", \\\"value\\\": 962, \\\"group\\\": \\\"死亡人口\\\" }\\n  ],\\n  \\\"axisXTitle\\\": \\\"year\\\",\\n  \\\"axisYTitle\\\": \\\"count\\\"\\n}\\n~~~`;\\n\\nexport default () => (\\n  <ConfigProvider plot={{ theme: { type: 'academy' } }}>\\n    <GPTVis>{content}</GPTVis>\\n  </ConfigProvider>\\n);\\n\";;\n  ","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/PathMap/demos/line.tsx?watch=parent';\n  export default \"import { PathMap } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst data = [\\n  {\\n    points: [\\n      { longitude: 120.130638, latitude: 30.219835, label: '石屋洞' },\\n      { longitude: 120.128125, latitude: 30.219386, label: '满觉陇' },\\n      { longitude: 120.118362, latitude: 30.217175, label: '杨梅岭' },\\n      { longitude: 120.112958, latitude: 30.207319, label: '理安寺' },\\n      { longitude: 120.11335, latitude: 30.202395, label: '九溪烟树' },\\n    ],\\n  },\\n  {\\n    points: [\\n      { longitude: 120.100549, latitude: 30.236875, label: '飞来峰' },\\n      { longitude: 120.101406, latitude: 30.240826, label: '灵隐寺' },\\n      { longitude: 120.105337, latitude: 30.236818, label: '天竺三寺' },\\n    ],\\n  },\\n  {\\n    points: [\\n      { longitude: 120.116979, latitude: 30.252876, label: '杭州植物园' },\\n      { longitude: 120.127654, latitude: 30.245663, label: '杭州花圃' },\\n      { longitude: 120.135764, latitude: 30.251448, label: '苏堤' },\\n    ],\\n  },\\n  {\\n    points: [\\n      { longitude: 120.130095, latitude: 30.207505, label: '虎跑公园' },\\n      { longitude: 120.145323, latitude: 30.214993, label: '玉皇飞云' },\\n      { longitude: 120.155057, latitude: 30.232985, label: '长桥公园' },\\n    ],\\n  },\\n];\\nconst routeData = data.map((item) => {\\n  return {\\n    path: item,\\n    markers: item.points,\\n  };\\n});\\n\\nconst markerStyle = {\\n  iconPath:\\n    'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ufrWTqCNCScAAAAAAAAAAAAADmJ7AQ/original',\\n  width: 5,\\n  anchorY: 1,\\n  label: {\\n    color: '#735142',\\n    fontSize: 10,\\n    bgColor: '#ffffff',\\n  },\\n};\\n\\nconst pathStyle = {\\n  color: '#86f',\\n  width: 1,\\n  dottedLine: true,\\n};\\n\\nexport default () => {\\n  return (\\n    <PathMap\\n      data={routeData}\\n      pathStyle={pathStyle}\\n      markerStyle={markerStyle}\\n      mapType=\\\"amap://styles/2acc71263b1344d93a902db8df1c8b68\\\"\\n    />\\n  );\\n};\\n\";;\n  ","import type EventEmitter from '@antv/event-emitter';\nimport React from 'react';\n\ntype GPTVisContextValue = {\n  eventBus: EventEmitter;\n};\n\nexport const GPTVisContext = React.createContext<GPTVisContextValue>(null as any);\n\nexport function useGPTVisContext<T = GPTVisContextValue>() {\n  const context = React.useContext(GPTVisContext);\n  if (context === undefined || Object.keys(context).length === 0) {\n    throw new Error(`useGPTVisContext must be used within a GPTVisContext.Provider`);\n  }\n\n  return context as T;\n}\n","import { ConfigProvider, theme as antdTheme } from 'antd';\nimport { isArray } from 'lodash';\nimport { useContext } from 'react';\n\n/** 判断是否运用了 antd dark algorithm */\nexport const useAntdDarkAlgorithm = () => {\n  // 放到函数内部，避免用户使用 antd@4，theme 变量不存在情况！！！\n  const darkAlgorithm = antdTheme?.darkAlgorithm;\n\n  const config = useContext(ConfigProvider.ConfigContext);\n  const currentAlgorithm = config.theme?.algorithm;\n\n  if (isArray(currentAlgorithm) && currentAlgorithm.includes(darkAlgorithm)) return true;\n  return !!darkAlgorithm && currentAlgorithm === darkAlgorithm;\n};\n","\n  import '/home/runner/work/GPT-Vis/GPT-Vis/src/Area/demos/stack.tsx?watch=parent';\n  export default \"import { Bubble, type BubbleProps } from '@ant-design/x';\\nimport { Area, ChartType, GPTVisLite, withChartCode } from '@antv/gpt-vis';\\nimport React from 'react';\\n\\nconst markdownContent = `\\n当然了，以下是为你绘制的一个面积图\\n\\n\\\\`\\\\`\\\\`vis-chart\\n{\\n  \\\"type\\\": \\\"area\\\",\\n  \\\"data\\\": [\\n    {\\n      \\\"time\\\": \\\"1974\\\",\\n      \\\"value\\\": 107,\\n      \\\"group\\\": \\\"Gas flaring\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1974\\\",\\n      \\\"value\\\": 208,\\n      \\\"group\\\": \\\"Renewables\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1974\\\",\\n      \\\"value\\\": 356,\\n      \\\"group\\\": \\\"Fossil fuels\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1975\\\",\\n      \\\"value\\\": 173,\\n      \\\"group\\\": \\\"Gas flaring\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1975\\\",\\n      \\\"value\\\": 415,\\n      \\\"group\\\": \\\"Renewables\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1975\\\",\\n      \\\"value\\\": 364,\\n      \\\"group\\\": \\\"Fossil fuels\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1976\\\",\\n      \\\"value\\\": 117,\\n      \\\"group\\\": \\\"Gas flaring\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1976\\\",\\n      \\\"value\\\": 220,\\n      \\\"group\\\": \\\"Renewables\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1976\\\",\\n      \\\"value\\\": 373,\\n      \\\"group\\\": \\\"Fossil fuels\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1977\\\",\\n      \\\"value\\\": 122,\\n      \\\"group\\\": \\\"Gas flaring\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1977\\\",\\n      \\\"value\\\": 225,\\n      \\\"group\\\": \\\"Renewables\\\"\\n    },\\n    {\\n      \\\"time\\\": \\\"1977\\\",\\n      \\\"value\\\": 382,\\n      \\\"group\\\": \\\"Fossil fuels\\\"\\n    }\\n  ],\\n  \\\"stack\\\": true,\\n  \\\"axisXTitle\\\": \\\"year\\\",\\n  \\\"axisYTitle\\\": \\\"value\\\"\\n}\\n\\\\`\\\\`\\\\`\\n`;\\n\\nconst bgStyle = {\\n  display: 'grid',\\n  gridGap: '20px 0',\\n  background: '#f7f7f7',\\n  padding: 20,\\n  borderRadius: 8,\\n  overflow: 'auto',\\n};\\n\\nconst CodeComponent = withChartCode({\\n  components: { [ChartType.Area]: Area },\\n  style: { width: 350 },\\n});\\n\\nconst RenderMarkdown: BubbleProps['messageRender'] = (content) => (\\n  <GPTVisLite components={{ code: CodeComponent }}>{content}</GPTVisLite>\\n);\\n\\nexport default () => (\\n  <div style={bgStyle}>\\n    <Bubble\\n      placement=\\\"end\\\"\\n      content=\\\"面积图可视化一下我的数据\\\"\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2Q5LRJ3LFPUAAAAAAAAAAAAADmJ7AQ/fmt.webp',\\n      }}\\n      styles={{ content: { background: '#ebebeb', maxWidth: '60%' } }}\\n    />\\n    <Bubble\\n      content={markdownContent}\\n      messageRender={RenderMarkdown}\\n      avatar={{\\n        src: 'https://mdn.alipayobjects.com/huamei_je4oko/afts/img/A*6LRBT7rjOkQAAAAAAAAAAAAADsZ-AQ/original',\\n      }}\\n      variant=\\\"shadow\\\"\\n      styles={{ content: { background: '#fff' } }}\\n    />\\n  </div>\\n);\\n\";;\n  ","export function urlToMarkerId(url: string) {\n  let hash = 0;\n  if (url.length > 0) {\n    for (let i = 0; i < url.length; i++) {\n      hash = ((hash << 5) - hash + url.charCodeAt(i)) | 0;\n    }\n  }\n  // 将哈希值转换为四位数\n  const id = Math.abs(hash % 10000)\n    .toString()\n    .padStart(4, '0');\n  return `marker-${id}`;\n}\n","import type { HistogramConfig } from '@ant-design/plots';\nimport { Histogram as ADCHistogram } from '@ant-design/plots';\nimport React from 'react';\nimport { usePlotConfig } from '../ConfigProvider/hooks';\nimport type { BasePlotProps } from '../types';\n\n// binNumber和binWidth为互斥属性，选其一即可\ntype ADCHistogramConfig = Omit<HistogramConfig, 'binWidth'>;\n\nexport type HistogramProps = BasePlotProps<number> & Partial<HistogramConfig>;\n\nconst defaultConfig = (props: HistogramConfig): ADCHistogramConfig => {\n  const { binField = (d: number) => d, binNumber } = props;\n\n  return {\n    binField,\n    binNumber,\n    style: { inset: 0.5 },\n  } as ADCHistogramConfig;\n};\n\nconst Histogram = (props: HistogramProps) => {\n  const config = usePlotConfig<HistogramConfig>('Histogram', defaultConfig, props);\n\n  return <ADCHistogram {...config} />;\n};\n\nexport default Histogram;\n"],"names":[],"mappings":"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"}